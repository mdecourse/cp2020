<h1>About</h1>
<p>這裡是國立虎尾科技大學機械設計工程系大一的計算機程式課程網頁.</p>
<p>CP2020 將在 <a href="https://kaggle.com">https://kaggle.com</a>, <a href="https://colab.research.google.com">https://colab.research.google.com</a> 以及可攜程式系統上進行.</p>
<p>以下是 CP2020 課程進行流程:</p>
<p style="padding-left: 30px;">W1 學員登入學校配發的 @gm 郵件帳號後, <a href="https://forms.gle/3hfnf6D2QCemdDQn9">填寫基本資料</a></p>
<p style="padding-left: 30px;">W1 告知將利用 <a href="https://gitter.im/">Gitter</a> 進行課程議題討論 (其餘各種問題可以至 <a href="https://forum.eng.nfu.edu.tw">discourse</a> 討論)</p>
<p style="padding-left: 60px;"><a href="https://gitter.im/mdecourse/cp2020">https://gitter.im/mdecourse/cp2020</a></p>
<p style="padding-left: 60px;"><a href="https://forum.eng.nfu.edu.tw">https://forum.eng.nfu.edu.tw</a> </p>
<p style="padding-left: 30px;">W1 就電腦軟硬體與網路環境的使用進行介紹</p>
<p style="padding-left: 30px;">W2 學員建立 <a href="https://github.com/">Github</a>, <a href="https://gitlab.com">Gitlab,</a> <a href="https://www.heroku.com/">Heroku</a> 與 <a href="https://www.authorea.com/">Authorea</a> 帳號</p>
<p style="padding-left: 60px;">Github: 各學員在學號帳號下建立 cp2020 倉儲.</p>
<p style="padding-left: 60px;">Gitlab: 各學員將 cp2020 倉儲同步至 gitlab.</p>
<p style="padding-left: 60px;">Heroku: 雲端應用程式系統, 可部署靜態網頁與網際 Python 程式.</p>
<p style="padding-left: 60px;">Authorea: 各組用來編寫協同期末專案報告 pdf 檔案.</p>
<p style="padding-left: 30px;"><span>W2</span> 學員利用 <a href="https://pages.github.com/">Github Pages</a> 與 <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a> 建立個人網頁</p>
<p style="padding-left: 30px;">W2 學員學習如何利用 Git 與 Github 維護個人網頁</p>
<p style="padding-left: 30px;">Ｗ3 統整 W1 與 W2 教材內容至各學員個人網頁</p>
<p style="padding-left: 30px;">Ｗ3 完成亂數分組,  每班分成五組</p>
<p style="padding-left: 30px;">W4 - W9 Python 基本語法與功能</p>
<p style="padding-left: 30px;">Ｗ10 - W14 分組 Python 專案</p>
<p style="padding-left: 30px;">Ｗ15 - W18 分組總結報告</p>
<h4>電腦輔助設計室與協同設計室行事曆</h4>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei">全頁檢視</a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p>
<h2>工程師的三道牆</h2>
<p>2021/01/19</p>
<p>很意外地發現有同學認為計算機程式所使用的教材與教學流程及態度, 是在調侃所有上課的學生.<br/><br/>其實現在 KMOLab 所開設課程目的是將擋在機械工程師面前的三道牆, 直接利用課程講授的過程, 一一呈現,讓大家有及時找出突破這三道障礙的機會, 不僅讓各自的潛能有所發揮, 同時也希望大家能更自在地面對未來的更多挑戰.<br/><br/>這三道牆分別是:</p>
<p style="padding-left: 30px;"><br/>理論基礎障礙<br/>實務練習障礙<br/>確立目標障礙<br/><br/></p>
<h4>理論基礎障礙</h4>
<p>所謂的理論基礎障礙就是技職體系學生在高中階段經常疏忽的英文, 數學與邏輯思考與獲取學問的基本能力<br/><br/>也就是英文聽說讀寫的基本能力,<br/>數學基本能力與了解如何透過邏輯思考解題, 並且學習如何發問, 如何與人協同合作解決問題的能力</p>
<p></p>
<h4>實務練習障礙</h4>
<p>第二道牆則是實務練習障礙, 許多人不願意花時間在突破上述第一道障礙的原因, 通常是因為不知道學習這些相對抽象的知識有甚麼用處? 因此, 為了凸顯突破第一道牆的重要性, 就必須要透過實際的課程案例, 讓大家了解一旦能突破第一道牆的障礙後, 養成持續學習這些理論基礎內容之後, 就可以相對用比較有效率的方式解決各種問題.<br/>但是這需要學習者付出時間與耐性, 當面對完全陌生議題時, 就必須檢討是否第一道牆仍然卡在自己與解決方案中間. 然後用心不斷思考,  探索與練習之後, 若還是無法解決問題. 就必須要先試著描述問題後再尋求他人的協助.<br/>假如能有以上的正確學習態度, 就有機會在面對各種問題時, 持續突破前面的兩道牆, 然後看到自己所追求的第三道牆, 並且此後能夠竭盡全力, 翻越第三道牆的障礙, 積極達成預定目標.</p>
<h4>確立目標障礙</h4>
<p>你的人生目標是甚麼?</p>
<p></p><h2>評分</h2>
<p><a href="https://docs.google.com/forms/d/e/1FAIpQLSdDN22BdIxF5IDiT9vnovehpFBBjmPVylJiLy19XoJxG0GMrA/viewform?usp=sf_link">計算機程式自評與互評表單</a> (每週課程結束後, 請登入 @gm 後填寫)</p>
<p><img alt="" height="379" src="/images/feedback loop student-teacher interaction.png" width="800"/></p>
<p>(上圖取自 https://link.springer.com/book/10.1007/978-3-642-03446-6)</p>
<p>本課程的評分標準:</p>
<ol>
<li>從未遲到者得 10%</li>
<li>從未缺席且從未無正當理由離席超過 15 分鐘者得 20%</li>
<li>從未缺交各週作業且從未抄襲他人作業且從未不當引用網路資料者得 30%</li>
<li>作業與報告內容充實, 每一項課程內容都拍攝具參考價值之教學影片者得 20%</li>
<li>完成具體且創新之課程內容改進項目, 並能積極協助組員解決各種難題者得 10%</li>
<li>個人之倉儲內容, 網頁, 網誌與簡報內容均令人嘆為觀止者得 10%</li>
</ol>
<p>根據上述課程評分標準, 由組員之自評成績決定課程期中成績, 視為本課程之學員期望成績, 期中考後, 則依據各週之組員自評成績, 組員互評成績與教師評分成績, 按照下列流程計算學員之學期成績.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
根據評分表單中的 自評分數, 互評得分, 教師評分, 計算學員課程成績
'''
# diff 函式傳回兩輸入分數的絕對差值 
def diff(分數1, 分數2):
    return abs(分數1 - 分數2)
     
# getHigh函式傳回兩分數中較高者
def getHigh(分數1, 分數2):
    if  分數1 &gt; 分數2:
        return 分數1
    else:
        return 分數2

# getLow 函式傳回兩分數中較低者
def getLow(分數1, 分數2):
    if  分數1 &lt; 分數2:
        return 分數1
    else:
        return 分數2

# 分組評分函式取自評與教師評分比較, 若差距大於 5 分取其低者
# 否則依自評 40%, 教師 60% 計算
def 分組評分(自評分數, 教師評分):
    return getLow(自評分數, 教師評分)
    if diff(自評分數, 教師評分) &gt; 5:
        return getLow(自評分數, 教師評分)
    else:
        return int(自評分數*0.4 + 教師評分*0.6)

# 全班比分函式取互評與分組評分比較, 若差距小於 5 分取其高者
# 否則依互評得分 40%, 分組評分 60% 計算     
def 全班比分(互評得分, 分組評分):
    if diff(互評得分, 分組評分) &lt; 5:
        學員成績 = getHigh(互評得分, 分組評分)
    else:
        學員成績 = int(互評得分*0.4 + 分組評分*0.6)
    return 學員成績

# 學員之學期成績依照上述分組評分與全班比分函式計算 
def 學員成績(自評分數, 互評得分, 教師評分):
    學員課程成績 = 全班比分(互評得分, 分組評分(自評分數, 教師評分))
    return 學員課程成績

# 利用迴圈從 50 起每次增量 5 分, 分別列出各評分組合下的成績計算結果    
for i in range(10):
    self_score = 50 + i*5
    for j in range(10):
        peer_score = 50 + j*5
        for k in range(10):
            teacher_score = 50 + k*5
            print(self_score, peer_score, teacher_score, "=", 學員成績(self_score, peer_score, teacher_score))</pre><h2>討論區</h2>
<p><a href="https://gitter.im/mdecourse/cp2020">https://gitter.im/mdecourse/cp2020</a> (計算機程式課程相關)</p>
<p><a href="https://forum.eng.nfu.edu.tw">https://forum.eng.nfu.edu.tw</a>  (其他議題)</p>
<h2>開發環境</h2>
<p>利用隨身碟中的可攜程式環境</p>
<p style="padding-left: 30px;">從 <a href="http://a.kmol.info:88">http://a.kmol.info:88</a> (只能從系上 IPv6 網段連接)下載</p>
<p style="padding-left: 30px;">必須自行安裝所需模組與程式庫</p>
<p style="padding-left: 30px;">必須自行配置加速硬體與操作系統程式庫</p>
<p><a href="https://kaggle.com">https://kaggle.com</a></p>
<p style="padding-left: 30px;">主要用於 Data Science 相關程式開發與競賽用</p>
<p style="padding-left: 30px;">直接利用瀏覽器執行程式, 近端電腦無需安裝模組與套件</p>
<p style="padding-left: 30px;">可以使用雲端硬體加速功能</p>
<p style="padding-left: 30px;">可以多人協同編寫同一程式, 編寫的程式可以直接在網路上分享</p>
<p><a href="https://colab.research.google.com">https://colab.research.google.com</a></p>
<p style="padding-left: 30px;">直接利用瀏覽器執行程式, 近端電腦無需安裝模組與套件</p>
<p style="padding-left: 30px;">可以使用 GPU 與 TPU 加速運算</p>
<p style="padding-left: 30px;">可以多人協同編寫同一程式, 編寫的程式可以直接在網路上分享</p>
<p style="padding-left: 30px;">colab <a href="https://colab.research.google.com/notebooks/basic_features_overview.ipynb">功能介紹</a></p>
<p>透過網際 brython 環境</p>
<p style="padding-left: 30px;"><a href="http://mde.tw/lab/content/Python.html">http://mde.tw/lab/content/Python.html</a></p>
<p style="padding-left: 30px;">僅支援部分 Python 功能</p>
<p style="padding-left: 30px;">執行速度較 CPython 慢許多</p>
<p></p>
<p></p><h2>MDE</h2>
<p>The following text taken from <a href="https://www.glassdoor.com">https://www.glassdoor.com</a>.</p>
<p>Mechanical Design Engineer</p>
<p>We design and manufacture advanced electric vehicles, battery packs, drive systems, and energy products that are changing the future of transportation and sustainable energy. We are building technically strong, fast-moving teams that pride themselves on superior execution.</p>
<p>Description: We are seeking an amazing Mechanical Engineer to lead full life cycle development of automated test equipment, for core test technologies. The position is based in Reno/Tahoe, Nevada. The candidate will revolutionize every facet of manufacturing test automation, and provide technical leadership to a superstar team.</p>
<p>Responsibilities</p>
<p>· Set the standard of technical and leadership excellence for the team. You will be capable of executing any level of test design to lead from the front.</p>
<p>· Develop innovative technologies for ultra-reliable testers, unit defect detection capabilities, and previously unimagined production rate scaling capabilities.</p>
<p>· Participate in initial equipment conceptual development and carefully balance product specifications, process requirements, layout complexity, cost, and lead-time limits.</p>
<p>· Able to define most efficient plan for testing, focusing on test time reduction and appropriate complexity to promptly release testers.</p>
<p>· Modeling and testing for stress, thermal, fluid, and mechanical aspects of machines/components, that perform effectively while exposed to daily abuse of a manufacturing environment.</p>
<p>· Embed with product design teams to drive design for test/manufacturing.</p>
<p>· Ensure test machines provide effective testing coverage, protect the unit under test, meet up time needs, and reduce cycle time requirements for scalable high volume manufacturing.</p>
<p>· Drive enhanced mechanical design standards, best practices, and tools to improve designs.</p>
<p>· Characterization and validation of new equipment for introduction to the production floor.</p>
<p>· Drive continuously increasing test automation, including robotics and actuator based test systems.</p>
<p>· Create outstanding documentation packages, train others in the maintenance and long term usage of the test systems.</p>
<p>· Team leadership, mentoring growing engineering team.</p>
<p>Requirements</p>
<p>· 1-3 years of experience designing best in class mechanical products and test automation systems.</p>
<p>· Ability to lead projects and architect the overall system design in cooperation with electrical and software test automation disciplines.</p>
<p>· Experience with initial equipment conceptual development and carefully balancing product specifications, process requirements, layout complexity, cost, and lead-time limits.</p>
<p>· Be able to perform required analysis to ensure a successful design (stress, strain, thermal, tolerance, cost and mass optimization, etc).</p>
<p>· Solid knowledge of heat transfer and thermal management.</p>
<p>· Expertise in material science of components used in mechanical design (metals, insulators, plastics, connectors, gaskets, etc).</p>
<p>· Desire to drive ultra-reliable, cost effective designs that beat schedules.</p>
<p>· Expertise in SolidWorks, CATIA, FEA simulation, GD&amp;T, and design for reliability concepts.</p>
<p>· Experience in deploying test machines in a large scale manufacturing environment and ability to come up with rapid methods for scaling and duplication of test equipment.</p>
<p>· Remain engaged, proactive and positive in tough circumstances, owning assignments and taking full accountability for overall team success.</p>
<p>#######################</p>
<p>Mechanical Design Engineer - Drive Systems</p>
<p>Design and develop mechanical parts and systems while working closely with electromagnetic, manufacturing and power electronics engineers.<br/> <br/>Design and develop electric machines and mechanical power transmission components. Design plastics, sheet metal, and castings for electric vehicle drive systems. Conduct thermal and mechanical modelling and testing of systems and components. Validate components and prototypes in bench and vehicle configurations.</p>
<p>Collaborate with manufacturing engineers and various suppliers to transition concepts to production. Utilize understanding of materials and manufacturing processes to collaborate with various suppliers and other internal team members. Use CAD modelling techniques and CATIA v5 to design and develop electric machines and mechanical components for testing and manufacturing.</p>
<p>Requirements:</p>
<p>Five (5) years of progressive experience in the job offered or five (5) years of experience in<br/> mechanical engineering for automotive applications.</p>
<p>Three (3) years of experience in the job offered or three (3) years of experience in mechanical engineering for automotive applications.</p>
<p>CAD modelling with plastics and metals parts<br/> CATIA v5 experience with complex parts and assemblies<br/> Dimensional drawings with expertise in ANSI Y14.5 GD&amp;T<br/> Manufacturing equipment design and implementation Dynamometer test requirements and data analysis preferred</p>
<p><span>#######################</span></p>
<p><br/>Mechanical Engineer</p>
<p>Role</p>
<p>Majority of work will center around developing designs for the Vehicle Production plant and surrounding facilities. This position will mentor junior engineers/designers and may require managing outside consultants in order to meet project design schedules. This candidate must be able to prioritize and manage workload on multiple projects to maintain high quality and productivity.</p>
<p>Responsibilities</p>
<p>Responsible for developing mechanical design packages for permitting and construction<br/> Mentor and supervise engineers/designers to develop equipment datasheets, construction documents and specifications</p>
<p>Be a technical resource for engineers and designers<br/> Review and/or develop designs that are cost effective, Code compliant while meeting our quality and schedule requirements</p>
<p>Able to develop high level cost estimates with material take off information for all sizes of projects in short time frames<br/> Communicate effectively and timely to stakeholders and engineering team</p>
<p>Must be able to prioritize and manage heavy workload to ensure high quality and productivity</p>
<p>Requirements</p>
<p>Minimum of 3 years HVAC and Plumbing/FP design experience<br/> Familiar with International Energy Conservation, Mechanical, Plumbing and Fire Protection Codes, NFPA standards, SMACNA duct construction standards, ACGIH Ventilation Practices, and ASHRAE 62 and 90.1<br/> Professional Engineer registration for NV and/or California or ability to be registered within a year<br/> Proficient in the use of following applications Trane or Carrier HAP, Revit, AutoCAD, Microsoft Office Suite. Experience in Caesar 2 and Pipe-flo are a plus.<br/> Familiar with following types of calculations: duct static pressure drop, pump head, NPSHa, fuel gas pipe sizing, steam and condensate pipe sizing.<br/> Plumbing and Fire Protection design experience<br/> Designs using the following equipment types: open and/or closed circuit cooling towers, water and air cooled chillers, gas fired and electric water boilers, large air handling units with heating/cooling coils and/or gas fired heaters, packaged air to air heat pumps, water to water heat pumps, dust collectors, humidifiers, dehumidifiers, fans, and pumps.<br/> Knowledge or experience with the following is a plus: Abatement systems (thermal oxidizers, dry and wet scrubbers), Heat Exchangers (shell/tube, plate/frame, brazed fin), Control Valves and Instrumentation, Heat Recovery Systems.<br/> Able to specify ductwork material and size for various ducted exhaust systems and pressure classes<br/> Able to specify pipe sizes to meet Energy Code and to specify material and fitting types for various hydronic and steam systems<br/> Knowledge and experience with writing sequences of operation for HVAC systems.<br/> Construction Administration experience including field reports, punch lists, answering RFIs, and reviewing shop drawings<br/> Direct experience in the preparation of mechanical contract drawings and engineering specifications<br/> </p>
<p><span>#######################</span></p>
<p>Mechanical Design Engineer</p>
<p>The Role:</p>
<p>We are looking for a highly motivated and talented individual to join the Production Test Engineering(PTE) Team. The mechanical design engineer is responsible for test equipment design and maintenance of end of line Powertrain Test Equipment for the Tesla Model 3 &amp; energy products as well as supporting design, production &amp; quality teams on future Tesla programs. Mechanical design engineer within the PTE Team requires strong engineering skills, a passion to push the boundaries of technology, and the drive to make our designs successful. You must have a genuine passion for engineering products that will fundamentally change the world’s energy infrastructure, and thrive working in a fast-paced, entrepreneurial environment. The PTE Team collaborates closely with other departments, requiring a team player mentality. Our team requires each individual to be self-motivated and<br/>disciplined.</p>
<p>Responsibilities</p>
<p>Work closely with the design team to develop low cost, highly reliable, and automated test<br/> fixtures for powertrain end of line testing<br/> Troubleshoot, define, and initiate corrective actions for field failures as well as production issues<br/> Advise various stakeholders on the technical issues that affect the product design, production<br/> cycle-time &amp; cost<br/> Maintains up-to-date thorough knowledge of applicable product design and test specification changes<br/> Optimize designs via analytical, numerical and/or empirical assessments<br/> Develop and detail design concepts in CATIA V5 (soon to be V6) &amp; fabricate functional prototypes and test methods to vet out new concepts and automation for optimizing performance and cost<br/> Determine required tolerances using GD&amp;T and produce drawings for release to suppliers<br/> Conduct DFMEA and Fault Tree analysis Provide test procedures for Factory Acceptance Testing (FAT) Validation and characterization of new equipment and fixtures for introduction to the production floor<br/> Specification development for test equipment and providing technical support to manufacturing<br/> in determining proper test equipment and testing procedures per industry standards<br/> Research and benchmark competitive technologies and innovative designs<br/> Support production ramp &amp; ongoing/continuous product/process improvement<br/> Maintenance of test fixtures and test equipment calibration records<br/> Training test technicians and line operators on test processes</p>
<p>Requirements</p>
<p>Experience and knowledge in fixture/equipment design<br/> Experience with AutoCAD, CATIA V6 &amp; Solidworks<br/> Knowledge of all applicable electrical standards related to EV Powertrain Design<br/> Ability to multi-task and work cross-functionally<br/> Ability to perform various roles and responsibilities from day to day, including, but not limited to test procedure, design test fixtures, interaction with manufacturing, production, design engineers and supply chain management<br/> Strong troubleshooting skills required<br/> Strong interpersonal skills and effective communicator<br/> Good Attendance, Initiative, responsible follow-through, and a willingness to help<br/> Basic programming knowledge like c, python, c++, HTML plus</p>
<p>Required Soft Skills</p>
<p>Detail-oriented personality with solid documentation and reporting skills Passionate about product design.Good Attendance, Initiative, responsible follow-through, and a willingness to help<br/> Basic programming knowledge like c, python, c++, HTML plus <br/> Ambitious</p>
<p><br/><span>#######################</span></p>
<p>The Role</p>
<p>As a Mechanical Engineer on the Low Voltage Wire Harness team, you will own design for a subset of electrical wire harnesses in Tesla vehicles, both in development and in production, and also in service. You will be responsible for all stages: concept, requirements definition (iterative), prototype, detailed CATIA (V6) model, 2D drawing synchronized with electrical circuitry provided by the Wire Harness Electrical Engineer, vendor selection (support to Supply Chain), design validation and optimization in Beta and RC phases, volume tooling and processes for Start of Production and production ramp-up. Life-cycle improvements and cost reductions as needed.</p>
<p>Responsibilities</p>
<p>Make design decisions, and provide leadership in resolving electrical/physical integration and optimization issues with other internal Tesla parties on a daily basis, namely for example: Body, Low Voltage Systems, Infotainment, Audio, PCBA Design, Chassis, Interiors, Seats, HVAC, Environmental/Vibe Testing, CATIA Integration, CAE Crash Analysis, Vehicle Durability and Crash Test, Manufacturing Engineering, etc.</p>
<p>Design to significantly reduce mass and volume/space and to optimize wire bundle routing in the vehicle, minimize NVH (Noise, Vibration, Harshness), prevent possibility of moisture ingress/damage</p>
<p>Work with Suppliers for Design-for-Manufacturability to reduce assembly complexity, cost and lead time reduction</p>
<p>Design components for ease and efficiency of manufacture, as well as ease and efficiency of installation in vehicles. Work with manufacturing and assembly process engineers for successful implementation.</p>
<p>Work with SIE (Supplier Industrial Engineer) to set up and review production lines at suppliers, including any associated mechanical components</p>
<p>Support RC (Release Candidate – pre-production) with quick-turn parts and make sure installation works properly as design-intended incl. supporting with a subassembly fixture design prior to full vehicle being available</p>
<p>Highlight design concerns (such as high insertion force on connectors, grommet installation and sealing issues) or reliability concerns on detailed design features and drive the solution progress to remove these concerns through weekly tests, follow ups, upper management deep-dive reviews and cross functional team reviews.</p>
<p>Closely work with Reliability team to ensure proper testing on finished designs (vibe, corrosion, torque-to-failure, EMI/shielding, etc.)</p>
<p>Required Skills</p>
<p>Mechanical Engineering: thermal, heat dissipation, vibration, strength, durability, corrosion-prevention, materials, etc</p>
<p>Design-for-Manufacturability, including Automation</p>
<p>CATIA 3D modeling</p>
<p>Mentor Graphics Capital Harness 2D engineering drawing creation</p>
<p>ENOVIA part numbering, drawing maintenance, ECR’s, deviations, etc</p>
<p>Quick-turn prototyping using a variety of techniques</p>
<p>Project task coordination and tracking using JIRA, Confluence, etc</p>
<p>Specifying and directing Environmental Lab testing, CAE analysis, etc</p>
<p><span>#######################</span></p>
<p>The Role</p>
<p>As Senior Mechanical Design Engineer, Lighting Systems, you will be responsible for the design, release and launch of lighting systems for future Tesla vehicle product lines. You will work alongside the most creative and resourceful designers and engineers in the world on a lean and agile team. From concept definition at the industrial design and clay modeling phase, to prototype creation, production design release and launch, you will own the product design through all stages of the design cycle developing the style, integrating the latest technologies and delivering industry-leading lighting systems for all global markets. You will be reporting to the Engineering Manager of Vehicle Lighting Systems within Vehicle Engineering.</p>
<p>Responsibilities</p>
<p>Engineer, develop and execute world-class automotive lamp systems that meet styling intent and are compliant to regulatory requirements.<br/>Work from clay model feasibility through to production launch.<br/>Collaborate with Tesla’s design/styling team developing function layouts that meet legal compliance and support the design theme integrating feasible solutions for new technology adoption.<br/>Lead cross functional integration of lighting systems with the Tesla design/styling team, engineering teams such as body, exteriors, 12V electronics and manufacturing as well as with Tesla supply chain teams and supplier engineers to achieve technical feasible designs.<br/>Participate in the iterative process with all stakeholders to deliver the optimal balance of form, function, performance and cost.<br/>Direct Tesla and supplier engineering lamp development and CAD designs.<br/>Maintain all required product development documentation including SOR, DFMEA, DVP&amp;R.</p>
<p>Requirements</p>
<p>Minimum of 5 years of product engineering experience, with 3 years and/or 2 product cycles specifically in automotive lamp system and component design.<br/>Bachelor’s degree in mechanical engineering (Masters preferred).<br/>Successful execution of automotive lamp programs with a strong preference for experience with full LED lighting systems.<br/>Clear understanding of latest lighting technologies including lightguides, light blades, adaptive forward lighting (AFS) systems, Laser, OLED, Matrix, DMD, etc.<br/>Demonstrate technical aptitude, creativity in design, and the ability to execute feasible solutions to complex engineering problems.<br/>Complete understanding of lighting homologation requirements: FMVSS 108 and ECE R48 in particular.<br/>Strong understanding of optical system development process.<br/>Knowledge of Design for Manufacturing principles including GD&amp;T, assembly and dimensional engineering principles in design.<br/>Plastic component design experience with CATIA V5/V6 strongly preferred.<br/>Demonstrate exceptional ability, management of difficult projects with tight timing constraints and provide examples of notable achievements throughout your career.<br/>Tesla participates in the E-Verify Program</p>
<p><span>#######################</span></p>
<p>Mechanical Engineer, Production Control</p>
<p>Description</p>
<p>This responsibility includes coordinating daily workload and assignments and balancing headcount resources as needed to support the PC Equipment Engineering &amp; Maintenance organization. This role will also evaluate employees, work with employees on training/career plans, and recruit additional talent for the department.</p>
<p>The Equipment Engineer will perform these duties in addition to being the subject matter expert of the team, performing the same day-to-day work as members of their team, while also acting as the single point of contact for their team for all major communication.</p>
<p>The Role</p>
<p>The Equipment Engineer is responsible for designing, delivering, and managing equipment to support production of all Tesla products. We are looking for a talented and highly motivated individual to join the PC Equipment Engineering Team. This team is responsible for supporting all physical engineering needs of the Production Control Team, including designing equipment for part transport and staging, providing solutions to safety and ergonomic issue, as well as leading warehouse and process improvement and new product launch projects. The scope of equipment includes, but is not limited to: conveyors, lifts, ASRSs, robots, and mobile equipment including AGVs. Successful members of the team will be highly proactive and self-sufficient in pursuing improvement projects, will be able to multitask and refocus efforts immediately to meet constantly shifting demands in a fast-paced environment, and have exceptional leadership ability to drive cross functional collaboration projects to completion on or ahead of schedule.</p>
<p>This position reports to the Production Control – Equipment Engineering Manager.</p>
<p>Responsibilities</p>
<p>• Design equipment meeting interdepartmental needs and specifications.</p>
<p>• Creation of equipment drawings and specs, quotes, and purchase requisitions.</p>
<p>• Utilize DFMA principles in production creation and improvement projects.</p>
<p>• Develop business cases for improvement projects and equipment acquisitions.</p>
<p>• Order equipment to meet staffing, spares, and maintenance needs.</p>
<p>• Interface with suppliers for manufacturing feasibility, validation, and other engineering activities, as necessary.</p>
<p>• Deliver specifications, designs, analyses, and prototypes on time and within budget.</p>
<p>• Ensure designs are compatible with packaging, material-handling, and production processes and are appropriately serviceable.</p>
<p>• Support equipment -based process introductions and adjustments.</p>
<p>• Day to day coverage of production line equipment: respond to alarms, breakdowns, and Production requests quickly and efficiently to minimize downtime.</p>
<p>• Diagnoses equipment failures, finds root cause and communicates actions taken to the rest of the team.</p>
<p>• Become Expert Level Trainer on all machines in assigned area and be responsible for the level of knowledge of Shift technicians.</p>
<p>• Takes initiative to create, implement and improve PM documents and schedules.</p>
<p>• Perform major equipment repairs and rebuilds, (some weekends and holidays required).</p>
<p>• Participate in spare part analysis and inventory development, cost reduction and improvement.</p>
<p>• Work with Spares Coordinator and Maintenance Engineering to RMA faulty components and communicate needs to the vendor.</p>
<p>• Work with Process and Equipment engineering and other cross functional groups to resolve maintenance issues, improve equipment reliability, review procedures, and minimize equipment downtime.</p>
<p>• Investigate and implement countermeasures to prevent repetitive breakdowns.</p>
<p>• Active leader of a TPM team while taking on improvement projects to assist in improving the factory.</p>
<p>• Design and Implement Equipment Reliability Improvement Projects</p>
<p>Requirements</p>
<p>• Bachelor of Science or higher in mechanical engineering or similar field of study.</p>
<p>• Work efficiently and productively both independently and in team settings</p>
<p>• Communicate clearly using excellent written and verbal skills.</p>
<p>• Demonstrate talent for conceiving efficient design solutions to complex engineering challenges.</p>
<p>7+ years of experience performing similar work (Automotive industry experience preferred)</p>
<p>• Proficiency in CATIA V5, or similar 3D CAD software (Solidworks, ProE, Unigraphics, etc).</p>
<p>• Basic understanding of GD&amp;T as well as weld symbols.</p>
<p>• Experience with rapid prototyping and small to medium volume production.</p>
<p>• Knowledge of relevant manufacturing processes and a variety of engineering materials, fastening methods,</p>
<p>• Familiarity with designing any or all of the following: mobile &amp; stationary material handling equipment, towed dollies, racks, stands, lift-assists, and end-of-arm tools.</p>
<p>• 5+ years of experience performing similar work (Automotive industry experience preferred)</p>
<p>• Familiarity with industrial robots and controls systems.</p>
<p></p>
<p><span>#######################</span></p>
<p>The Role</p>
<p>The Senior Mechanical Design Engineer is responsible for inventing and shepherding design concepts into viable product offerings. The candidate should demonstrate a history of innovation, technical prowess, project management skills, a strong work ethic, and an ability to work cross-functionally.</p>
<p>Responsibilities</p>
<p>Design mechanical solutions for novel photovoltaic systems.<br/> Cross functional participation for product requirement definition<br/> Technical concept development / CAD creation of concepts<br/> Functional analysis by calculation/FEA<br/> Qualification of new technology platforms as mediums for design<br/> Prototype realization: hands-on manufacturing and/or project management of internal/external contract manufacturing<br/> Feasibility testing: create FMEA/test plans, work cross-functionally with Test. Field Applications, and Reliability Groups to execute test plans. Analyze resultant data<br/> Work with Manufacturing Engineering on product DFM. Support pilot rollout for product launch<br/> Collaborate with legal team to secure patents for new ideas</p>
<p>Requirements</p>
<p>Evidence of exceptional ability<br/> BS (or equivalent) in Mechanical Engineering, Industrial Engineering, or a related field<br/> 5 years of product design experience or an advanced degree in one of the above fields<br/> Experience with high volume product design and manufacturing preferred<br/> Must be proficient in Solidworks or similar CAD software, 3-D modeling and 3-D prototyping<br/> Must be available to travel 10% of time to visit suppliers, customers, and manufacturing lines. Some travel will be international<br/> Demonstrated record of creative problem solving skills<br/> Demonstrated record of successfully managing multiple projects simultaneously<br/> Demonstrated record of success working in a cross disciplinary, multi-cultural environment<br/> Demonstrated record of success working in a high pressure, tight deadline situation.<br/> Exceptional written, oral, interpersonal, and presentation skills<br/> Self-Driven, self-motivated, and able to make responsible decisions</p>
<p><br/><span>#######################</span><br/> <br/> Responsibility</p>
<p>Develop innovative and state of the art mechanical designs for high volume manufacturing utilizing 3D CAD and supported by analysis<br/> Create prototypes and support the development of manufacturing processes and automation<br/> Drive cross functional collaboration with CAE engineers, manufacturing engineers, suppliers, and test engineers to transition conceptual designs to production<br/> Determine required tolerances using GD&amp;T and produce 2D drawings for release to suppliers<br/> Conduct DFMEA and Fault Tree analysis<br/> Author documentation and requirements and deliver technical presentations<br/> Research and benchmark competitive technologies</p>
<p>Requirements</p>
<p>B.S. in Mechanical Engineering (or equivalent)<br/> Knowledge of material properties and applications<br/> Strong communication and a team mentality<br/> Understanding of and prior experience designing for one or more high volume manufacturing processes including stamping, drawing, injection molding, precision sheet metal, die cutting, metal welding<br/> Skills that are a plus<br/> Familiarity with Lithium-ion cells, module and battery pack design<br/> Experience designing parts for mass production with automated assembly<br/> Making or modifying parts in a machine shop<br/> Data acquisition and test equipment<br/> Structural finite element analysis</p>
<p><br/> #####################<br/> <br/> Mechanical Designers on the Battery Module Team We don’t just design things, we make<br/>them. The role requires strong fundamentals, a passion to push the boundaries of technology<br/>and the tenacity to make your designs successful. Our design requirements push the limits of<br/>physical possibility, which requires you to be extremely detail oriented and to hold your designs<br/>to the highest standards of quality and manufacturability. Our team drives collaboration with<br/>many engineering groups, requiring a team player mentality. Tesla moves quickly, so being self-<br/>motivated and disciplined is critical. You must be passionate, but direction changes quickly, so<br/>you must also be resilient. Our small team makes the batteries for all our Electric Vehicles and<br/>all our Energy Storage Products.</p>
<p>Responsibilities</p>
<p>Full product design responsibility, from concept through production launch and ramp<br/> 3D design of complex parts and assemblies<br/> Advancing product performance while driving down cost and mass<br/> Developing new technologies, supported with early process development<br/> Relentless improvement of existing products<br/> Hands-on prototyping<br/> Specification definition (dimensional, functional, performance, manufacturing)<br/> Meticulous release of 2D part and assembly drawings<br/> Owning basic testing and analysis; supporting advanced testing and analysis<br/> Root causing test failures and production problems<br/> Collaboration with other teams inside Tesla (manufacturing, testing, NPI, supply chain,</p>
<p>etc.)<br/> Close, active supplier relationships<br/> Travel to support production launch and ramp (supplier visits, on-site at Tesla factories,</p>
<p>etc.)</p>
<p>Requirements</p>
<p>Strong Engineering fundamentals in heat transfer, fluids, mechanics, and electronics<br/> Desire to own a lot and work hard - we have small teams and fast timelines<br/> Demonstrated ability to create products: CAD design to hand on prototyping<br/> Experience with various manufacturing processes such as plastic injection molding,</p>
<p>metal stamping, thermoforming, welding/brazing, plating, heat treating, and bonding.</p>
<p>Direct machine shop skills a plus.<br/> Experience in designing for high volume assembly, both manual and automated<br/> Experience defining test plans, designing test setups, and analyzing data<br/> A detail oriented personality with solid documentation and reporting skills.<br/> Proficiency in CAD modeling. CATIA V5/V6 experience a plus but not mandatory.<br/> Experience with student Formula Vehicle, Solar Car, Hyperloop etc. a plus.</p>
<p>########################<br/> <br/> As a Sr. Mechanical Design Engineer, you will be responsible for designing, releasing and launching components for future vehicle lines including, but not limited to Front &amp; Rear Fascia Assemblies, Wheel Liners, Sound Absorbers and Underbody Trim, meeting all fit and finish requirements.</p>
<p>You will be part of the team that creates and executes complex exterior vehicle systems in terms of styling, function and quality. You will utilize your expertise in one or more of these commodities and develop as a full vehicle engineer – designing and delivering entire systems rather than just components.</p>
<p>You will report to the Engineering Manager of Exterior Systems.</p>
<p>Responsibilities</p>
<p>As part of our Vehicle Exterior Engineering team, you will design release and launch exterior components and subsystems, aligned with program product profile with responsibilities to include:</p>
<p>· Concept Engineering &amp; feasibility;</p>
<p>· Packaging &amp; layout within vehicle architecture;</p>
<p>· Design to deliver customer-driven exterior system targets for craftsmanship, function, cost and weight;</p>
<p>· Participate in the iterative process with the Tesla design/styling studio to deliver the optimal balance of form vs. function vs. cost;</p>
<p>· Detail design including datum &amp; fixation strategy, GD&amp;T;</p>
<p>· Complete and release component &amp; sub system design, utilizing a mix of in-house design and supplier engineering where required;</p>
<p>· Utilize DFSS methodologies as appropriate during the design, validation and launch of the program;</p>
<p>· Interpret CAE simulation results and integrate recommendations into product design;</p>
<p>· Collaborate with key suppliers for approving tooling designs for block out and manufacturing;</p>
<p>- Support overall vehicle development milestones and prototype/production build events;</p>
<p>· Collaborate with cross-functional teams within the Tesla Vehicle Engineering, Manufacturing Engineering and Procurement groups to ensure system manufacturing and assembly feasibility and serviceability.</p>
<p>· Responsible for technical documentation to include DFMEAs, DVP&amp;R’s.</p>
<p>Requirements</p>
<p>• Bachelor of Science in Mechanical Engineering (MSME preferred). Preferably, 5 years of experience in automotive or similar field, but proven evidence of technical aptitude can be a substitute for exposure. Evidence of following the design process from initial concept stages through tooling release and production launch, having completed 3D and 2D CAD in Catia V5 or V6;</p>
<p>• Automotive Engineering with components in the Exterior environment preferred;</p>
<p>• Experience managing suppliers for product development;</p>
<p>• Have a good mix of designing a variety of materials (stamped, injection mold, cast, etc.) and designing kinematics/ mechanisms;</p>
<p>• Understand the fundamental differences in design and engineering between low/high volume production, entry/premium vehicle systems and have examples or a portfolio of completed programs;</p>
<p>•Utilize DFSS methodologies as appropriate during the design, validation and launch of the programs;</p>
<p>• Strong familiarity with the development of specifications, DFMEAs, DVP&amp;R’s and other technical documents;</p>
<p>• Demonstrate an ability to manage difficult projects with tight timing constraints and provide examples of such scenarios throughout your career.</p>
<p>##################</p>
<p><br/>The Role<br/>As a Mechanical Engineer on our Service Tooling Engineering team you will be responsible for specifying,<br/>designing, and validating all tools and equipment used to service Tesla electric vehicles world-wide. You will work<br/>with internal customers to identify and develop practical solutions to enable fast, seamless, and revolutionary<br/>service. The ideal candidate is someone who gets excited solving a variety of problems, competent building things,<br/>highly analytical, and sees the big picture needed to evolve a concept into a product. The ideal candidate is a hybrid<br/>of a mechanical, electrical, and software engineer and possesses a strong understanding of manufacturing concepts.<br/>Joining this team is a rare opportunity to become part of a world-class organization, supporting the latest EV<br/>technology. We are setting the standard that will continue to transform and revolutionize the automotive industry.</p>
<p>Responsibilities<br/>· Interact with teams of engineers and technicians working in other disciplines and on other subsystems to<br/>define the root cause of issue being addressed.<br/>· Convert tooling requirements and specifications from engineers and technicians into actionable procurement<br/>items while keeping in mind safety, cost minimization and timing urgency.<br/>· Design automotive technician tooling for large scale distribution.<br/>· Develop a concept and build a prototype solution.<br/>· Perform tooling validation with engineers and technicians.<br/>· Create tooling drawings and specifications in line with common industry practices.<br/>· Support process development.<br/>· Work closely with designated Tesla tooling distributors to define off-the-shelf tooling selection,<br/>implementation, and maintain tracking.<br/>· We are seeking a strong learner who can quickly ramp up and get a firm grasp of compliance regulations.</p>
<p>Requirements<br/>· Evidence of exceptional ability required<br/>· B.S in Mechanical Engineering, Mechatronics, or related engineering field from ABET accredited program<br/>· Experience in mechanical design and drafting preferred<br/>· Strong 3D CAD experience, CATIA a plus<br/>· GD&amp;T experience preferred<br/>· FEA experience preferred<br/>· Tooling and/or equipment design experience preferred<br/>· Hands on experience building mechanical and/or electrical systems<br/>· Automotive, Aerospace, or heavy equipment industry experience a plus<br/>· Familiarity with Regulatory compliance is a plus- (OSHA, CE, CCC, ASME related standards)<br/>· Machine shop and fabrication experience preferred<br/>· Strong communication, organization, and documentation skills<br/>· Proven ability to research information, solve challenging problems, and coordinate projects under tight timing<br/>constraints<br/>· Excellent fundamental engineering knowledge and have examples of applied engineering success through<br/>work, projects, or academic endeavors<br/>· Familiarity with working with various outside suppliers and managing deliverables<br/>· Ability to work autonomously to manage projects and maintain communication with interested parties<br/>· Ability to collaborate in a fast-paced team environment: pro-active team player who thinks ahead, plans, and<br/>suggests solutions<br/>· Mechanical aptitude, fabrication skills, machining, hand tools, and general electronics.</p>
<p>##################</p>
<p>Responsibilities:</p>
<p>3D CAD and 2D drawings<br/> for stators, rotors and assemblies<br/> Driving choices and<br/> development in:<br/> winding<br/> technology<br/> magnet<br/> technology<br/> steel<br/> stamping and lamination joining<br/> electrical<br/> insulation systems<br/> interconnections<br/> thermal<br/> sensing<br/> Identifying and<br/> qualifying suppliers of raw materials, components, and assemblies<br/> Design validation and<br/> durability testing profile development and data analysis<br/> Carry designs through<br/> to high-volume production; DFM, cost reductions, and second sourcing<br/> Mentoring junior<br/> engineers and interns</p>
<p>Requirements:</p>
<p>The<br/>ideal candidate will have:</p>
<p>· Evidence of exceptional<br/>ability</p>
<p>· Taken motor designs<br/>from clean sheet to volume production</p>
<p>· Experience with<br/>multiple coil winding and termination technologies</p>
<p>· Experience with<br/>multiple magnet technologies</p>
<p>· Worked with an<br/>international supply chain</p>
<p>· Automotive design and<br/>validation experience</p>
<p>· Asked “why” throughout<br/>his or her career</p>
<p>Expected<br/>skills: GD&amp;T, 3D CAD, 2D Drawings, DFMEA, PFMEA, structural and thermal FEA</p>
<p>Bonus<br/>skills: Catia, NVH analysis, electromagnetics design, specification writing,<br/>plastic injection molding, bolted joint design</p>
<p>###################</p>
<p>The Role</p>
<p>Geartrain Design Engineers in our Drive Systems Engineering Team are responsible for design, release and launch of the geartrain components for Tesla vehicle product lines. You will be part of the team that creates and executes world-class drive units in terms of performance, cost, and manufacturability. Components of particular importance include gears, bearings, shafts, clutches, couplers, differentials and integration of these components.</p>
<p>Responsibilities</p>
<p>Geartrain system design utilizing parametric modeling to evaluate performance trade-offs<br/> Geartrain component design of rotating shafts, torque split devices, couplings, and clutches<br/> Finite element analysis<br/> 2D and 3D modeling utilizing CAD software<br/> Statistical analysis for component stack up requirements<br/> Component level testing for performance, durability, reliability, and variability<br/> Supplier coordination for high volume contract manufacturing<br/> Geartrain component quality troubleshooting resulting in supplier corrective action<br/> Production support for assembly of geartrain components including process and tool development to achieve equipment performance requirements<br/> Test specification design</p>
<p>Requirements</p>
<p>Experience in rotating machinery design<br/> Demonstrating technical aptitude from concept through release and launch for production or the equivalent in experience and evidence of exceptional ability.<br/> Proficiency in 3D modeling within a product development environment. CATIA preferred</p>
<p><br/> ################<br/> <br/> The Role</p>
<p>As a Mechanical Engineer on our Service Tooling Engineering team you will be responsible for specifying, designing, and validating all tools and equipment used to service Tesla commercial energy products world-wide. You will work with internal customers to identify and develop practical solutions to enable fast, seamless, and revolutionary service. The ideal candidate is someone who gets excited solving a variety of problems, competent building things, highly analytical, and sees the big picture needed to evolve a concept into a product. The ideal candidate is a hybrid of a mechanical, and electrical engineer and possesses a strong understanding of manufacturing concepts. Joining this team is a rare opportunity to become part of a world-class organization, supporting the latest EV technology. We are setting the standard that will continue to transform and revolutionize the automotive industry.</p>
<p>Responsibilities</p>
<p>Own design, test and release of service tooling used in commercial energy application</p>
<p>Work with vendor to perform DFM/DFA studies to reduce cost and improve performance of service tooling for large volume</p>
<p>Interact with teams of engineers and technicians working in other disciplines and on other subsystems to define the root cause of issue being addressed</p>
<p>Convert tooling requirements and specifications from engineers and technicians into actionable procurement items while keeping in mind safety, cost minimization and timing urgency</p>
<p>Design technician tooling for large scale distribution across the globe</p>
<p>Develop a concept and build a prototype solution</p>
<p>Perform tooling test and validation with engineers and technicians</p>
<p>Create tooling drawings and specifications in line with common industry practices</p>
<p>Collaborate with industrial and process engineers to support process development and service tooling improvement</p>
<p>Support ergonomic, safety and region-specific code compliance of service tooling.</p>
<p>Work closely with designated Tesla tooling distributors to define off-the-shelf tooling selection, implementation, and maintain tracking</p>
<p>We are seeking an experienced engineer who can excel in fast paced environment with rapidly changing priority</p>
<p>Requirements</p>
<p>Evidence of exceptional ability required</p>
<p>B.S in Mechanical Engineering, Mechatronics, or related engineering field from ABET accredited program</p>
<p>2-4 years of Experience in mechanical design and drafting preferred</p>
<p>Strong 3D CAD experience, CATIA, PDM a plus</p>
<p>GD&amp;T experience preferred</p>
<p>Knowledge of Structural and thermal FEA experience a plus.</p>
<p>Tooling and/or equipment design experience preferred</p>
<p>Hands on experience building mechanical and/or electrical systems</p>
<p>Automotive, Aerospace, or heavy equipment industry experience a plus</p>
<p>Familiarity with Regulatory compliance is a plus- (OSHA, CE, CCC, ASME related standards)</p>
<p>Machine shop and fabrication experience preferred</p>
<p>Strong communication, organization, and documentation skills</p>
<p>Proven ability to research information, solve challenging problems, and coordinate projects under tight timing constraints</p>
<p>Excellent fundamental engineering knowledge and have examples of applied engineering success through work, projects, or academic endeavors</p>
<p>Familiarity with working with various outside suppliers and managing deliverables</p>
<p>Ability to work autonomously to manage projects and maintain communication with interested parties</p>
<p>Ability to collaborate in a fast-paced team environment: pro-active team player who thinks ahead, plans, and suggests solutions</p>
<p>Mechanical aptitude, fabrication skills, machining, hand tools, and general electronics</p>
<p>Tesla participates in the E-Verify Program</p>
<p>###################</p>
<p>The Product Design Integration team at our company is involved from the earliest stages to establish the product architecture and layout with consideration for all product level attributes (styling, cost, mass, manufacturability, performance, service, NVH, reliability, etc.)</p>
<p>The team works with design engineering, styling and manufacturing teams to develop compatible designs while ensuring product level attributes are optimized.</p>
<p>As the design matures, the team builds physical representations of the product in order to validate key decisions and further refine the design the prior to tooling and manufacture.</p>
<p>Responsibilities</p>
<p>Mechanical design and packaging of components to meet product and system level requirements while optimizing for product attributes.<br/> Lead product integration reviews, mediation in trade-off situations in order to ensure design solutions are in sync with product attribute targets.<br/> Support and execution of virtual builds, development buck, physical prototypes and pre-series production.<br/> Top-level product CAD and BOM management, use best practices for ensuring CAD completeness and compatibility, support release process.<br/> Pilot new CAD software and PLM tools.</p>
<p>Requirements</p>
<p>Solid understanding of engineering development process.<br/> Outstanding design, packaging and 3D modeling skills. CATIA is an advantage.<br/> Proven problem solving and strong communication skills.<br/> Flexibility and adaptability in a fast-paced and dynamic work environment.<br/> Passion for electric vehicles and energy efficiency.<br/> Experience with product lifecycle management tools is an advantage.<br/> Working knowledge of, or hands-on experience with, vehicle systems and package is an advantage (eg. Formula SAE / solar car competitions).<br/> Evidence of exceptional ability.<br/> <br/> ##############<br/> <br/> THE MISSION</p>
<p>We are accelerating the world’s transition to sustainable energy. The Chassis Design Engineering team plays a critical part in that mission, helping to deliver a safe, efficient, comfortable, and enjoyable driving experience, while also focusing on the sustainability and value of Tesla’s products.</p>
<p>THE ROLE</p>
<p>This position is to support the launch of our vehicles for Gigafactory Texas. The engineer will support all Chassis subsystems and will work to ensure a fast and high quality start of production. The engineer will also lead efforts to bring on local suppliers for Chassis components for product improvement, savings, logistics improvements, and capacity expansion. Additionally, the engineer will engage in product development for current and future vehicles (specifically Steer-by-Wire and Brake/motor Integration), and provide a solid foundation for future vehicle engineering operations in Germany.</p>
<p>The Chassis Design Engineering team is responsible for tires, wheels, hubs, halfshafts, suspension, subframes, brakes, pedals/controls, and air suspension systems on all of Tesla’s passenger car and heavy vehicle programs. A Mechanical Design Engineer on the team is responsible for bringing those systems from concept to production and beyond with support from other engineering teams at Tesla.</p>
<p>The engineer’s responsibilities include design, analysis, sourcing, prototyping, testing, vehicle assembly validation, quality control, engineering documentation, and more. The engineer must possess and should be able to readily apply mechanical engineering fundamentals to creatively solve problems and is expected to learn quickly while managing their projects independently with minimal oversight. During the design process an emphasis is placed on We are looking for someone who will going beyond the status quo to make the best product in terms of cost, mass, and performance. The engineer must should be able to communicate clearly and effectively to both technical and non-technical colleagues. Hands-on experience is a major plus for engineering development work and addressing production issues. Some travel to suppliers may be required, including international travel.</p>
<p>The engineer must will work with Tesla teams and component suppliers in order to:</p>
<p>- Develop and optimize designs in 3D CAD software with associated CAE tools</p>
<p>- Validate manufacturing, assembly, and service feasibility</p>
<p>- Complete and release component designs and documentation, including 2D drawings</p>
<p>- Validate components per defined engineering requirements</p>
<p>- Resolve issues and concerns with cross-functional teams including engineering, supply chain, production, and service</p>
<p>- Participate in the sourcing process and manage engineering relationships with suppliers</p>
<p>- Deliver to defined schedules</p>
<p>Requirements</p>
<p>- Bachelor of Science in Mechanical Engineering or equivalent</p>
<p>- Proficiency in a 3D CAD software (CATIA is a plus)</p>
<p>- Basic knowledge of GD&amp;T (proficiency is a plus)</p>
<p>- Experience with component design, analysis, and validation (aluminum and steel part design and manufacturing processes is a plus)</p>
<p>- Great technical and interpersonal communication</p>
<p>- Evidence of being a self-starter and bringing projects to completion great finisher</p>
<p>- Prior experience in a relevant engineering field is valued, but the team has openings from entry level to expert</p>
<p>THE TEAM</p>
<p>The Chassis team is comprised of engineers from many backgrounds and experience levels. You’ll work alongside experts with many years of experience, high aptitude recent graduates, and people from every stage in between. Collaboration, learning, and growth are core to the team’s success. We look for anyone with demonstrated exceptional ability to solve problems in both individual and team settings. <br/> <br/>###########</p>
<p>Mechanical<br/>Engineer, Production Control</p>
<p>Description</p>
<p>This<br/>responsibility includes coordinating daily workload and assignments and<br/>balancing headcount resources as needed to support the PC Equipment Engineering<br/>&amp; Maintenance organization. This<br/>role will also evaluate employees, work with employees on training/career<br/>plans, and recruit additional talent for the department.</p>
<p>The<br/>Equipment Engineer will perform these duties in addition to being the subject<br/>matter expert of the team, performing the same day-to-day work as members of<br/>their team, while also acting as the single point of contact for their team for<br/>all major communication.</p>
<p>The Role</p>
<p>The Equipment Engineer is responsible for designing,<br/>delivering, and managing equipment to support production of all Tesla products.<br/>We are looking for a talented and highly motivated individual to join the PC<br/>Equipment Engineering Team. This team is responsible for supporting all<br/>physical engineering needs of the Production Control Team, including designing<br/>equipment for part transport and staging, providing solutions to safety and<br/>ergonomic issue, as well as leading warehouse and process improvement and new<br/>product launch projects. The scope of equipment includes, but is not<br/>limited to: conveyors, lifts, ASRSs, robots, and mobile equipment including<br/>AGVs. Successful members of the team<br/>will be highly proactive and self-sufficient in pursuing improvement projects,<br/>will be able to multitask and refocus efforts immediately to meet constantly<br/>shifting demands in a fast-paced environment, and have exceptional leadership<br/>ability to drive cross functional collaboration projects to completion on or<br/>ahead of schedule.</p>
<p>This position reports to the Production Control – Equipment<br/>Engineering Manager.</p>
<p>Responsibilities</p>
<p>• Design equipment meeting<br/>interdepartmental needs and specifications.</p>
<p>• Creation of equipment<br/>drawings and specs, quotes, and purchase requisitions.</p>
<p>• Utilize DFMA principles in<br/>production creation and improvement projects.</p>
<p>• Develop business cases for<br/>improvement projects and equipment acquisitions.</p>
<p>• Order equipment to meet<br/>staffing, spares, and maintenance needs.</p>
<p>• Interface with suppliers<br/>for manufacturing feasibility, validation, and other engineering activities, as<br/>necessary.</p>
<p>• Deliver specifications,<br/>designs, analyses, and prototypes on time and within budget.</p>
<p>• Ensure designs are<br/>compatible with packaging, material-handling, and production processes and are<br/>appropriately serviceable.</p>
<p>• Support equipment -based<br/>process introductions and adjustments.</p>
<p>• Day to day coverage of<br/>production line equipment: respond to alarms, breakdowns, and Production<br/>requests quickly and efficiently to minimize downtime.</p>
<p>• Diagnoses equipment failures,<br/>finds root cause and communicates actions taken to the rest of the team.</p>
<p>• Become Expert Level Trainer on<br/>all machines in assigned area and be responsible for the level of knowledge of<br/>Shift technicians.</p>
<p>• Takes initiative to create,<br/>implement and improve PM documents and schedules.</p>
<p>• Perform major equipment repairs<br/>and rebuilds, (some weekends and holidays required).</p>
<p>• Participate in spare part<br/>analysis and inventory development, cost reduction and improvement.</p>
<p>• Work with Spares Coordinator<br/>and Maintenance Engineering to RMA faulty components and communicate needs to<br/>the vendor.</p>
<p>• Work with Process and Equipment<br/>engineering and other cross functional groups to resolve maintenance issues,<br/>improve equipment reliability, review procedures, and minimize equipment<br/>downtime.</p>
<p>• Investigate and implement<br/>countermeasures to prevent repetitive breakdowns.</p>
<p>• Active leader of a TPM team<br/>while taking on improvement projects to assist in improving the factory.</p>
<p>• Design and Implement Equipment<br/>Reliability Improvement Projects</p>
<p>Requirements</p>
<p>• Bachelor of Science or<br/>higher in mechanical engineering or similar field of study.</p>
<p>• Work efficiently and<br/>productively both independently and in team settings</p>
<p>• Communicate clearly using<br/>excellent written and verbal skills.</p>
<p>• Demonstrate talent for<br/>conceiving efficient design solutions to complex engineering challenges.</p>
<p>• Proficiency in CATIA V5,<br/>or similar 3D CAD software (Solidworks, ProE, Unigraphics, etc).</p>
<p>• Basic understanding of<br/>GD&amp;T as well as weld symbols.</p>
<p>• Experience with rapid<br/>prototyping and small to medium volume production.</p>
<p>• Knowledge of relevant<br/>manufacturing processes and a variety of engineering materials, fastening<br/>methods,</p>
<p>• Familiarity with designing<br/>any or all of the following: mobile &amp; stationary material handling<br/>equipment, towed dollies, racks, stands, lift-assists, and end-of-arm tools.</p>
<p>• 2+ years of experience<br/>performing similar work (Automotive industry experience preferred)</p>
<p>• Familiarity with industrial robots and controls<br/>systems.</p>
<p>############</p>
<p><br/>Role</p>
<p>Majority of work will center around developing designs for<br/>the Vehicle Production plant and surrounding facilities. This position will<br/>mentor junior engineers/designers and may require managing outside consultants in<br/>order to meet project design schedules. This candidate must be able to<br/>prioritize and manage workload on multiple projects to maintain high quality<br/>and productivity.</p>
<p>Responsibilities</p>
<p>Responsible<br/> for developing mechanical design packages for permitting and construction<br/> Mentor<br/> and supervise engineers/designers to develop equipment datasheets, construction<br/> documents and specifications<br/> Be<br/> a technical resource for engineers and designers<br/> Review<br/> and/or develop designs that are cost effective, Code compliant while meeting Tesla<br/> quality and schedule requirements<br/> Able<br/> to develop high level cost estimates with material take off information for all<br/> sizes of projects in short time frames<br/> Communicate<br/> effectively and timely to stakeholders and engineering team<br/> Must<br/> be able to prioritize and manage heavy workload to ensure high quality and<br/> productivity</p>
<p>Requirements</p>
<p>Minimum of 10 years HVAC and Plumbing/FP<br/> design experience<br/> Familiar with International Energy<br/> Conservation, Mechanical, Plumbing and Fire Protection Codes, NFPA standards,<br/> SMACNA duct construction standards, ACGIH Ventilation Practices, and ASHRAE 62<br/> and 90.1<br/> Professional<br/> Engineer registration for NV and/or California or ability to be registered<br/> within a year<br/> Proficient in the use of following applications<br/> Trane or Carrier HAP, Revit, AutoCAD, Microsoft Office Suite. Experience in Caesar<br/> 2 and Pipe-flo are a plus.<br/> Familiar with following types of calculations: duct<br/> static pressure drop, pump head, NPSHa, fuel gas pipe sizing, steam and<br/> condensate pipe sizing.</p>
<p>Plumbing and Fire Protection design experience<br/> Designs<br/> using the following equipment types: open and/or closed circuit cooling<br/> towers, water and air cooled chillers, gas fired and electric water<br/> boilers, large air handling units with heating/cooling coils and/or gas<br/> fired heaters, packaged air to air heat pumps, water to water heat pumps,<br/> dust collectors, humidifiers, dehumidifiers, fans, and pumps.<br/> Knowledge or<br/> experience with the following is a plus: Abatement systems (thermal oxidizers,<br/> dry and wet scrubbers), Heat Exchangers (shell/tube, plate/frame, brazed<br/> fin), Control Valves and Instrumentation, Heat Recovery Systems.<br/> Able to<br/> specify ductwork material and size for various ducted exhaust systems and<br/> pressure classes<br/> Able to<br/> specify pipe sizes to meet Energy Code and to specify material and fitting<br/> types for various hydronic and steam systems<br/> Knowledge and experience with writing sequences of<br/> operation for HVAC systems</p>
<p>Construction<br/> Administration experience including field reports, punch lists, answering RFIs, and reviewing shop<br/> drawings<br/> Direct experience in the<br/> preparation of mechanical contract drawings and engineering specifications</p>
<p><br/> <br/> #################<br/> <br/> Role</p>
<p>Majority of work will center around developing designs for the Vehicle Production plant and surrounding facilities. This position will mentor junior engineers/designers and may require managing outside consultants in order to meet project design schedules. This candidate must be able to prioritize and manage workload on multiple projects to maintain high quality and productivity.</p>
<p>Responsibilities</p>
<p>Responsible for developing mechanical design packages for permitting and construction<br/>Mentor and supervise engineers/designers to develop equipment datasheets, construction documents and specifications<br/>Be a technical resource for engineers and designers<br/>Review and/or develop designs that are cost effective, Code compliant while meeting Tesla quality and schedule requirements<br/>Able to develop high level cost estimates with material take off information for all sizes of projects in short time frames<br/>Communicate effectively and timely to stakeholders and engineering team<br/>Must be able to prioritize and manage heavy workload to ensure high quality and productivity</p>
<p>Requirements</p>
<p>Minimum of 2 years HVAC and Plumbing/FP design experience<br/>Familiar with International Energy Conservation, Mechanical, Plumbing and Fire Protection Codes, NFPA standards, SMACNA duct construction standards, ACGIH Ventilation Practices, and ASHRAE 62 and 90.1<br/>Professional Engineer registration for NV and/or California or ability to be registered within a year<br/>Proficient in the use of following applications Trane or Carrier HAP, Revit, AutoCAD, Microsoft Office Suite. Experience in Caesar 2 and Pipe-flo are a plus.<br/>Familiar with following types of calculations: duct static pressure drop, pump head, NPSHa, fuel gas pipe sizing, steam and condensate pipe sizing.<br/>Plumbing and Fire Protection design experience<br/>Designs using the following equipment types: open and/or closed circuit cooling towers, water and air cooled chillers, gas fired and electric water boilers, large air handling units with heating/cooling coils and/or gas fired heaters, packaged air to air heat pumps, water to water heat pumps, dust collectors, humidifiers, dehumidifiers, fans, and pumps.<br/>Knowledge or experience with the following is a plus: Abatement systems (thermal oxidizers, dry and wet scrubbers), Heat Exchangers (shell/tube, plate/frame, brazed fin), Control Valves and Instrumentation, Heat Recovery Systems.<br/>Able to specify ductwork material and size for various ducted exhaust systems and pressure classes<br/>Able to specify pipe sizes to meet Energy Code and to specify material and fitting types for various hydronic and steam systems<br/>Knowledge and experience with writing sequences of operation for HVAC systems.<br/>Construction Administration experience including field reports, punch lists, answering RFIs, and reviewing shop drawings<br/>Direct experience in the preparation of mechanical contract drawings and engineering specifications</p>
<p>##############</p>
<p>Role</p>
<p>Tesla is looking for an exceptionally skilled and motivated Staff Mechanical Engineer to design the next generation of batteries, solar hardware, EV chargers and energy management products for the home. You will specify, design and test the enclosures, busbars, harnesses, thermal components and other hardware that make up our products.</p>
<p>You will be part of a small mechanical design team that is working on multiple products in parallel. Each of those product programs requires working as part of a multi-disciplinary team from concept to mass production.</p>
<p>Responsibilities</p>
<p>Modeling and design of mechanical systems and components including plastic, metal and sheet metal parts, conductors, insulators, wire-harnesses, fasteners, and other components.<br/>Mechanical design analysis including thermal, structural, design for assembly, and design for test.<br/>Solve electronics packaging issues including: isolation, EMC, RF transmission, thermal management, interconnection, shock and vibration management, etc.<br/>Utilize engineering principles to create test plans, identify root causes for field or test failures and implement fixes.<br/>Create drawing packages and instructions for proper manufacturing and assembly of designs.<br/>Assist in engineering prototype builds and component fabrication.<br/>Collaborate with other mechanical, systems, electrical, digital control, manufacturing test, industrial design, and test engineers to meet design and program needs.</p>
<p>Requirements</p>
<p>Aligned with Tesla’s mission to accelerate the transition to sustainability.<br/>Ideally, 4-5 years’ experience designing high volume electronics products or appliances. Equivalent experience in high volume automotive hardware or lower volume power products (inverters, transformers, etc) is also acceptable.<br/>Deep understanding of the material science of components used in mechanical design (metals, insulators, plastics, connectors, gaskets, conductors etc).<br/>4-5 years’ experience using 3D mechanical design and analysis tools (CATIA v6, hyperworks experience preferred).<br/>Excellent communication skills.<br/>Ability to work in a fast-paced and challenging environment.</p>
<p>Preferred</p>
<p>Experience using CATIA v6 preferred but not required.<br/>Experience with DFMEA, DVP&amp;Rs, failure analysis, statistical control methods<br/>Knowledge of GD&amp;T, finite element analysis and design for reliability concepts.<br/>Working knowledge of Matlab, Labview, and Python.<br/>Experience with designing products that receive international safety certifications.<br/>Basic understanding of electrical design fundamentals. </p>
<p>Mechanical Design Engineer</p>
<p>$48K-$115K</p>
<p>We design and manufacture advanced electric vehicles, battery packs, drive<br/>systems, and energy products that are changing the future of transportation and<br/>sustainable energy. We are building technically strong, fast-moving teams that<br/>pride themselves on superior execution.</p>
<p>Description: Tesla is seeking an amazing Mechanical Engineer to lead full life cycle development of automated test equipment, for core test technologies. The position is based in Reno/Tahoe, Nevada. The candidate will revolutionize every facet of manufacturing test automation, and provide technical leadership to a superstar team.</p>
<p>Responsibilities</p>
<p>· Set the standard of technical and leadership excellence for the team. You<br/>will be capable of executing any level of test design to lead from the front.</p>
<p>· Develop innovative technologies for ultra-reliable testers, unit defect detection capabilities, and previously unimagined production rate scaling capabilities.</p>
<p>· Participate in initial equipment conceptual development and carefully balance product specifications, process requirements, layout complexity, cost, and lead-time limits.</p>
<p>· Able to define most efficient plan for testing, focusing on test time reduction and appropriate complexity to promptly release testers.</p>
<p>· Modeling and testing for stress, thermal, fluid, and mechanical aspects of machines/components, that perform effectively while exposed to daily abuse of a manufacturing environment.</p>
<p>· Embed with product design teams to drive design for test/manufacturing.</p>
<p>· Ensure test machines provide effective testing coverage, protect the unit under test,<br/>meet up time needs, and reduce cycle time requirements for scalable high volume manufacturing.</p>
<p>· Drive enhanced mechanical design standards, best practices, and tools to improve designs.</p>
<p>· Characterization and validation of new equipment for introduction to the production floor.</p>
<p>· Drive continuously increasing test automation, including robotics and actuator based test systems.</p>
<p>· Create outstanding documentation packages, train others in the maintenance and long term usage of the test systems.</p>
<p>· Team leadership, mentoring growing engineering team.</p>
<p>Requirements</p>
<p>· 1-3 years of experience designing best in class mechanical products and test automation systems.</p>
<p>· Ability to lead projects and architect the overall system design in cooperation with electrical and software test automation disciplines.</p>
<p>· Experience with initial equipment conceptual development and carefully balancing product specifications, process requirements, layout complexity, cost, and lead-time limits.</p>
<p>· Be able to perform required analysis to ensure a successful design (stress, strain, thermal, tolerance, cost and mass optimization, etc).</p>
<p>· Solid knowledge of heat transfer and thermal management.</p>
<p>· Expertise in material science of components used in mechanical design (metals, insulators, plastics, connectors, gaskets, etc).</p>
<p>· Desire to drive ultra-reliable, cost effective designs that beat schedules.</p>
<p>· Expertise in SolidWorks, CATIA, FEA simulation, GD&amp;T, and design for reliability concepts.</p>
<p>· Experience in deploying test machines in a large scale manufacturing environment and ability to come up with rapid methods for scaling and duplication of test equipment.</p>
<p>· Remain engaged, proactive and positive in tough circumstances, owning assignments and taking full accountability for overall team success.</p>
<p><br/>Mechanical Design Engineer - Drive Systems<br/>Austin, TX<br/>$61K-$143K (Glassdoor est.)</p>
<p>Design and develop mechanical parts and systems while working closely with electromagnetic, manufacturing and power electronics engineers.<br/> <br/>Design and develop electric machines and mechanical power transmission components. Design plastics, sheet metal, and castings for electric vehicle drive systems. Conduct thermal and mechanical modelling and testing of systems and components. Validate components and prototypes in bench and vehicle<br/>configurations.</p>
<p>Collaborate with manufacturing engineers and various suppliers to transition concepts to production. Utilize understanding of materials and manufacturing processes to collaborate with various suppliers and other internal team members. Use CAD modelling techniques and CATIA v5 to design and develop electric machines and mechanical components for testing and manufacturing.</p>
<p>Requirements:</p>
<p>Five (5) years of progressive experience in the job offered or five (5) years of experience in<br/> mechanical engineering for automotive applications.<br/> Three (3) years of experience in the job offered or three (3) years of experience in mechanical<br/> engineering for automotive applications.<br/> CAD modelling with plastics and metals parts<br/> CATIA v5 experience with complex parts and assemblies<br/> Dimensional drawings with expertise in ANSI Y14.5 GD&amp;T<br/> Manufacturing equipment design and implementation Dynamometer test requirements and data analysis preferred</p>
<p><br/>Mechanical Engineer</p>
<p>$54K-$127K (Glassdoor est.)</p>
<p>Role</p>
<p>Majority of work will center around developing designs for the Vehicle Production plant and surrounding facilities. This position will mentor junior engineers/designers and may require managing outside consultants in order to meet project design schedules. This candidate must be able to prioritize and manage workload on multiple projects to maintain high quality and productivity.</p>
<p>Responsibilities</p>
<p>Responsible for developing mechanical design packages for permitting and construction<br/> Mentor and supervise engineers/designers to develop equipment datasheets, construction documents and specifications<br/> Be a technical resource for engineers and designers<br/> Review and/or develop designs that are cost effective, Code compliant while meeting Tesla quality and schedule requirements<br/> Able to develop high level cost estimates with material take off information for all sizes of projects in short time frames<br/> Communicate effectively and timely to stakeholders and engineering team<br/> Must be able to prioritize and manage heavy workload to ensure high quality and productivity</p>
<p>Requirements</p>
<p>Minimum of 3 years HVAC and Plumbing/FP design experience<br/> Familiar with International Energy Conservation, Mechanical, Plumbing and Fire Protection Codes, NFPA standards, SMACNA duct construction standards, ACGIH Ventilation Practices, and ASHRAE 62 and 90.1<br/> Professional Engineer registration for NV and/or California or ability to be registered within a year<br/> Proficient in the use of following applications Trane or Carrier HAP, Revit, AutoCAD, Microsoft Office Suite. Experience in Caesar 2 and Pipe-flo are a plus.<br/> Familiar with following types of calculations: duct static pressure drop, pump head, NPSHa, fuel gas pipe sizing, steam and condensate pipe sizing.<br/> Plumbing and Fire Protection design experience<br/> Designs using the following equipment types: open and/or closed circuit cooling towers, water and air cooled chillers, gas fired and electric water boilers, large air handling units with heating/cooling coils and/or gas fired heaters, packaged air to air heat pumps, water to water heat pumps, dust collectors, humidifiers, dehumidifiers, fans, and pumps.<br/> Knowledge or experience with the following is a plus: Abatement systems (thermal oxidizers, dry and wet scrubbers), Heat Exchangers (shell/tube, plate/frame, brazed fin), Control Valves and Instrumentation, Heat Recovery Systems.<br/> Able to specify ductwork material and size for various ducted exhaust systems and pressure classes<br/> Able to specify pipe sizes to meet Energy Code and to specify material and fitting types for various hydronic and steam systems<br/> Knowledge and experience with writing sequences of operation for HVAC systems.<br/> Construction Administration experience including field reports, punch lists, answering RFIs, and reviewing shop drawings<br/> Direct experience in the preparation of mechanical contract drawings and engineering specifications</p>
<p><br/> <br/>Mechanical Design Engineer</p>
<p>$56K-$133K</p>
<p>The Role:</p>
<p>We are looking for a highly motivated and talented individual to join the Production Test Engineering(PTE) Team. The mechanical design engineer is responsible for test equipment design and maintenance of end of line Powertrain Test Equipment for the Tesla Model 3 &amp; energy products as well as supporting design, production &amp; quality teams on future Tesla programs. Mechanical design engineer within the PTE Team requires strong engineering skills, a passion to push the boundaries of technology, and the drive to make our designs successful. You must have a genuine passion for engineering products that will fundamentally change the world’s energy infrastructure, and thrive working in a fast-paced, entrepreneurial environment. The PTE Team collaborates closely with other departments, requiring a team player mentality. Our team requires each individual to be self-motivated and<br/>disciplined.</p>
<p>Responsibilities</p>
<p>Work closely with the design team to develop low cost, highly reliable, and automated test<br/> fixtures for powertrain end of line testing<br/> Troubleshoot, define, and initiate corrective actions for field failures as well as production issues<br/> Advise various stakeholders on the technical issues that affect the product design, production<br/> cycle-time &amp; cost<br/> Maintains up-to-date thorough knowledge of applicable product design and test specification changes<br/> Optimize designs via analytical, numerical and/or empirical assessments<br/> Develop and detail design concepts in CATIA V5 (soon to be V6) &amp; fabricate functional prototypes and test methods to vet out new concepts and automation for optimizing performance and cost<br/> Determine required tolerances using GD&amp;T and produce drawings for release to suppliers<br/> Conduct DFMEA and Fault Tree analysis Provide test procedures for Factory Acceptance Testing (FAT) Validation and characterization of new equipment and fixtures for introduction to the production floor<br/> Specification development for test equipment and providing technical support to manufacturing<br/> in determining proper test equipment and testing procedures per industry standards<br/> Research and benchmark competitive technologies and innovative designs<br/> Support production ramp &amp; ongoing/continuous product/process improvement<br/> Maintenance of test fixtures and test equipment calibration records<br/> Training test technicians and line operators on test processes</p>
<p>Requirements</p>
<p>Experience and knowledge in fixture/equipment design<br/> Experience with AutoCAD, CATIA V6 &amp; Solidworks<br/> Knowledge of all applicable electrical standards related to EV Powertrain Design<br/> Ability to multi-task and work cross-functionally<br/> Ability to perform various roles and responsibilities from day to day, including, but not limited to test procedure, design test fixtures, interaction with manufacturing, production, design engineers and supply chain management<br/> Strong troubleshooting skills required<br/> Strong interpersonal skills and effective communicator<br/> Good Attendance, Initiative, responsible follow-through, and a willingness to help<br/> Basic programming knowledge like c, python, c++, HTML plus</p>
<p>Required Soft Skills</p>
<p>Detail-oriented personality with solid documentation and reporting skills Passionate about product design.Good Attendance, Initiative, responsible follow-through, and a willingness to help<br/> Basic programming knowledge like c, python, c++, HTML plus <br/> Ambitious</p>
<p><br/>######################</p>
<p>The Role</p>
<p>As a Mechanical Engineer on the Low Voltage Wire Harness team, you will own design for a subset of electrical wire harnesses in Tesla vehicles, both in development and in production, and also in service. You will be responsible for all stages: concept, requirements definition (iterative), prototype, detailed CATIA (V6) model, 2D drawing synchronized with electrical circuitry provided by the Wire Harness Electrical Engineer, vendor selection (support to Supply Chain), design validation and optimization in Beta and RC phases, volume tooling and processes for Start of Production and production ramp-up. Life-cycle improvements and cost reductions as needed.</p>
<p>Responsibilities</p>
<p>Make design decisions, and provide leadership in resolving electrical/physical integration and optimization issues with other internal Tesla parties on a daily basis, namely for example: Body, Low Voltage Systems, Infotainment, Audio, PCBA Design, Chassis, Interiors, Seats, HVAC, Environmental/Vibe Testing, CATIA Integration, CAE Crash Analysis, Vehicle Durability and Crash Test, Manufacturing Engineering, etc.</p>
<p>Design to significantly reduce mass and volume/space and to optimize wire bundle routing in the vehicle, minimize NVH (Noise, Vibration, Harshness), prevent possibility of moisture ingress/damage</p>
<p>Work with Suppliers for Design-for-Manufacturability to reduce assembly complexity, cost and lead time reduction</p>
<p>Design components for ease and efficiency of manufacture, as well as ease and efficiency of installation in vehicles. Work with manufacturing and assembly process engineers for successful implementation.</p>
<p>Work with SIE (Supplier Industrial Engineer) to set up and review production lines at suppliers, including any associated mechanical components</p>
<p>Support RC (Release Candidate – pre-production) with quick-turn parts and make sure installation works properly as design-intended incl. supporting with a subassembly fixture design prior to full vehicle being available</p>
<p>Highlight design concerns (such as high insertion force on connectors, grommet installation and sealing issues) or reliability concerns on detailed design features and drive the solution progress to remove these concerns through weekly tests, follow ups, upper management deep-dive reviews and cross functional team reviews.</p>
<p>Closely work with Reliability team to ensure proper testing on finished designs (vibe, corrosion, torque-to-failure, EMI/shielding, etc.)</p>
<p>Required Skills</p>
<p>Mechanical Engineering: thermal, heat dissipation, vibration, strength, durability, corrosion-prevention, materials, etc</p>
<p>Design-for-Manufacturability, including Automation</p>
<p>CATIA 3D modeling</p>
<p>Mentor Graphics Capital Harness 2D engineering drawing creation</p>
<p>ENOVIA part numbering, drawing maintenance, ECR’s, deviations, etc</p>
<p>Quick-turn prototyping using a variety of techniques</p>
<p>Project task coordination and tracking using JIRA, Confluence, etc</p>
<p>Specifying and directing Environmental Lab testing, CAE analysis, etc</p>
<p>Tesla participates in the E-Verify Program</p>
<p>#############################</p>
<p>The Role</p>
<p>As Senior Mechanical Design Engineer, Lighting Systems, you will be responsible for the design, release and launch of lighting systems for future Tesla vehicle product lines. You will work alongside the most creative and resourceful designers and engineers in the world on a lean and agile team. From concept definition at the industrial design and clay modeling phase, to prototype creation, production design release and launch, you will own the product design through all stages of the design cycle developing the style, integrating the latest technologies and delivering industry-leading lighting systems for all global markets. You will be reporting to the Engineering Manager of Vehicle Lighting Systems within Vehicle Engineering.</p>
<p>Responsibilities</p>
<p>Engineer, develop and execute world-class automotive lamp systems that meet styling intent and are compliant to regulatory requirements.<br/>Work from clay model feasibility through to production launch.<br/>Collaborate with Tesla’s design/styling team developing function layouts that meet legal compliance and support the design theme integrating feasible solutions for new technology adoption.<br/>Lead cross functional integration of lighting systems with the Tesla design/styling team, engineering teams such as body, exteriors, 12V electronics and manufacturing as well as with Tesla supply chain teams and supplier engineers to achieve technical feasible designs.<br/>Participate in the iterative process with all stakeholders to deliver the optimal balance of form, function, performance and cost.<br/>Direct Tesla and supplier engineering lamp development and CAD designs.<br/>Maintain all required product development documentation including SOR, DFMEA, DVP&amp;R.</p>
<p>Requirements</p>
<p>Minimum of 5 years of product engineering experience, with 3 years and/or 2 product cycles specifically in automotive lamp system and component design.<br/>Bachelor’s degree in mechanical engineering (Masters preferred).<br/>Successful execution of automotive lamp programs with a strong preference for experience with full LED lighting systems.<br/>Clear understanding of latest lighting technologies including lightguides, light blades, adaptive forward lighting (AFS) systems, Laser, OLED, Matrix, DMD, etc.<br/>Demonstrate technical aptitude, creativity in design, and the ability to execute feasible solutions to complex engineering problems.<br/>Complete understanding of lighting homologation requirements: FMVSS 108 and ECE R48 in particular.<br/>Strong understanding of optical system development process.<br/>Knowledge of Design for Manufacturing principles including GD&amp;T, assembly and dimensional engineering principles in design.<br/>Plastic component design experience with CATIA V5/V6 strongly preferred.<br/>Demonstrate exceptional ability, management of difficult projects with tight timing constraints and provide examples of notable achievements throughout your career.<br/>Tesla participates in the E-Verify Program</p>
<p>#############################</p>
<p>Mechanical Engineer, Production Control</p>
<p>Description</p>
<p>This responsibility includes coordinating daily workload and assignments and balancing headcount resources as needed to support the PC Equipment Engineering &amp; Maintenance organization. This role will also evaluate employees, work with employees on training/career plans, and recruit additional talent for the department.</p>
<p>The Equipment Engineer will perform these duties in addition to being the subject matter expert of the team, performing the same day-to-day work as members of their team, while also acting as the single point of contact for their team for all major communication.</p>
<p>The Role</p>
<p>The Equipment Engineer is responsible for designing, delivering, and managing equipment to support production of all Tesla products. We are looking for a talented and highly motivated individual to join the PC Equipment Engineering Team. This team is responsible for supporting all physical engineering needs of the Production Control Team, including designing equipment for part transport and staging, providing solutions to safety and ergonomic issue, as well as leading warehouse and process improvement and new product launch projects. The scope of equipment includes, but is not limited to: conveyors, lifts, ASRSs, robots, and mobile equipment including AGVs. Successful members of the team will be highly proactive and self-sufficient in pursuing improvement projects, will be able to multitask and refocus efforts immediately to meet constantly shifting demands in a fast-paced environment, and have exceptional leadership ability to drive cross functional collaboration projects to completion on or ahead of schedule.</p>
<p>This position reports to the Production Control – Equipment Engineering Manager.</p>
<p>Responsibilities</p>
<p>• Design equipment meeting interdepartmental needs and specifications.</p>
<p>• Creation of equipment drawings and specs, quotes, and purchase requisitions.</p>
<p>• Utilize DFMA principles in production creation and improvement projects.</p>
<p>• Develop business cases for improvement projects and equipment acquisitions.</p>
<p>• Order equipment to meet staffing, spares, and maintenance needs.</p>
<p>• Interface with suppliers for manufacturing feasibility, validation, and other engineering activities, as necessary.</p>
<p>• Deliver specifications, designs, analyses, and prototypes on time and within budget.</p>
<p>• Ensure designs are compatible with packaging, material-handling, and production processes and are appropriately serviceable.</p>
<p>• Support equipment -based process introductions and adjustments.</p>
<p>• Day to day coverage of production line equipment: respond to alarms, breakdowns, and Production requests quickly and efficiently to minimize downtime.</p>
<p>• Diagnoses equipment failures, finds root cause and communicates actions taken to the rest of the team.</p>
<p>• Become Expert Level Trainer on all machines in assigned area and be responsible for the level of knowledge of Shift technicians.</p>
<p>• Takes initiative to create, implement and improve PM documents and schedules.</p>
<p>• Perform major equipment repairs and rebuilds, (some weekends and holidays required).</p>
<p>• Participate in spare part analysis and inventory development, cost reduction and improvement.</p>
<p>• Work with Spares Coordinator and Maintenance Engineering to RMA faulty components and communicate needs to the vendor.</p>
<p>• Work with Process and Equipment engineering and other cross functional groups to resolve maintenance issues, improve equipment reliability, review procedures, and minimize equipment downtime.</p>
<p>• Investigate and implement countermeasures to prevent repetitive breakdowns.</p>
<p>• Active leader of a TPM team while taking on improvement projects to assist in improving the factory.</p>
<p>• Design and Implement Equipment Reliability Improvement Projects</p>
<p>Requirements</p>
<p>• Bachelor of Science or higher in mechanical engineering or similar field of study.</p>
<p>• Work efficiently and productively both independently and in team settings</p>
<p>• Communicate clearly using excellent written and verbal skills.</p>
<p>• Demonstrate talent for conceiving efficient design solutions to complex engineering challenges.</p>
<p>7+ years of experience performing similar work (Automotive industry experience preferred)</p>
<p>• Proficiency in CATIA V5, or similar 3D CAD software (Solidworks, ProE, Unigraphics, etc).</p>
<p>• Basic understanding of GD&amp;T as well as weld symbols.</p>
<p>• Experience with rapid prototyping and small to medium volume production.</p>
<p>• Knowledge of relevant manufacturing processes and a variety of engineering materials, fastening methods,</p>
<p>• Familiarity with designing any or all of the following: mobile &amp; stationary material handling equipment, towed dollies, racks, stands, lift-assists, and end-of-arm tools.</p>
<p>• 5+ years of experience performing similar work (Automotive industry experience preferred)</p>
<p>• Familiarity with industrial robots and controls systems.</p>
<p>Tesla participates in the E-Verify Program</p>
<p>#########################</p>
<p>The Role</p>
<p>The Senior Mechanical Design Engineer is responsible for inventing and shepherding design concepts into viable product offerings. The candidate should demonstrate a history of innovation, technical prowess, project management skills, a strong work ethic, and an ability to work cross-functionally.</p>
<p>Responsibilities</p>
<p>Design mechanical solutions for novel photovoltaic systems.<br/> Cross functional participation for product requirement definition<br/> Technical concept development / CAD creation of concepts<br/> Functional analysis by calculation/FEA<br/> Qualification of new technology platforms as mediums for design<br/> Prototype realization: hands-on manufacturing and/or project management of internal/external contract manufacturing<br/> Feasibility testing: create FMEA/test plans, work cross-functionally with Test. Field Applications, and Reliability Groups to execute test plans. Analyze resultant data<br/> Work with Manufacturing Engineering on product DFM. Support pilot rollout for product launch<br/> Collaborate with legal team to secure patents for new ideas</p>
<p>Requirements</p>
<p>Evidence of exceptional ability<br/> BS (or equivalent) in Mechanical Engineering, Industrial Engineering, or a related field<br/> 5 years of product design experience or an advanced degree in one of the above fields<br/> Experience with high volume product design and manufacturing preferred<br/> Must be proficient in Solidworks or similar CAD software, 3-D modeling and 3-D prototyping<br/> Must be available to travel 10% of time to visit suppliers, customers, and manufacturing lines. Some travel will be international<br/> Demonstrated record of creative problem solving skills<br/> Demonstrated record of successfully managing multiple projects simultaneously<br/> Demonstrated record of success working in a cross disciplinary, multi-cultural environment<br/> Demonstrated record of success working in a high pressure, tight deadline situation.<br/> Exceptional written, oral, interpersonal, and presentation skills<br/> Self-Driven, self-motivated, and able to make responsible decisions</p>
<p><br/> ########################<br/> <br/> Responsibility</p>
<p>Develop innovative and state of the art mechanical designs for high volume manufacturing utilizing 3D CAD and supported by analysis<br/> Create prototypes and support the development of manufacturing processes and automation<br/> Drive cross functional collaboration with CAE engineers, manufacturing engineers, suppliers, and test engineers to transition conceptual designs to production<br/> Determine required tolerances using GD&amp;T and produce 2D drawings for release to suppliers<br/> Conduct DFMEA and Fault Tree analysis<br/> Author documentation and requirements and deliver technical presentations<br/> Research and benchmark competitive technologies</p>
<p>Requirements</p>
<p>B.S. in Mechanical Engineering (or equivalent)<br/> Knowledge of material properties and applications<br/> Strong communication and a team mentality<br/> Understanding of and prior experience designing for one or more high volume manufacturing processes including stamping, drawing, injection molding, precision sheet metal, die cutting, metal welding<br/> Skills that are a plus<br/> Familiarity with Lithium-ion cells, module and battery pack design<br/> Experience designing parts for mass production with automated assembly<br/> Making or modifying parts in a machine shop<br/> Data acquisition and test equipment<br/> Structural finite element analysis</p>
<p><br/> #####################<br/> <br/> Mechanical Designers on the Battery Module Team We don’t just design things, we make<br/>them. The role requires strong fundamentals, a passion to push the boundaries of technology<br/>and the tenacity to make your designs successful. Our design requirements push the limits of<br/>physical possibility, which requires you to be extremely detail oriented and to hold your designs<br/>to the highest standards of quality and manufacturability. Our team drives collaboration with<br/>many engineering groups, requiring a team player mentality. Tesla moves quickly, so being self-<br/>motivated and disciplined is critical. You must be passionate, but direction changes quickly, so<br/>you must also be resilient. Our small team makes the batteries for all our Electric Vehicles and<br/>all our Energy Storage Products.</p>
<p>Responsibilities</p>
<p>Full product design responsibility, from concept through production launch and ramp<br/> 3D design of complex parts and assemblies<br/> Advancing product performance while driving down cost and mass<br/> Developing new technologies, supported with early process development<br/> Relentless improvement of existing products<br/> Hands-on prototyping<br/> Specification definition (dimensional, functional, performance, manufacturing)<br/> Meticulous release of 2D part and assembly drawings<br/> Owning basic testing and analysis; supporting advanced testing and analysis<br/> Root causing test failures and production problems<br/> Collaboration with other teams inside Tesla (manufacturing, testing, NPI, supply chain,</p>
<p>etc.)<br/> Close, active supplier relationships<br/> Travel to support production launch and ramp (supplier visits, on-site at Tesla factories,</p>
<p>etc.)</p>
<p>Requirements</p>
<p>Strong Engineering fundamentals in heat transfer, fluids, mechanics, and electronics<br/> Desire to own a lot and work hard - we have small teams and fast timelines<br/> Demonstrated ability to create products: CAD design to hand on prototyping<br/> Experience with various manufacturing processes such as plastic injection molding,</p>
<p>metal stamping, thermoforming, welding/brazing, plating, heat treating, and bonding.</p>
<p>Direct machine shop skills a plus.<br/> Experience in designing for high volume assembly, both manual and automated<br/> Experience defining test plans, designing test setups, and analyzing data<br/> A detail oriented personality with solid documentation and reporting skills.<br/> Proficiency in CAD modeling. CATIA V5/V6 experience a plus but not mandatory.<br/> Experience with student Formula Vehicle, Solar Car, Hyperloop etc. a plus.</p>
<p>########################<br/> <br/> As a Sr. Mechanical Design Engineer, you will be responsible for designing, releasing and launching components for future vehicle lines including, but not limited to Front &amp; Rear Fascia Assemblies, Wheel Liners, Sound Absorbers and Underbody Trim, meeting all fit and finish requirements.</p>
<p>You will be part of the team that creates and executes complex exterior vehicle systems in terms of styling, function and quality. You will utilize your expertise in one or more of these commodities and develop as a full vehicle engineer – designing and delivering entire systems rather than just components.</p>
<p>You will report to the Engineering Manager of Exterior Systems.</p>
<p>Responsibilities</p>
<p>As part of Tesla’s Vehicle Exterior Engineering team, you will design release and launch exterior components and subsystems, aligned with program product profile with responsibilities to include:</p>
<p>· Concept Engineering &amp; feasibility;</p>
<p>· Packaging &amp; layout within vehicle architecture;</p>
<p>· Design to deliver customer-driven exterior system targets for craftsmanship, function, cost and weight;</p>
<p>· Participate in the iterative process with the Tesla design/styling studio to deliver the optimal balance of form vs. function vs. cost;</p>
<p>· Detail design including datum &amp; fixation strategy, GD&amp;T;</p>
<p>· Complete and release component &amp; sub system design, utilizing a mix of in-house design and supplier engineering where required;</p>
<p>· Utilize DFSS methodologies as appropriate during the design, validation and launch of the program;</p>
<p>· Interpret CAE simulation results and integrate recommendations into product design;</p>
<p>· Collaborate with key suppliers for approving tooling designs for block out and manufacturing;</p>
<p>- Support overall vehicle development milestones and prototype/production build events;</p>
<p>· Collaborate with cross-functional teams within the Tesla Vehicle Engineering, Manufacturing Engineering and Procurement groups to ensure system manufacturing and assembly feasibility and serviceability.</p>
<p>· Responsible for technical documentation to include DFMEAs, DVP&amp;R’s.</p>
<p>Requirements</p>
<p>• Bachelor of Science in Mechanical Engineering (MSME preferred). Preferably, 5 years of experience in automotive or similar field, but proven evidence of technical aptitude can be a substitute for exposure. Evidence of following the design process from initial concept stages through tooling release and production launch, having completed 3D and 2D CAD in Catia V5 or V6;</p>
<p>• Automotive Engineering with components in the Exterior environment preferred;</p>
<p>• Experience managing suppliers for product development;</p>
<p>• Have a good mix of designing a variety of materials (stamped, injection mold, cast, etc.) and designing kinematics/ mechanisms;</p>
<p>• Understand the fundamental differences in design and engineering between low/high volume production, entry/premium vehicle systems and have examples or a portfolio of completed programs;</p>
<p>•Utilize DFSS methodologies as appropriate during the design, validation and launch of the programs;</p>
<p>• Strong familiarity with the development of specifications, DFMEAs, DVP&amp;R’s and other technical documents;</p>
<p>• Demonstrate an ability to manage difficult projects with tight timing constraints and provide examples of such scenarios throughout your career.</p>
<p>##################</p>
<p><br/>The Role<br/>As a Mechanical Engineer on Tesla’s Service Tooling Engineering team you will be responsible for specifying,<br/>designing, and validating all tools and equipment used to service Tesla electric vehicles world-wide. You will work<br/>with internal customers to identify and develop practical solutions to enable fast, seamless, and revolutionary<br/>service. The ideal candidate is someone who gets excited solving a variety of problems, competent building things,<br/>highly analytical, and sees the big picture needed to evolve a concept into a product. The ideal candidate is a hybrid<br/>of a mechanical, electrical, and software engineer and possesses a strong understanding of manufacturing concepts.<br/>Joining this team is a rare opportunity to become part of a world-class organization, supporting the latest EV<br/>technology. We are setting the standard that will continue to transform and revolutionize the automotive industry.</p>
<p>Responsibilities<br/>· Interact with teams of engineers and technicians working in other disciplines and on other subsystems to<br/>define the root cause of issue being addressed.<br/>· Convert tooling requirements and specifications from engineers and technicians into actionable procurement<br/>items while keeping in mind safety, cost minimization and timing urgency.<br/>· Design automotive technician tooling for large scale distribution.<br/>· Develop a concept and build a prototype solution.<br/>· Perform tooling validation with engineers and technicians.<br/>· Create tooling drawings and specifications in line with common industry practices.<br/>· Support process development.<br/>· Work closely with designated Tesla tooling distributors to define off-the-shelf tooling selection,<br/>implementation, and maintain tracking.<br/>· We are seeking a strong learner who can quickly ramp up and get a firm grasp of compliance regulations.</p>
<p>Requirements<br/>· Evidence of exceptional ability required<br/>· B.S in Mechanical Engineering, Mechatronics, or related engineering field from ABET accredited program<br/>· Experience in mechanical design and drafting preferred<br/>· Strong 3D CAD experience, CATIA a plus<br/>· GD&amp;T experience preferred<br/>· FEA experience preferred<br/>· Tooling and/or equipment design experience preferred<br/>· Hands on experience building mechanical and/or electrical systems<br/>· Automotive, Aerospace, or heavy equipment industry experience a plus<br/>· Familiarity with Regulatory compliance is a plus- (OSHA, CE, CCC, ASME related standards)<br/>· Machine shop and fabrication experience preferred<br/>· Strong communication, organization, and documentation skills<br/>· Proven ability to research information, solve challenging problems, and coordinate projects under tight timing<br/>constraints<br/>· Excellent fundamental engineering knowledge and have examples of applied engineering success through<br/>work, projects, or academic endeavors<br/>· Familiarity with working with various outside suppliers and managing deliverables<br/>· Ability to work autonomously to manage projects and maintain communication with interested parties<br/>· Ability to collaborate in a fast-paced team environment: pro-active team player who thinks ahead, plans, and<br/>suggests solutions<br/>· Mechanical aptitude, fabrication skills, machining, hand tools, and general electronics.</p>
<p>##################</p>
<p>Responsibilities:</p>
<p>3D CAD and 2D drawings<br/> for stators, rotors and assemblies<br/> Driving choices and<br/> development in:<br/> winding<br/> technology<br/> magnet<br/> technology<br/> steel<br/> stamping and lamination joining<br/> electrical<br/> insulation systems<br/> interconnections<br/> thermal<br/> sensing<br/> Identifying and<br/> qualifying suppliers of raw materials, components, and assemblies<br/> Design validation and<br/> durability testing profile development and data analysis<br/> Carry designs through<br/> to high-volume production; DFM, cost reductions, and second sourcing<br/> Mentoring junior<br/> engineers and interns</p>
<p>Requirements:</p>
<p>The<br/>ideal candidate will have:</p>
<p>· Evidence of exceptional<br/>ability</p>
<p>· Taken motor designs<br/>from clean sheet to volume production</p>
<p>· Experience with<br/>multiple coil winding and termination technologies</p>
<p>· Experience with<br/>multiple magnet technologies</p>
<p>· Worked with an<br/>international supply chain</p>
<p>· Automotive design and<br/>validation experience</p>
<p>· Asked “why” throughout<br/>his or her career</p>
<p>Expected<br/>skills: GD&amp;T, 3D CAD, 2D Drawings, DFMEA, PFMEA, structural and thermal FEA</p>
<p>Bonus<br/>skills: Catia, NVH analysis, electromagnetics design, specification writing,<br/>plastic injection molding, bolted joint design</p>
<p>###################</p>
<p>The Role</p>
<p>Geartrain Design Engineers in Tesla’s Drive Systems Engineering Team are responsible for design, release and launch of the geartrain components for Tesla vehicle product lines. You will be part of the team that creates and executes world-class drive units in terms of performance, cost, and manufacturability. Components of particular importance include gears, bearings, shafts, clutches, couplers, differentials and integration of these components.</p>
<p>Responsibilities</p>
<p>Geartrain system design utilizing parametric modeling to evaluate performance trade-offs<br/> Geartrain component design of rotating shafts, torque split devices, couplings, and clutches<br/> Finite element analysis<br/> 2D and 3D modeling utilizing CAD software<br/> Statistical analysis for component stack up requirements<br/> Component level testing for performance, durability, reliability, and variability<br/> Supplier coordination for high volume contract manufacturing<br/> Geartrain component quality troubleshooting resulting in supplier corrective action<br/> Production support for assembly of geartrain components including process and tool development to achieve equipment performance requirements<br/> Test specification design</p>
<p>Requirements</p>
<p>Experience in rotating machinery design<br/> Demonstrating technical aptitude from concept through release and launch for production or the equivalent in experience and evidence of exceptional ability.<br/> Proficiency in 3D modeling within a product development environment. CATIA preferred</p>
<p><br/> ################<br/> <br/> The Role</p>
<p>As a Mechanical Engineer on Tesla’s Service Tooling Engineering team you will be responsible for specifying, designing, and validating all tools and equipment used to service Tesla commercial energy products world-wide. You will work with internal customers to identify and develop practical solutions to enable fast, seamless, and revolutionary service. The ideal candidate is someone who gets excited solving a variety of problems, competent building things, highly analytical, and sees the big picture needed to evolve a concept into a product. The ideal candidate is a hybrid of a mechanical, and electrical engineer and possesses a strong understanding of manufacturing concepts. Joining this team is a rare opportunity to become part of a world-class organization, supporting the latest EV technology. We are setting the standard that will continue to transform and revolutionize the automotive industry.</p>
<p>Responsibilities</p>
<p>Own design, test and release of service tooling used in commercial energy application</p>
<p>Work with vendor to perform DFM/DFA studies to reduce cost and improve performance of service tooling for large volume</p>
<p>Interact with teams of engineers and technicians working in other disciplines and on other subsystems to define the root cause of issue being addressed</p>
<p>Convert tooling requirements and specifications from engineers and technicians into actionable procurement items while keeping in mind safety, cost minimization and timing urgency</p>
<p>Design technician tooling for large scale distribution across the globe</p>
<p>Develop a concept and build a prototype solution</p>
<p>Perform tooling test and validation with engineers and technicians</p>
<p>Create tooling drawings and specifications in line with common industry practices</p>
<p>Collaborate with industrial and process engineers to support process development and service tooling improvement</p>
<p>Support ergonomic, safety and region-specific code compliance of service tooling.</p>
<p>Work closely with designated Tesla tooling distributors to define off-the-shelf tooling selection, implementation, and maintain tracking</p>
<p>We are seeking an experienced engineer who can excel in fast paced environment with rapidly changing priority</p>
<p>Requirements</p>
<p>Evidence of exceptional ability required</p>
<p>B.S in Mechanical Engineering, Mechatronics, or related engineering field from ABET accredited program</p>
<p>2-4 years of Experience in mechanical design and drafting preferred</p>
<p>Strong 3D CAD experience, CATIA, PDM a plus</p>
<p>GD&amp;T experience preferred</p>
<p>Knowledge of Structural and thermal FEA experience a plus.</p>
<p>Tooling and/or equipment design experience preferred</p>
<p>Hands on experience building mechanical and/or electrical systems</p>
<p>Automotive, Aerospace, or heavy equipment industry experience a plus</p>
<p>Familiarity with Regulatory compliance is a plus- (OSHA, CE, CCC, ASME related standards)</p>
<p>Machine shop and fabrication experience preferred</p>
<p>Strong communication, organization, and documentation skills</p>
<p>Proven ability to research information, solve challenging problems, and coordinate projects under tight timing constraints</p>
<p>Excellent fundamental engineering knowledge and have examples of applied engineering success through work, projects, or academic endeavors</p>
<p>Familiarity with working with various outside suppliers and managing deliverables</p>
<p>Ability to work autonomously to manage projects and maintain communication with interested parties</p>
<p>Ability to collaborate in a fast-paced team environment: pro-active team player who thinks ahead, plans, and suggests solutions</p>
<p>Mechanical aptitude, fabrication skills, machining, hand tools, and general electronics</p>
<p>Tesla participates in the E-Verify Program</p>
<p>###################</p>
<p>The Product Design Integration team at Tesla is involved from the earliest stages to establish the product architecture and layout with consideration for all product level attributes (styling, cost, mass, manufacturability, performance, service, NVH, reliability, etc.)</p>
<p>The team works with design engineering, styling and manufacturing teams to develop compatible designs while ensuring product level attributes are optimized.</p>
<p>As the design matures, the team builds physical representations of the product in order to validate key decisions and further refine the design the prior to tooling and manufacture.</p>
<p>Responsibilities</p>
<p>Mechanical design and packaging of components to meet product and system level requirements while optimizing for product attributes.<br/> Lead product integration reviews, mediation in trade-off situations in order to ensure design solutions are in sync with product attribute targets.<br/> Support and execution of virtual builds, development buck, physical prototypes and pre-series production.<br/> Top-level product CAD and BOM management, use best practices for ensuring CAD completeness and compatibility, support release process.<br/> Pilot new CAD software and PLM tools.</p>
<p>Requirements</p>
<p>Solid understanding of engineering development process.<br/> Outstanding design, packaging and 3D modeling skills. CATIA is an advantage.<br/> Proven problem solving and strong communication skills.<br/> Flexibility and adaptability in a fast-paced and dynamic work environment.<br/> Passion for electric vehicles and energy efficiency.<br/> Experience with product lifecycle management tools is an advantage.<br/> Working knowledge of, or hands-on experience with, vehicle systems and package is an advantage (eg. Formula SAE / solar car competitions).<br/> Evidence of exceptional ability.<br/> <br/> ##############<br/> <br/> THE MISSION</p>
<p>Tesla is accelerating the world’s transition to sustainable energy. The Chassis Design Engineering team plays a critical part in that mission, helping to deliver a safe, efficient, comfortable, and enjoyable driving experience, while also focusing on the sustainability and value of Tesla’s products.</p>
<p>THE ROLE</p>
<p>This position is to support the launch of our vehicles for Gigafactory Texas. The engineer will support all Chassis subsystems and will work to ensure a fast and high quality start of production. The engineer will also lead efforts to bring on local suppliers for Chassis components for product improvement, savings, logistics improvements, and capacity expansion. Additionally, the engineer will engage in product development for current and future vehicles (specifically Steer-by-Wire and Brake/motor Integration), and provide a solid foundation for future vehicle engineering operations in Germany.</p>
<p>The Chassis Design Engineering team is responsible for tires, wheels, hubs, halfshafts, suspension, subframes, brakes, pedals/controls, and air suspension systems on all of Tesla’s passenger car and heavy vehicle programs. A Mechanical Design Engineer on the team is responsible for bringing those systems from concept to production and beyond with support from other engineering teams at Tesla.</p>
<p>The engineer’s responsibilities include design, analysis, sourcing, prototyping, testing, vehicle assembly validation, quality control, engineering documentation, and more. The engineer must possess and should be able to readily apply mechanical engineering fundamentals to creatively solve problems and is expected to learn quickly while managing their projects independently with minimal oversight. During the design process an emphasis is placed on We are looking for someone who will going beyond the status quo to make the best product in terms of cost, mass, and performance. The engineer must should be able to communicate clearly and effectively to both technical and non-technical colleagues. Hands-on experience is a major plus for engineering development work and addressing production issues. Some travel to suppliers may be required, including international travel.</p>
<p>The engineer must will work with Tesla teams and component suppliers in order to:</p>
<p>- Develop and optimize designs in 3D CAD software with associated CAE tools</p>
<p>- Validate manufacturing, assembly, and service feasibility</p>
<p>- Complete and release component designs and documentation, including 2D drawings</p>
<p>- Validate components per defined engineering requirements</p>
<p>- Resolve issues and concerns with cross-functional teams including engineering, supply chain, production, and service</p>
<p>- Participate in the sourcing process and manage engineering relationships with suppliers</p>
<p>- Deliver to defined schedules</p>
<p>Requirements</p>
<p>- Bachelor of Science in Mechanical Engineering or equivalent</p>
<p>- Proficiency in a 3D CAD software (CATIA is a plus)</p>
<p>- Basic knowledge of GD&amp;T (proficiency is a plus)</p>
<p>- Experience with component design, analysis, and validation (aluminum and steel part design and manufacturing processes is a plus)</p>
<p>- Great technical and interpersonal communication</p>
<p>- Evidence of being a self-starter and bringing projects to completion great finisher</p>
<p>- Prior experience in a relevant engineering field is valued, but the team has openings from entry level to expert</p>
<p>THE TEAM</p>
<p>The Chassis team is comprised of engineers from many backgrounds and experience levels. You’ll work alongside experts with many years of experience, high aptitude recent graduates, and people from every stage in between. Collaboration, learning, and growth are core to the team’s success. We look for anyone with demonstrated exceptional ability to solve problems in both individual and team settings. <br/> <br/>###########</p>
<p>Mechanical<br/>Engineer, Production Control</p>
<p>Description</p>
<p>This<br/>responsibility includes coordinating daily workload and assignments and<br/>balancing headcount resources as needed to support the PC Equipment Engineering<br/>&amp; Maintenance organization. This<br/>role will also evaluate employees, work with employees on training/career<br/>plans, and recruit additional talent for the department.</p>
<p>The<br/>Equipment Engineer will perform these duties in addition to being the subject<br/>matter expert of the team, performing the same day-to-day work as members of<br/>their team, while also acting as the single point of contact for their team for<br/>all major communication.</p>
<p>The Role</p>
<p>The Equipment Engineer is responsible for designing,<br/>delivering, and managing equipment to support production of all Tesla products.<br/>We are looking for a talented and highly motivated individual to join the PC<br/>Equipment Engineering Team. This team is responsible for supporting all<br/>physical engineering needs of the Production Control Team, including designing<br/>equipment for part transport and staging, providing solutions to safety and<br/>ergonomic issue, as well as leading warehouse and process improvement and new<br/>product launch projects. The scope of equipment includes, but is not<br/>limited to: conveyors, lifts, ASRSs, robots, and mobile equipment including<br/>AGVs. Successful members of the team<br/>will be highly proactive and self-sufficient in pursuing improvement projects,<br/>will be able to multitask and refocus efforts immediately to meet constantly<br/>shifting demands in a fast-paced environment, and have exceptional leadership<br/>ability to drive cross functional collaboration projects to completion on or<br/>ahead of schedule.</p>
<p>This position reports to the Production Control – Equipment<br/>Engineering Manager.</p>
<p>Responsibilities</p>
<p>• Design equipment meeting<br/>interdepartmental needs and specifications.</p>
<p>• Creation of equipment<br/>drawings and specs, quotes, and purchase requisitions.</p>
<p>• Utilize DFMA principles in<br/>production creation and improvement projects.</p>
<p>• Develop business cases for<br/>improvement projects and equipment acquisitions.</p>
<p>• Order equipment to meet<br/>staffing, spares, and maintenance needs.</p>
<p>• Interface with suppliers<br/>for manufacturing feasibility, validation, and other engineering activities, as<br/>necessary.</p>
<p>• Deliver specifications,<br/>designs, analyses, and prototypes on time and within budget.</p>
<p>• Ensure designs are<br/>compatible with packaging, material-handling, and production processes and are<br/>appropriately serviceable.</p>
<p>• Support equipment -based<br/>process introductions and adjustments.</p>
<p>• Day to day coverage of<br/>production line equipment: respond to alarms, breakdowns, and Production<br/>requests quickly and efficiently to minimize downtime.</p>
<p>• Diagnoses equipment failures,<br/>finds root cause and communicates actions taken to the rest of the team.</p>
<p>• Become Expert Level Trainer on<br/>all machines in assigned area and be responsible for the level of knowledge of<br/>Shift technicians.</p>
<p>• Takes initiative to create,<br/>implement and improve PM documents and schedules.</p>
<p>• Perform major equipment repairs<br/>and rebuilds, (some weekends and holidays required).</p>
<p>• Participate in spare part<br/>analysis and inventory development, cost reduction and improvement.</p>
<p>• Work with Spares Coordinator<br/>and Maintenance Engineering to RMA faulty components and communicate needs to<br/>the vendor.</p>
<p>• Work with Process and Equipment<br/>engineering and other cross functional groups to resolve maintenance issues,<br/>improve equipment reliability, review procedures, and minimize equipment<br/>downtime.</p>
<p>• Investigate and implement<br/>countermeasures to prevent repetitive breakdowns.</p>
<p>• Active leader of a TPM team<br/>while taking on improvement projects to assist in improving the factory.</p>
<p>• Design and Implement Equipment<br/>Reliability Improvement Projects</p>
<p>Requirements</p>
<p>• Bachelor of Science or<br/>higher in mechanical engineering or similar field of study.</p>
<p>• Work efficiently and<br/>productively both independently and in team settings</p>
<p>• Communicate clearly using<br/>excellent written and verbal skills.</p>
<p>• Demonstrate talent for<br/>conceiving efficient design solutions to complex engineering challenges.</p>
<p>• Proficiency in CATIA V5,<br/>or similar 3D CAD software (Solidworks, ProE, Unigraphics, etc).</p>
<p>• Basic understanding of<br/>GD&amp;T as well as weld symbols.</p>
<p>• Experience with rapid<br/>prototyping and small to medium volume production.</p>
<p>• Knowledge of relevant<br/>manufacturing processes and a variety of engineering materials, fastening<br/>methods,</p>
<p>• Familiarity with designing<br/>any or all of the following: mobile &amp; stationary material handling<br/>equipment, towed dollies, racks, stands, lift-assists, and end-of-arm tools.</p>
<p>• 2+ years of experience<br/>performing similar work (Automotive industry experience preferred)</p>
<p>• Familiarity with industrial robots and controls<br/>systems.</p>
<p>############</p>
<p><br/>Role</p>
<p>Majority of work will center around developing designs for<br/>the Vehicle Production plant and surrounding facilities. This position will<br/>mentor junior engineers/designers and may require managing outside consultants in<br/>order to meet project design schedules. This candidate must be able to<br/>prioritize and manage workload on multiple projects to maintain high quality<br/>and productivity.</p>
<p>Responsibilities</p>
<p>Responsible<br/> for developing mechanical design packages for permitting and construction<br/> Mentor<br/> and supervise engineers/designers to develop equipment datasheets, construction<br/> documents and specifications<br/> Be<br/> a technical resource for engineers and designers<br/> Review<br/> and/or develop designs that are cost effective, Code compliant while meeting Tesla<br/> quality and schedule requirements<br/> Able<br/> to develop high level cost estimates with material take off information for all<br/> sizes of projects in short time frames<br/> Communicate<br/> effectively and timely to stakeholders and engineering team<br/> Must<br/> be able to prioritize and manage heavy workload to ensure high quality and<br/> productivity</p>
<p>Requirements</p>
<p>Minimum of 10 years HVAC and Plumbing/FP<br/> design experience<br/> Familiar with International Energy<br/> Conservation, Mechanical, Plumbing and Fire Protection Codes, NFPA standards,<br/> SMACNA duct construction standards, ACGIH Ventilation Practices, and ASHRAE 62<br/> and 90.1<br/> Professional<br/> Engineer registration for NV and/or California or ability to be registered<br/> within a year<br/> Proficient in the use of following applications<br/> Trane or Carrier HAP, Revit, AutoCAD, Microsoft Office Suite. Experience in Caesar<br/> 2 and Pipe-flo are a plus.<br/> Familiar with following types of calculations: duct<br/> static pressure drop, pump head, NPSHa, fuel gas pipe sizing, steam and<br/> condensate pipe sizing.</p>
<p>Plumbing and Fire Protection design experience<br/> Designs<br/> using the following equipment types: open and/or closed circuit cooling<br/> towers, water and air cooled chillers, gas fired and electric water<br/> boilers, large air handling units with heating/cooling coils and/or gas<br/> fired heaters, packaged air to air heat pumps, water to water heat pumps,<br/> dust collectors, humidifiers, dehumidifiers, fans, and pumps.<br/> Knowledge or<br/> experience with the following is a plus: Abatement systems (thermal oxidizers,<br/> dry and wet scrubbers), Heat Exchangers (shell/tube, plate/frame, brazed<br/> fin), Control Valves and Instrumentation, Heat Recovery Systems.<br/> Able to<br/> specify ductwork material and size for various ducted exhaust systems and<br/> pressure classes<br/> Able to<br/> specify pipe sizes to meet Energy Code and to specify material and fitting<br/> types for various hydronic and steam systems<br/> Knowledge and experience with writing sequences of<br/> operation for HVAC systems</p>
<p>Construction<br/> Administration experience including field reports, punch lists, answering RFIs, and reviewing shop<br/> drawings<br/> Direct experience in the<br/> preparation of mechanical contract drawings and engineering specifications</p>
<p><br/> <br/> #################<br/> <br/> Role</p>
<p>Majority of work will center around developing designs for the Vehicle Production plant and surrounding facilities. This position will mentor junior engineers/designers and may require managing outside consultants in order to meet project design schedules. This candidate must be able to prioritize and manage workload on multiple projects to maintain high quality and productivity.</p>
<p>Responsibilities</p>
<p>Responsible for developing mechanical design packages for permitting and construction<br/>Mentor and supervise engineers/designers to develop equipment datasheets, construction documents and specifications<br/>Be a technical resource for engineers and designers<br/>Review and/or develop designs that are cost effective, Code compliant while meeting Tesla quality and schedule requirements<br/>Able to develop high level cost estimates with material take off information for all sizes of projects in short time frames<br/>Communicate effectively and timely to stakeholders and engineering team<br/>Must be able to prioritize and manage heavy workload to ensure high quality and productivity</p>
<p>Requirements</p>
<p>Minimum of 2 years HVAC and Plumbing/FP design experience<br/>Familiar with International Energy Conservation, Mechanical, Plumbing and Fire Protection Codes, NFPA standards, SMACNA duct construction standards, ACGIH Ventilation Practices, and ASHRAE 62 and 90.1<br/>Professional Engineer registration for NV and/or California or ability to be registered within a year<br/>Proficient in the use of following applications Trane or Carrier HAP, Revit, AutoCAD, Microsoft Office Suite. Experience in Caesar 2 and Pipe-flo are a plus.<br/>Familiar with following types of calculations: duct static pressure drop, pump head, NPSHa, fuel gas pipe sizing, steam and condensate pipe sizing.<br/>Plumbing and Fire Protection design experience<br/>Designs using the following equipment types: open and/or closed circuit cooling towers, water and air cooled chillers, gas fired and electric water boilers, large air handling units with heating/cooling coils and/or gas fired heaters, packaged air to air heat pumps, water to water heat pumps, dust collectors, humidifiers, dehumidifiers, fans, and pumps.<br/>Knowledge or experience with the following is a plus: Abatement systems (thermal oxidizers, dry and wet scrubbers), Heat Exchangers (shell/tube, plate/frame, brazed fin), Control Valves and Instrumentation, Heat Recovery Systems.<br/>Able to specify ductwork material and size for various ducted exhaust systems and pressure classes<br/>Able to specify pipe sizes to meet Energy Code and to specify material and fitting types for various hydronic and steam systems<br/>Knowledge and experience with writing sequences of operation for HVAC systems.<br/>Construction Administration experience including field reports, punch lists, answering RFIs, and reviewing shop drawings<br/>Direct experience in the preparation of mechanical contract drawings and engineering specifications</p>
<p>##############</p>
<p>Role</p>
<p>Tesla is looking for an exceptionally skilled and motivated Staff Mechanical Engineer to design the next generation of batteries, solar hardware, EV chargers and energy management products for the home. You will specify, design and test the enclosures, busbars, harnesses, thermal components and other hardware that make up our products.</p>
<p>You will be part of a small mechanical design team that is working on multiple products in parallel. Each of those product programs requires working as part of a multi-disciplinary team from concept to mass production.</p>
<p>Responsibilities</p>
<p>Modeling and design of mechanical systems and components including plastic, metal and sheet metal parts, conductors, insulators, wire-harnesses, fasteners, and other components.<br/>Mechanical design analysis including thermal, structural, design for assembly, and design for test.<br/>Solve electronics packaging issues including: isolation, EMC, RF transmission, thermal management, interconnection, shock and vibration management, etc.<br/>Utilize engineering principles to create test plans, identify root causes for field or test failures and implement fixes.<br/>Create drawing packages and instructions for proper manufacturing and assembly of designs.<br/>Assist in engineering prototype builds and component fabrication.<br/>Collaborate with other mechanical, systems, electrical, digital control, manufacturing test, industrial design, and test engineers to meet design and program needs.</p>
<p>Requirements</p>
<p>Aligned with Tesla’s mission to accelerate the transition to sustainability.<br/>Ideally, 4-5 years’ experience designing high volume electronics products or appliances. Equivalent experience in high volume automotive hardware or lower volume power products (inverters, transformers, etc) is also acceptable.<br/>Deep understanding of the material science of components used in mechanical design (metals, insulators, plastics, connectors, gaskets, conductors etc).<br/>4-5 years’ experience using 3D mechanical design and analysis tools (CATIA v6, hyperworks experience preferred).<br/>Excellent communication skills.<br/>Ability to work in a fast-paced and challenging environment.</p>
<p>Preferred</p>
<p>Experience using CATIA v6 preferred but not required.<br/>Experience with DFMEA, DVP&amp;Rs, failure analysis, statistical control methods<br/>Knowledge of GD&amp;T, finite element analysis and design for reliability concepts.<br/>Working knowledge of Matlab, Labview, and Python.<br/>Experience with designing products that receive international safety certifications.<br/>Basic understanding of electrical design fundamentals. </p>
<p>Mechanical Design Engineer</p>
<p>We design and manufacture advanced electric vehicles, battery packs, drive systems, and energy products that are changing the future of transportation and sustainable energy. We are building technically strong, fast-moving teams that pride themselves on superior execution.</p>
<p>Description: Tesla is seeking an amazing Mechanical Engineer to lead full life cycle development of automated test equipment, for core test technologies. The position is based in Reno/Tahoe, Nevada. The candidate will revolutionize every facet of manufacturing test automation, and provide technical leadership to a superstar team.</p>
<p>Responsibilities</p>
<p>· Set the standard of technical and leadership excellence for the team. You<br/>will be capable of executing any level of test design to lead from the front.</p>
<p>· Develop innovative technologies for ultra-reliable testers, unit defect detection capabilities, and previously unimagined production rate scaling capabilities.</p>
<p>· Participate in initial equipment conceptual development and carefully balance product specifications, process requirements, layout complexity, cost, and lead-time limits.</p>
<p>· Able to define most efficient plan for testing, focusing on test time reduction and appropriate complexity to promptly release testers.</p>
<p>· Modeling and testing for stress, thermal, fluid, and mechanical aspects of machines/components, that perform effectively while exposed to daily abuse of a manufacturing environment.</p>
<p>· Embed with product design teams to drive design for test/manufacturing.</p>
<p>· Ensure test machines provide effective testing coverage, protect the unit under test,<br/>meet up time needs, and reduce cycle time requirements for scalable high volume manufacturing.</p>
<p>· Drive enhanced mechanical design standards, best practices, and tools to improve designs.</p>
<p>· Characterization and validation of new equipment for introduction to the production floor.</p>
<p>· Drive continuously increasing test automation, including robotics and actuator based test systems.</p>
<p>· Create outstanding documentation packages, train others in the maintenance and long term usage of the test systems.</p>
<p>· Team leadership, mentoring growing engineering team.</p>
<p>Requirements</p>
<p>· 1-3 years of experience designing best in class mechanical products and test automation systems.</p>
<p>· Ability to lead projects and architect the overall system design in cooperation with electrical and software test automation disciplines.</p>
<p>· Experience with initial equipment conceptual development and carefully balancing product specifications, process requirements, layout complexity, cost, and lead-time limits.</p>
<p>· Be able to perform required analysis to ensure a successful design (stress, strain, thermal, tolerance, cost and mass optimization, etc).</p>
<p>· Solid knowledge of heat transfer and thermal management.</p>
<p>· Expertise in material science of components used in mechanical design (metals, insulators, plastics, connectors, gaskets, etc).</p>
<p>· Desire to drive ultra-reliable, cost effective designs that beat schedules.</p>
<p>· Expertise in SolidWorks, CATIA, FEA simulation, GD&amp;T, and design for reliability concepts.</p>
<p>· Experience in deploying test machines in a large scale manufacturing environment and ability to come up with rapid methods for scaling and duplication of test equipment.</p>
<p>· Remain engaged, proactive and positive in tough circumstances, owning assignments and taking full accountability for overall team success.</p>
<p><br/>Mechanical Design Engineer - Drive Systems<br/>Austin, TX<br/>$61K-$143K (Glassdoor est.)</p>
<p>Design and develop mechanical parts and systems while working closely with electromagnetic, manufacturing and power electronics engineers.<br/> <br/>Design and develop electric machines and mechanical power transmission components. Design plastics, sheet metal, and castings for electric vehicle drive systems. Conduct thermal and mechanical modelling and testing of systems and components. Validate components and prototypes in bench and vehicle<br/>configurations.</p>
<p>Collaborate with manufacturing engineers and various suppliers to transition concepts to production. Utilize understanding of materials and manufacturing processes to collaborate with various suppliers and other internal team members. Use CAD modelling techniques and CATIA v5 to design and develop electric machines and mechanical components for testing and manufacturing.</p>
<p>Requirements:</p>
<p>Five (5) years of progressive experience in the job offered or five (5) years of experience in<br/> mechanical engineering for automotive applications.<br/> Three (3) years of experience in the job offered or three (3) years of experience in mechanical<br/> engineering for automotive applications.<br/> CAD modelling with plastics and metals parts<br/> CATIA v5 experience with complex parts and assemblies<br/> Dimensional drawings with expertise in ANSI Y14.5 GD&amp;T<br/> Manufacturing equipment design and implementation Dynamometer test requirements and data analysis preferred</p>
<p><br/>Mechanical Engineer</p>
<p>$54K-$127K (Glassdoor est.)</p>
<p>Role</p>
<p>Majority of work will center around developing designs for the Vehicle Production plant and surrounding facilities. This position will mentor junior engineers/designers and may require managing outside consultants in order to meet project design schedules. This candidate must be able to prioritize and manage workload on multiple projects to maintain high quality and productivity.</p>
<p>Responsibilities</p>
<p>Responsible for developing mechanical design packages for permitting and construction<br/> Mentor and supervise engineers/designers to develop equipment datasheets, construction documents and specifications<br/> Be a technical resource for engineers and designers<br/> Review and/or develop designs that are cost effective, Code compliant while meeting Tesla quality and schedule requirements<br/> Able to develop high level cost estimates with material take off information for all sizes of projects in short time frames<br/> Communicate effectively and timely to stakeholders and engineering team<br/> Must be able to prioritize and manage heavy workload to ensure high quality and productivity</p>
<p>Requirements</p>
<p>Minimum of 3 years HVAC and Plumbing/FP design experience<br/> Familiar with International Energy Conservation, Mechanical, Plumbing and Fire Protection Codes, NFPA standards, SMACNA duct construction standards, ACGIH Ventilation Practices, and ASHRAE 62 and 90.1<br/> Professional Engineer registration for NV and/or California or ability to be registered within a year<br/> Proficient in the use of following applications Trane or Carrier HAP, Revit, AutoCAD, Microsoft Office Suite. Experience in Caesar 2 and Pipe-flo are a plus.<br/> Familiar with following types of calculations: duct static pressure drop, pump head, NPSHa, fuel gas pipe sizing, steam and condensate pipe sizing.<br/> Plumbing and Fire Protection design experience<br/> Designs using the following equipment types: open and/or closed circuit cooling towers, water and air cooled chillers, gas fired and electric water boilers, large air handling units with heating/cooling coils and/or gas fired heaters, packaged air to air heat pumps, water to water heat pumps, dust collectors, humidifiers, dehumidifiers, fans, and pumps.<br/> Knowledge or experience with the following is a plus: Abatement systems (thermal oxidizers, dry and wet scrubbers), Heat Exchangers (shell/tube, plate/frame, brazed fin), Control Valves and Instrumentation, Heat Recovery Systems.<br/> Able to specify ductwork material and size for various ducted exhaust systems and pressure classes<br/> Able to specify pipe sizes to meet Energy Code and to specify material and fitting types for various hydronic and steam systems<br/> Knowledge and experience with writing sequences of operation for HVAC systems.<br/> Construction Administration experience including field reports, punch lists, answering RFIs, and reviewing shop drawings<br/> Direct experience in the preparation of mechanical contract drawings and engineering specifications</p>
<p><br/> <br/>Mechanical Design Engineer</p>
<p>$56K-$133K</p>
<p>The Role:</p>
<p>We are looking for a highly motivated and talented individual to join the Production Test Engineering(PTE) Team. The mechanical design engineer is responsible for test equipment design and maintenance of end of line Powertrain Test Equipment for the Tesla Model 3 &amp; energy products as well as supporting design, production &amp; quality teams on future Tesla programs. Mechanical design engineer within the PTE Team requires strong engineering skills, a passion to push the boundaries of technology, and the drive to make our designs successful. You must have a genuine passion for engineering products that will fundamentally change the world’s energy infrastructure, and thrive working in a fast-paced, entrepreneurial environment. The PTE Team collaborates closely with other departments, requiring a team player mentality. Our team requires each individual to be self-motivated and<br/>disciplined.</p>
<p>Responsibilities</p>
<p>Work closely with the design team to develop low cost, highly reliable, and automated test<br/> fixtures for powertrain end of line testing<br/> Troubleshoot, define, and initiate corrective actions for field failures as well as production issues<br/> Advise various stakeholders on the technical issues that affect the product design, production<br/> cycle-time &amp; cost<br/> Maintains up-to-date thorough knowledge of applicable product design and test specification changes<br/> Optimize designs via analytical, numerical and/or empirical assessments<br/> Develop and detail design concepts in CATIA V5 (soon to be V6) &amp; fabricate functional prototypes and test methods to vet out new concepts and automation for optimizing performance and cost<br/> Determine required tolerances using GD&amp;T and produce drawings for release to suppliers<br/> Conduct DFMEA and Fault Tree analysis Provide test procedures for Factory Acceptance Testing (FAT) Validation and characterization of new equipment and fixtures for introduction to the production floor<br/> Specification development for test equipment and providing technical support to manufacturing<br/> in determining proper test equipment and testing procedures per industry standards<br/> Research and benchmark competitive technologies and innovative designs<br/> Support production ramp &amp; ongoing/continuous product/process improvement<br/> Maintenance of test fixtures and test equipment calibration records<br/> Training test technicians and line operators on test processes</p>
<p>Requirements</p>
<p>Experience and knowledge in fixture/equipment design<br/> Experience with AutoCAD, CATIA V6 &amp; Solidworks<br/> Knowledge of all applicable electrical standards related to EV Powertrain Design<br/> Ability to multi-task and work cross-functionally<br/> Ability to perform various roles and responsibilities from day to day, including, but not limited to test procedure, design test fixtures, interaction with manufacturing, production, design engineers and supply chain management<br/> Strong troubleshooting skills required<br/> Strong interpersonal skills and effective communicator<br/> Good Attendance, Initiative, responsible follow-through, and a willingness to help<br/> Basic programming knowledge like c, python, c++, HTML plus</p>
<p>Required Soft Skills</p>
<p>Detail-oriented personality with solid documentation and reporting skills Passionate about product design.Good Attendance, Initiative, responsible follow-through, and a willingness to help<br/> Basic programming knowledge like c, python, c++, HTML plus <br/> Ambitious</p>
<p><br/>######################</p>
<p>The Role</p>
<p>As a Mechanical Engineer on the Low Voltage Wire Harness team, you will own design for a subset of electrical wire harnesses in Tesla vehicles, both in development and in production, and also in service. You will be responsible for all stages: concept, requirements definition (iterative), prototype, detailed CATIA (V6) model, 2D drawing synchronized with electrical circuitry provided by the Wire Harness Electrical Engineer, vendor selection (support to Supply Chain), design validation and optimization in Beta and RC phases, volume tooling and processes for Start of Production and production ramp-up. Life-cycle improvements and cost reductions as needed.</p>
<p>Responsibilities</p>
<p>Make design decisions, and provide leadership in resolving electrical/physical integration and optimization issues with other internal Tesla parties on a daily basis, namely for example: Body, Low Voltage Systems, Infotainment, Audio, PCBA Design, Chassis, Interiors, Seats, HVAC, Environmental/Vibe Testing, CATIA Integration, CAE Crash Analysis, Vehicle Durability and Crash Test, Manufacturing Engineering, etc.</p>
<p>Design to significantly reduce mass and volume/space and to optimize wire bundle routing in the vehicle, minimize NVH (Noise, Vibration, Harshness), prevent possibility of moisture ingress/damage</p>
<p>Work with Suppliers for Design-for-Manufacturability to reduce assembly complexity, cost and lead time reduction</p>
<p>Design components for ease and efficiency of manufacture, as well as ease and efficiency of installation in vehicles. Work with manufacturing and assembly process engineers for successful implementation.</p>
<p>Work with SIE (Supplier Industrial Engineer) to set up and review production lines at suppliers, including any associated mechanical components</p>
<p>Support RC (Release Candidate – pre-production) with quick-turn parts and make sure installation works properly as design-intended incl. supporting with a subassembly fixture design prior to full vehicle being available</p>
<p>Highlight design concerns (such as high insertion force on connectors, grommet installation and sealing issues) or reliability concerns on detailed design features and drive the solution progress to remove these concerns through weekly tests, follow ups, upper management deep-dive reviews and cross functional team reviews.</p>
<p>Closely work with Reliability team to ensure proper testing on finished designs (vibe, corrosion, torque-to-failure, EMI/shielding, etc.)</p>
<p>Required Skills</p>
<p>Mechanical Engineering: thermal, heat dissipation, vibration, strength, durability, corrosion-prevention, materials, etc</p>
<p>Design-for-Manufacturability, including Automation</p>
<p>CATIA 3D modeling</p>
<p>Mentor Graphics Capital Harness 2D engineering drawing creation</p>
<p>ENOVIA part numbering, drawing maintenance, ECR’s, deviations, etc</p>
<p>Quick-turn prototyping using a variety of techniques</p>
<p>Project task coordination and tracking using JIRA, Confluence, etc</p>
<p>Specifying and directing Environmental Lab testing, CAE analysis, etc</p>
<p>Tesla participates in the E-Verify Program</p>
<p>#############################</p>
<p>The Role</p>
<p>As Senior Mechanical Design Engineer, Lighting Systems, you will be responsible for the design, release and launch of lighting systems for future Tesla vehicle product lines. You will work alongside the most creative and resourceful designers and engineers in the world on a lean and agile team. From concept definition at the industrial design and clay modeling phase, to prototype creation, production design release and launch, you will own the product design through all stages of the design cycle developing the style, integrating the latest technologies and delivering industry-leading lighting systems for all global markets. You will be reporting to the Engineering Manager of Vehicle Lighting Systems within Vehicle Engineering.</p>
<p>Responsibilities</p>
<p>Engineer, develop and execute world-class automotive lamp systems that meet styling intent and are compliant to regulatory requirements.<br/>Work from clay model feasibility through to production launch.<br/>Collaborate with Tesla’s design/styling team developing function layouts that meet legal compliance and support the design theme integrating feasible solutions for new technology adoption.<br/>Lead cross functional integration of lighting systems with the Tesla design/styling team, engineering teams such as body, exteriors, 12V electronics and manufacturing as well as with Tesla supply chain teams and supplier engineers to achieve technical feasible designs.<br/>Participate in the iterative process with all stakeholders to deliver the optimal balance of form, function, performance and cost.<br/>Direct Tesla and supplier engineering lamp development and CAD designs.<br/>Maintain all required product development documentation including SOR, DFMEA, DVP&amp;R.</p>
<p>Requirements</p>
<p>Minimum of 5 years of product engineering experience, with 3 years and/or 2 product cycles specifically in automotive lamp system and component design.<br/>Bachelor’s degree in mechanical engineering (Masters preferred).<br/>Successful execution of automotive lamp programs with a strong preference for experience with full LED lighting systems.<br/>Clear understanding of latest lighting technologies including lightguides, light blades, adaptive forward lighting (AFS) systems, Laser, OLED, Matrix, DMD, etc.<br/>Demonstrate technical aptitude, creativity in design, and the ability to execute feasible solutions to complex engineering problems.<br/>Complete understanding of lighting homologation requirements: FMVSS 108 and ECE R48 in particular.<br/>Strong understanding of optical system development process.<br/>Knowledge of Design for Manufacturing principles including GD&amp;T, assembly and dimensional engineering principles in design.<br/>Plastic component design experience with CATIA V5/V6 strongly preferred.<br/>Demonstrate exceptional ability, management of difficult projects with tight timing constraints and provide examples of notable achievements throughout your career.<br/>Tesla participates in the E-Verify Program</p>
<p>#############################</p>
<p>Mechanical Engineer, Production Control</p>
<p>Description</p>
<p>This responsibility includes coordinating daily workload and assignments and balancing headcount resources as needed to support the PC Equipment Engineering &amp; Maintenance organization. This role will also evaluate employees, work with employees on training/career plans, and recruit additional talent for the department.</p>
<p>The Equipment Engineer will perform these duties in addition to being the subject matter expert of the team, performing the same day-to-day work as members of their team, while also acting as the single point of contact for their team for all major communication.</p>
<p>The Role</p>
<p>The Equipment Engineer is responsible for designing, delivering, and managing equipment to support production of all Tesla products. We are looking for a talented and highly motivated individual to join the PC Equipment Engineering Team. This team is responsible for supporting all physical engineering needs of the Production Control Team, including designing equipment for part transport and staging, providing solutions to safety and ergonomic issue, as well as leading warehouse and process improvement and new product launch projects. The scope of equipment includes, but is not limited to: conveyors, lifts, ASRSs, robots, and mobile equipment including AGVs. Successful members of the team will be highly proactive and self-sufficient in pursuing improvement projects, will be able to multitask and refocus efforts immediately to meet constantly shifting demands in a fast-paced environment, and have exceptional leadership ability to drive cross functional collaboration projects to completion on or ahead of schedule.</p>
<p>This position reports to the Production Control – Equipment Engineering Manager.</p>
<p>Responsibilities</p>
<p>• Design equipment meeting interdepartmental needs and specifications.</p>
<p>• Creation of equipment drawings and specs, quotes, and purchase requisitions.</p>
<p>• Utilize DFMA principles in production creation and improvement projects.</p>
<p>• Develop business cases for improvement projects and equipment acquisitions.</p>
<p>• Order equipment to meet staffing, spares, and maintenance needs.</p>
<p>• Interface with suppliers for manufacturing feasibility, validation, and other engineering activities, as necessary.</p>
<p>• Deliver specifications, designs, analyses, and prototypes on time and within budget.</p>
<p>• Ensure designs are compatible with packaging, material-handling, and production processes and are appropriately serviceable.</p>
<p>• Support equipment -based process introductions and adjustments.</p>
<p>• Day to day coverage of production line equipment: respond to alarms, breakdowns, and Production requests quickly and efficiently to minimize downtime.</p>
<p>• Diagnoses equipment failures, finds root cause and communicates actions taken to the rest of the team.</p>
<p>• Become Expert Level Trainer on all machines in assigned area and be responsible for the level of knowledge of Shift technicians.</p>
<p>• Takes initiative to create, implement and improve PM documents and schedules.</p>
<p>• Perform major equipment repairs and rebuilds, (some weekends and holidays required).</p>
<p>• Participate in spare part analysis and inventory development, cost reduction and improvement.</p>
<p>• Work with Spares Coordinator and Maintenance Engineering to RMA faulty components and communicate needs to the vendor.</p>
<p>• Work with Process and Equipment engineering and other cross functional groups to resolve maintenance issues, improve equipment reliability, review procedures, and minimize equipment downtime.</p>
<p>• Investigate and implement countermeasures to prevent repetitive breakdowns.</p>
<p>• Active leader of a TPM team while taking on improvement projects to assist in improving the factory.</p>
<p>• Design and Implement Equipment Reliability Improvement Projects</p>
<p>Requirements</p>
<p>• Bachelor of Science or higher in mechanical engineering or similar field of study.</p>
<p>• Work efficiently and productively both independently and in team settings</p>
<p>• Communicate clearly using excellent written and verbal skills.</p>
<p>• Demonstrate talent for conceiving efficient design solutions to complex engineering challenges.</p>
<p>7+ years of experience performing similar work (Automotive industry experience preferred)</p>
<p>• Proficiency in CATIA V5, or similar 3D CAD software (Solidworks, ProE, Unigraphics, etc).</p>
<p>• Basic understanding of GD&amp;T as well as weld symbols.</p>
<p>• Experience with rapid prototyping and small to medium volume production.</p>
<p>• Knowledge of relevant manufacturing processes and a variety of engineering materials, fastening methods,</p>
<p>• Familiarity with designing any or all of the following: mobile &amp; stationary material handling equipment, towed dollies, racks, stands, lift-assists, and end-of-arm tools.</p>
<p>• 5+ years of experience performing similar work (Automotive industry experience preferred)</p>
<p>• Familiarity with industrial robots and controls systems.</p>
<p>Tesla participates in the E-Verify Program</p>
<p>#########################</p>
<p>The Role</p>
<p>The Senior Mechanical Design Engineer is responsible for inventing and shepherding design concepts into viable product offerings. The candidate should demonstrate a history of innovation, technical prowess, project management skills, a strong work ethic, and an ability to work cross-functionally.</p>
<p>Responsibilities</p>
<p>Design mechanical solutions for novel photovoltaic systems.<br/> Cross functional participation for product requirement definition<br/> Technical concept development / CAD creation of concepts<br/> Functional analysis by calculation/FEA<br/> Qualification of new technology platforms as mediums for design<br/> Prototype realization: hands-on manufacturing and/or project management of internal/external contract manufacturing<br/> Feasibility testing: create FMEA/test plans, work cross-functionally with Test. Field Applications, and Reliability Groups to execute test plans. Analyze resultant data<br/> Work with Manufacturing Engineering on product DFM. Support pilot rollout for product launch<br/> Collaborate with legal team to secure patents for new ideas</p>
<p>Requirements</p>
<p>Evidence of exceptional ability<br/> BS (or equivalent) in Mechanical Engineering, Industrial Engineering, or a related field<br/> 5 years of product design experience or an advanced degree in one of the above fields<br/> Experience with high volume product design and manufacturing preferred<br/> Must be proficient in Solidworks or similar CAD software, 3-D modeling and 3-D prototyping<br/> Must be available to travel 10% of time to visit suppliers, customers, and manufacturing lines. Some travel will be international<br/> Demonstrated record of creative problem solving skills<br/> Demonstrated record of successfully managing multiple projects simultaneously<br/> Demonstrated record of success working in a cross disciplinary, multi-cultural environment<br/> Demonstrated record of success working in a high pressure, tight deadline situation.<br/> Exceptional written, oral, interpersonal, and presentation skills<br/> Self-Driven, self-motivated, and able to make responsible decisions</p>
<p><br/> ########################<br/> <br/> Responsibility</p>
<p>Develop innovative and state of the art mechanical designs for high volume manufacturing utilizing 3D CAD and supported by analysis<br/> Create prototypes and support the development of manufacturing processes and automation<br/> Drive cross functional collaboration with CAE engineers, manufacturing engineers, suppliers, and test engineers to transition conceptual designs to production<br/> Determine required tolerances using GD&amp;T and produce 2D drawings for release to suppliers<br/> Conduct DFMEA and Fault Tree analysis<br/> Author documentation and requirements and deliver technical presentations<br/> Research and benchmark competitive technologies</p>
<p>Requirements</p>
<p>B.S. in Mechanical Engineering (or equivalent)<br/> Knowledge of material properties and applications<br/> Strong communication and a team mentality<br/> Understanding of and prior experience designing for one or more high volume manufacturing processes including stamping, drawing, injection molding, precision sheet metal, die cutting, metal welding<br/> Skills that are a plus<br/> Familiarity with Lithium-ion cells, module and battery pack design<br/> Experience designing parts for mass production with automated assembly<br/> Making or modifying parts in a machine shop<br/> Data acquisition and test equipment<br/> Structural finite element analysis</p>
<p><br/> #####################<br/> <br/> Mechanical Designers on the Battery Module Team We don’t just design things, we make<br/>them. The role requires strong fundamentals, a passion to push the boundaries of technology<br/>and the tenacity to make your designs successful. Our design requirements push the limits of<br/>physical possibility, which requires you to be extremely detail oriented and to hold your designs<br/>to the highest standards of quality and manufacturability. Our team drives collaboration with<br/>many engineering groups, requiring a team player mentality. Tesla moves quickly, so being self-<br/>motivated and disciplined is critical. You must be passionate, but direction changes quickly, so<br/>you must also be resilient. Our small team makes the batteries for all our Electric Vehicles and<br/>all our Energy Storage Products.</p>
<p>Responsibilities</p>
<p>Full product design responsibility, from concept through production launch and ramp<br/> 3D design of complex parts and assemblies<br/> Advancing product performance while driving down cost and mass<br/> Developing new technologies, supported with early process development<br/> Relentless improvement of existing products<br/> Hands-on prototyping<br/> Specification definition (dimensional, functional, performance, manufacturing)<br/> Meticulous release of 2D part and assembly drawings<br/> Owning basic testing and analysis; supporting advanced testing and analysis<br/> Root causing test failures and production problems<br/> Collaboration with other teams inside Tesla (manufacturing, testing, NPI, supply chain,</p>
<p>etc.)<br/> Close, active supplier relationships<br/> Travel to support production launch and ramp (supplier visits, on-site at Tesla factories,</p>
<p>etc.)</p>
<p>Requirements</p>
<p>Strong Engineering fundamentals in heat transfer, fluids, mechanics, and electronics<br/> Desire to own a lot and work hard - we have small teams and fast timelines<br/> Demonstrated ability to create products: CAD design to hand on prototyping<br/> Experience with various manufacturing processes such as plastic injection molding,</p>
<p>metal stamping, thermoforming, welding/brazing, plating, heat treating, and bonding.</p>
<p>Direct machine shop skills a plus.<br/> Experience in designing for high volume assembly, both manual and automated<br/> Experience defining test plans, designing test setups, and analyzing data<br/> A detail oriented personality with solid documentation and reporting skills.<br/> Proficiency in CAD modeling. CATIA V5/V6 experience a plus but not mandatory.<br/> Experience with student Formula Vehicle, Solar Car, Hyperloop etc. a plus.</p>
<p>########################<br/> <br/> As a Sr. Mechanical Design Engineer, you will be responsible for designing, releasing and launching components for future vehicle lines including, but not limited to Front &amp; Rear Fascia Assemblies, Wheel Liners, Sound Absorbers and Underbody Trim, meeting all fit and finish requirements.</p>
<p>You will be part of the team that creates and executes complex exterior vehicle systems in terms of styling, function and quality. You will utilize your expertise in one or more of these commodities and develop as a full vehicle engineer – designing and delivering entire systems rather than just components.</p>
<p>You will report to the Engineering Manager of Exterior Systems.</p>
<p>Responsibilities</p>
<p>As part of Tesla’s Vehicle Exterior Engineering team, you will design release and launch exterior components and subsystems, aligned with program product profile with responsibilities to include:</p>
<p>· Concept Engineering &amp; feasibility;</p>
<p>· Packaging &amp; layout within vehicle architecture;</p>
<p>· Design to deliver customer-driven exterior system targets for craftsmanship, function, cost and weight;</p>
<p>· Participate in the iterative process with the Tesla design/styling studio to deliver the optimal balance of form vs. function vs. cost;</p>
<p>· Detail design including datum &amp; fixation strategy, GD&amp;T;</p>
<p>· Complete and release component &amp; sub system design, utilizing a mix of in-house design and supplier engineering where required;</p>
<p>· Utilize DFSS methodologies as appropriate during the design, validation and launch of the program;</p>
<p>· Interpret CAE simulation results and integrate recommendations into product design;</p>
<p>· Collaborate with key suppliers for approving tooling designs for block out and manufacturing;</p>
<p>- Support overall vehicle development milestones and prototype/production build events;</p>
<p>· Collaborate with cross-functional teams within the Tesla Vehicle Engineering, Manufacturing Engineering and Procurement groups to ensure system manufacturing and assembly feasibility and serviceability.</p>
<p>· Responsible for technical documentation to include DFMEAs, DVP&amp;R’s.</p>
<p>Requirements</p>
<p>• Bachelor of Science in Mechanical Engineering (MSME preferred). Preferably, 5 years of experience in automotive or similar field, but proven evidence of technical aptitude can be a substitute for exposure. Evidence of following the design process from initial concept stages through tooling release and production launch, having completed 3D and 2D CAD in Catia V5 or V6;</p>
<p>• Automotive Engineering with components in the Exterior environment preferred;</p>
<p>• Experience managing suppliers for product development;</p>
<p>• Have a good mix of designing a variety of materials (stamped, injection mold, cast, etc.) and designing kinematics/ mechanisms;</p>
<p>• Understand the fundamental differences in design and engineering between low/high volume production, entry/premium vehicle systems and have examples or a portfolio of completed programs;</p>
<p>•Utilize DFSS methodologies as appropriate during the design, validation and launch of the programs;</p>
<p>• Strong familiarity with the development of specifications, DFMEAs, DVP&amp;R’s and other technical documents;</p>
<p>• Demonstrate an ability to manage difficult projects with tight timing constraints and provide examples of such scenarios throughout your career.</p>
<p>##################</p>
<p><br/>The Role<br/>As a Mechanical Engineer on Tesla’s Service Tooling Engineering team you will be responsible for specifying,<br/>designing, and validating all tools and equipment used to service Tesla electric vehicles world-wide. You will work<br/>with internal customers to identify and develop practical solutions to enable fast, seamless, and revolutionary<br/>service. The ideal candidate is someone who gets excited solving a variety of problems, competent building things,<br/>highly analytical, and sees the big picture needed to evolve a concept into a product. The ideal candidate is a hybrid<br/>of a mechanical, electrical, and software engineer and possesses a strong understanding of manufacturing concepts.<br/>Joining this team is a rare opportunity to become part of a world-class organization, supporting the latest EV<br/>technology. We are setting the standard that will continue to transform and revolutionize the automotive industry.</p>
<p>Responsibilities<br/>· Interact with teams of engineers and technicians working in other disciplines and on other subsystems to<br/>define the root cause of issue being addressed.<br/>· Convert tooling requirements and specifications from engineers and technicians into actionable procurement<br/>items while keeping in mind safety, cost minimization and timing urgency.<br/>· Design automotive technician tooling for large scale distribution.<br/>· Develop a concept and build a prototype solution.<br/>· Perform tooling validation with engineers and technicians.<br/>· Create tooling drawings and specifications in line with common industry practices.<br/>· Support process development.<br/>· Work closely with designated Tesla tooling distributors to define off-the-shelf tooling selection,<br/>implementation, and maintain tracking.<br/>· We are seeking a strong learner who can quickly ramp up and get a firm grasp of compliance regulations.</p>
<p>Requirements<br/>· Evidence of exceptional ability required<br/>· B.S in Mechanical Engineering, Mechatronics, or related engineering field from ABET accredited program<br/>· Experience in mechanical design and drafting preferred<br/>· Strong 3D CAD experience, CATIA a plus<br/>· GD&amp;T experience preferred<br/>· FEA experience preferred<br/>· Tooling and/or equipment design experience preferred<br/>· Hands on experience building mechanical and/or electrical systems<br/>· Automotive, Aerospace, or heavy equipment industry experience a plus<br/>· Familiarity with Regulatory compliance is a plus- (OSHA, CE, CCC, ASME related standards)<br/>· Machine shop and fabrication experience preferred<br/>· Strong communication, organization, and documentation skills<br/>· Proven ability to research information, solve challenging problems, and coordinate projects under tight timing<br/>constraints<br/>· Excellent fundamental engineering knowledge and have examples of applied engineering success through<br/>work, projects, or academic endeavors<br/>· Familiarity with working with various outside suppliers and managing deliverables<br/>· Ability to work autonomously to manage projects and maintain communication with interested parties<br/>· Ability to collaborate in a fast-paced team environment: pro-active team player who thinks ahead, plans, and<br/>suggests solutions<br/>· Mechanical aptitude, fabrication skills, machining, hand tools, and general electronics.</p>
<p>##################</p>
<p>Responsibilities:</p>
<p>3D CAD and 2D drawings<br/> for stators, rotors and assemblies<br/> Driving choices and<br/> development in:<br/> winding<br/> technology<br/> magnet<br/> technology<br/> steel<br/> stamping and lamination joining<br/> electrical<br/> insulation systems<br/> interconnections<br/> thermal<br/> sensing<br/> Identifying and<br/> qualifying suppliers of raw materials, components, and assemblies<br/> Design validation and<br/> durability testing profile development and data analysis<br/> Carry designs through<br/> to high-volume production; DFM, cost reductions, and second sourcing<br/> Mentoring junior<br/> engineers and interns</p>
<p>Requirements:</p>
<p>The<br/>ideal candidate will have:</p>
<p>· Evidence of exceptional<br/>ability</p>
<p>· Taken motor designs<br/>from clean sheet to volume production</p>
<p>· Experience with<br/>multiple coil winding and termination technologies</p>
<p>· Experience with<br/>multiple magnet technologies</p>
<p>· Worked with an<br/>international supply chain</p>
<p>· Automotive design and<br/>validation experience</p>
<p>· Asked “why” throughout<br/>his or her career</p>
<p>Expected<br/>skills: GD&amp;T, 3D CAD, 2D Drawings, DFMEA, PFMEA, structural and thermal FEA</p>
<p>Bonus<br/>skills: Catia, NVH analysis, electromagnetics design, specification writing,<br/>plastic injection molding, bolted joint design</p>
<p>###################</p>
<p>The Role</p>
<p>Geartrain Design Engineers in Tesla’s Drive Systems Engineering Team are responsible for design, release and launch of the geartrain components for Tesla vehicle product lines. You will be part of the team that creates and executes world-class drive units in terms of performance, cost, and manufacturability. Components of particular importance include gears, bearings, shafts, clutches, couplers, differentials and integration of these components.</p>
<p>Responsibilities</p>
<p>Geartrain system design utilizing parametric modeling to evaluate performance trade-offs<br/> Geartrain component design of rotating shafts, torque split devices, couplings, and clutches<br/> Finite element analysis<br/> 2D and 3D modeling utilizing CAD software<br/> Statistical analysis for component stack up requirements<br/> Component level testing for performance, durability, reliability, and variability<br/> Supplier coordination for high volume contract manufacturing<br/> Geartrain component quality troubleshooting resulting in supplier corrective action<br/> Production support for assembly of geartrain components including process and tool development to achieve equipment performance requirements<br/> Test specification design</p>
<p>Requirements</p>
<p>Experience in rotating machinery design<br/> Demonstrating technical aptitude from concept through release and launch for production or the equivalent in experience and evidence of exceptional ability.<br/> Proficiency in 3D modeling within a product development environment. CATIA preferred</p>
<p><br/> ################<br/> <br/> The Role</p>
<p>As a Mechanical Engineer on Tesla’s Service Tooling Engineering team you will be responsible for specifying, designing, and validating all tools and equipment used to service Tesla commercial energy products world-wide. You will work with internal customers to identify and develop practical solutions to enable fast, seamless, and revolutionary service. The ideal candidate is someone who gets excited solving a variety of problems, competent building things, highly analytical, and sees the big picture needed to evolve a concept into a product. The ideal candidate is a hybrid of a mechanical, and electrical engineer and possesses a strong understanding of manufacturing concepts. Joining this team is a rare opportunity to become part of a world-class organization, supporting the latest EV technology. We are setting the standard that will continue to transform and revolutionize the automotive industry.</p>
<p>Responsibilities</p>
<p>Own design, test and release of service tooling used in commercial energy application</p>
<p>Work with vendor to perform DFM/DFA studies to reduce cost and improve performance of service tooling for large volume</p>
<p>Interact with teams of engineers and technicians working in other disciplines and on other subsystems to define the root cause of issue being addressed</p>
<p>Convert tooling requirements and specifications from engineers and technicians into actionable procurement items while keeping in mind safety, cost minimization and timing urgency</p>
<p>Design technician tooling for large scale distribution across the globe</p>
<p>Develop a concept and build a prototype solution</p>
<p>Perform tooling test and validation with engineers and technicians</p>
<p>Create tooling drawings and specifications in line with common industry practices</p>
<p>Collaborate with industrial and process engineers to support process development and service tooling improvement</p>
<p>Support ergonomic, safety and region-specific code compliance of service tooling.</p>
<p>Work closely with designated Tesla tooling distributors to define off-the-shelf tooling selection, implementation, and maintain tracking</p>
<p>We are seeking an experienced engineer who can excel in fast paced environment with rapidly changing priority</p>
<p>Requirements</p>
<p>Evidence of exceptional ability required</p>
<p>B.S in Mechanical Engineering, Mechatronics, or related engineering field from ABET accredited program</p>
<p>2-4 years of Experience in mechanical design and drafting preferred</p>
<p>Strong 3D CAD experience, CATIA, PDM a plus</p>
<p>GD&amp;T experience preferred</p>
<p>Knowledge of Structural and thermal FEA experience a plus.</p>
<p>Tooling and/or equipment design experience preferred</p>
<p>Hands on experience building mechanical and/or electrical systems</p>
<p>Automotive, Aerospace, or heavy equipment industry experience a plus</p>
<p>Familiarity with Regulatory compliance is a plus- (OSHA, CE, CCC, ASME related standards)</p>
<p>Machine shop and fabrication experience preferred</p>
<p>Strong communication, organization, and documentation skills</p>
<p>Proven ability to research information, solve challenging problems, and coordinate projects under tight timing constraints</p>
<p>Excellent fundamental engineering knowledge and have examples of applied engineering success through work, projects, or academic endeavors</p>
<p>Familiarity with working with various outside suppliers and managing deliverables</p>
<p>Ability to work autonomously to manage projects and maintain communication with interested parties</p>
<p>Ability to collaborate in a fast-paced team environment: pro-active team player who thinks ahead, plans, and suggests solutions</p>
<p>Mechanical aptitude, fabrication skills, machining, hand tools, and general electronics</p>
<p>Tesla participates in the E-Verify Program</p>
<p>###################</p>
<p>The Product Design Integration team at Tesla is involved from the earliest stages to establish the product architecture and layout with consideration for all product level attributes (styling, cost, mass, manufacturability, performance, service, NVH, reliability, etc.)</p>
<p>The team works with design engineering, styling and manufacturing teams to develop compatible designs while ensuring product level attributes are optimized.</p>
<p>As the design matures, the team builds physical representations of the product in order to validate key decisions and further refine the design the prior to tooling and manufacture.</p>
<p>Responsibilities</p>
<p>Mechanical design and packaging of components to meet product and system level requirements while optimizing for product attributes.<br/> Lead product integration reviews, mediation in trade-off situations in order to ensure design solutions are in sync with product attribute targets.<br/> Support and execution of virtual builds, development buck, physical prototypes and pre-series production.<br/> Top-level product CAD and BOM management, use best practices for ensuring CAD completeness and compatibility, support release process.<br/> Pilot new CAD software and PLM tools.</p>
<p>Requirements</p>
<p>Solid understanding of engineering development process.<br/> Outstanding design, packaging and 3D modeling skills. CATIA is an advantage.<br/> Proven problem solving and strong communication skills.<br/> Flexibility and adaptability in a fast-paced and dynamic work environment.<br/> Passion for electric vehicles and energy efficiency.<br/> Experience with product lifecycle management tools is an advantage.<br/> Working knowledge of, or hands-on experience with, vehicle systems and package is an advantage (eg. Formula SAE / solar car competitions).<br/> Evidence of exceptional ability.<br/> <br/> ##############<br/> <br/> THE MISSION</p>
<p>Tesla is accelerating the world’s transition to sustainable energy. The Chassis Design Engineering team plays a critical part in that mission, helping to deliver a safe, efficient, comfortable, and enjoyable driving experience, while also focusing on the sustainability and value of Tesla’s products.</p>
<p>THE ROLE</p>
<p>This position is to support the launch of our vehicles for Gigafactory Texas. The engineer will support all Chassis subsystems and will work to ensure a fast and high quality start of production. The engineer will also lead efforts to bring on local suppliers for Chassis components for product improvement, savings, logistics improvements, and capacity expansion. Additionally, the engineer will engage in product development for current and future vehicles (specifically Steer-by-Wire and Brake/motor Integration), and provide a solid foundation for future vehicle engineering operations in Germany.</p>
<p>The Chassis Design Engineering team is responsible for tires, wheels, hubs, halfshafts, suspension, subframes, brakes, pedals/controls, and air suspension systems on all of Tesla’s passenger car and heavy vehicle programs. A Mechanical Design Engineer on the team is responsible for bringing those systems from concept to production and beyond with support from other engineering teams at Tesla.</p>
<p>The engineer’s responsibilities include design, analysis, sourcing, prototyping, testing, vehicle assembly validation, quality control, engineering documentation, and more. The engineer must possess and should be able to readily apply mechanical engineering fundamentals to creatively solve problems and is expected to learn quickly while managing their projects independently with minimal oversight. During the design process an emphasis is placed on We are looking for someone who will going beyond the status quo to make the best product in terms of cost, mass, and performance. The engineer must should be able to communicate clearly and effectively to both technical and non-technical colleagues. Hands-on experience is a major plus for engineering development work and addressing production issues. Some travel to suppliers may be required, including international travel.</p>
<p>The engineer must will work with Tesla teams and component suppliers in order to:</p>
<p>- Develop and optimize designs in 3D CAD software with associated CAE tools</p>
<p>- Validate manufacturing, assembly, and service feasibility</p>
<p>- Complete and release component designs and documentation, including 2D drawings</p>
<p>- Validate components per defined engineering requirements</p>
<p>- Resolve issues and concerns with cross-functional teams including engineering, supply chain, production, and service</p>
<p>- Participate in the sourcing process and manage engineering relationships with suppliers</p>
<p>- Deliver to defined schedules</p>
<p>Requirements</p>
<p>- Bachelor of Science in Mechanical Engineering or equivalent</p>
<p>- Proficiency in a 3D CAD software (CATIA is a plus)</p>
<p>- Basic knowledge of GD&amp;T (proficiency is a plus)</p>
<p>- Experience with component design, analysis, and validation (aluminum and steel part design and manufacturing processes is a plus)</p>
<p>- Great technical and interpersonal communication</p>
<p>- Evidence of being a self-starter and bringing projects to completion great finisher</p>
<p>- Prior experience in a relevant engineering field is valued, but the team has openings from entry level to expert</p>
<p>THE TEAM</p>
<p>The Chassis team is comprised of engineers from many backgrounds and experience levels. You’ll work alongside experts with many years of experience, high aptitude recent graduates, and people from every stage in between. Collaboration, learning, and growth are core to the team’s success. We look for anyone with demonstrated exceptional ability to solve problems in both individual and team settings. <br/> <br/>###########</p>
<p>Mechanical<br/>Engineer, Production Control</p>
<p>Description</p>
<p>This<br/>responsibility includes coordinating daily workload and assignments and<br/>balancing headcount resources as needed to support the PC Equipment Engineering<br/>&amp; Maintenance organization. This<br/>role will also evaluate employees, work with employees on training/career<br/>plans, and recruit additional talent for the department.</p>
<p>The<br/>Equipment Engineer will perform these duties in addition to being the subject<br/>matter expert of the team, performing the same day-to-day work as members of<br/>their team, while also acting as the single point of contact for their team for<br/>all major communication.</p>
<p>The Role</p>
<p>The Equipment Engineer is responsible for designing,<br/>delivering, and managing equipment to support production of all Tesla products.<br/>We are looking for a talented and highly motivated individual to join the PC<br/>Equipment Engineering Team. This team is responsible for supporting all<br/>physical engineering needs of the Production Control Team, including designing<br/>equipment for part transport and staging, providing solutions to safety and<br/>ergonomic issue, as well as leading warehouse and process improvement and new<br/>product launch projects. The scope of equipment includes, but is not<br/>limited to: conveyors, lifts, ASRSs, robots, and mobile equipment including<br/>AGVs. Successful members of the team<br/>will be highly proactive and self-sufficient in pursuing improvement projects,<br/>will be able to multitask and refocus efforts immediately to meet constantly<br/>shifting demands in a fast-paced environment, and have exceptional leadership<br/>ability to drive cross functional collaboration projects to completion on or<br/>ahead of schedule.</p>
<p>This position reports to the Production Control – Equipment<br/>Engineering Manager.</p>
<p>Responsibilities</p>
<p>• Design equipment meeting<br/>interdepartmental needs and specifications.</p>
<p>• Creation of equipment<br/>drawings and specs, quotes, and purchase requisitions.</p>
<p>• Utilize DFMA principles in<br/>production creation and improvement projects.</p>
<p>• Develop business cases for<br/>improvement projects and equipment acquisitions.</p>
<p>• Order equipment to meet<br/>staffing, spares, and maintenance needs.</p>
<p>• Interface with suppliers<br/>for manufacturing feasibility, validation, and other engineering activities, as<br/>necessary.</p>
<p>• Deliver specifications,<br/>designs, analyses, and prototypes on time and within budget.</p>
<p>• Ensure designs are<br/>compatible with packaging, material-handling, and production processes and are<br/>appropriately serviceable.</p>
<p>• Support equipment -based<br/>process introductions and adjustments.</p>
<p>• Day to day coverage of<br/>production line equipment: respond to alarms, breakdowns, and Production<br/>requests quickly and efficiently to minimize downtime.</p>
<p>• Diagnoses equipment failures,<br/>finds root cause and communicates actions taken to the rest of the team.</p>
<p>• Become Expert Level Trainer on<br/>all machines in assigned area and be responsible for the level of knowledge of<br/>Shift technicians.</p>
<p>• Takes initiative to create,<br/>implement and improve PM documents and schedules.</p>
<p>• Perform major equipment repairs<br/>and rebuilds, (some weekends and holidays required).</p>
<p>• Participate in spare part<br/>analysis and inventory development, cost reduction and improvement.</p>
<p>• Work with Spares Coordinator<br/>and Maintenance Engineering to RMA faulty components and communicate needs to<br/>the vendor.</p>
<p>• Work with Process and Equipment<br/>engineering and other cross functional groups to resolve maintenance issues,<br/>improve equipment reliability, review procedures, and minimize equipment<br/>downtime.</p>
<p>• Investigate and implement<br/>countermeasures to prevent repetitive breakdowns.</p>
<p>• Active leader of a TPM team<br/>while taking on improvement projects to assist in improving the factory.</p>
<p>• Design and Implement Equipment<br/>Reliability Improvement Projects</p>
<p>Requirements</p>
<p>• Bachelor of Science or<br/>higher in mechanical engineering or similar field of study.</p>
<p>• Work efficiently and<br/>productively both independently and in team settings</p>
<p>• Communicate clearly using<br/>excellent written and verbal skills.</p>
<p>• Demonstrate talent for<br/>conceiving efficient design solutions to complex engineering challenges.</p>
<p>• Proficiency in CATIA V5,<br/>or similar 3D CAD software (Solidworks, ProE, Unigraphics, etc).</p>
<p>• Basic understanding of<br/>GD&amp;T as well as weld symbols.</p>
<p>• Experience with rapid<br/>prototyping and small to medium volume production.</p>
<p>• Knowledge of relevant<br/>manufacturing processes and a variety of engineering materials, fastening<br/>methods,</p>
<p>• Familiarity with designing<br/>any or all of the following: mobile &amp; stationary material handling<br/>equipment, towed dollies, racks, stands, lift-assists, and end-of-arm tools.</p>
<p>• 2+ years of experience<br/>performing similar work (Automotive industry experience preferred)</p>
<p>• Familiarity with industrial robots and controls<br/>systems.</p>
<p>############</p>
<p><br/>Role</p>
<p>Majority of work will center around developing designs for<br/>the Vehicle Production plant and surrounding facilities. This position will<br/>mentor junior engineers/designers and may require managing outside consultants in<br/>order to meet project design schedules. This candidate must be able to<br/>prioritize and manage workload on multiple projects to maintain high quality<br/>and productivity.</p>
<p>Responsibilities</p>
<p>Responsible<br/> for developing mechanical design packages for permitting and construction<br/> Mentor<br/> and supervise engineers/designers to develop equipment datasheets, construction<br/> documents and specifications<br/> Be<br/> a technical resource for engineers and designers<br/> Review<br/> and/or develop designs that are cost effective, Code compliant while meeting Tesla<br/> quality and schedule requirements<br/> Able<br/> to develop high level cost estimates with material take off information for all<br/> sizes of projects in short time frames<br/> Communicate<br/> effectively and timely to stakeholders and engineering team<br/> Must<br/> be able to prioritize and manage heavy workload to ensure high quality and<br/> productivity</p>
<p>Requirements</p>
<p>Minimum of 10 years HVAC and Plumbing/FP<br/> design experience<br/> Familiar with International Energy<br/> Conservation, Mechanical, Plumbing and Fire Protection Codes, NFPA standards,<br/> SMACNA duct construction standards, ACGIH Ventilation Practices, and ASHRAE 62<br/> and 90.1<br/> Professional<br/> Engineer registration for NV and/or California or ability to be registered<br/> within a year<br/> Proficient in the use of following applications<br/> Trane or Carrier HAP, Revit, AutoCAD, Microsoft Office Suite. Experience in Caesar<br/> 2 and Pipe-flo are a plus.<br/> Familiar with following types of calculations: duct<br/> static pressure drop, pump head, NPSHa, fuel gas pipe sizing, steam and<br/> condensate pipe sizing.</p>
<p>Plumbing and Fire Protection design experience<br/> Designs<br/> using the following equipment types: open and/or closed circuit cooling<br/> towers, water and air cooled chillers, gas fired and electric water<br/> boilers, large air handling units with heating/cooling coils and/or gas<br/> fired heaters, packaged air to air heat pumps, water to water heat pumps,<br/> dust collectors, humidifiers, dehumidifiers, fans, and pumps.<br/> Knowledge or<br/> experience with the following is a plus: Abatement systems (thermal oxidizers,<br/> dry and wet scrubbers), Heat Exchangers (shell/tube, plate/frame, brazed<br/> fin), Control Valves and Instrumentation, Heat Recovery Systems.<br/> Able to<br/> specify ductwork material and size for various ducted exhaust systems and<br/> pressure classes<br/> Able to<br/> specify pipe sizes to meet Energy Code and to specify material and fitting<br/> types for various hydronic and steam systems<br/> Knowledge and experience with writing sequences of<br/> operation for HVAC systems</p>
<p>Construction<br/> Administration experience including field reports, punch lists, answering RFIs, and reviewing shop<br/> drawings<br/> Direct experience in the<br/> preparation of mechanical contract drawings and engineering specifications</p>
<p><br/> <br/> #################<br/> <br/> Role</p>
<p>Majority of work will center around developing designs for the Vehicle Production plant and surrounding facilities. This position will mentor junior engineers/designers and may require managing outside consultants in order to meet project design schedules. This candidate must be able to prioritize and manage workload on multiple projects to maintain high quality and productivity.</p>
<p>Responsibilities</p>
<p>Responsible for developing mechanical design packages for permitting and construction<br/>Mentor and supervise engineers/designers to develop equipment datasheets, construction documents and specifications<br/>Be a technical resource for engineers and designers<br/>Review and/or develop designs that are cost effective, Code compliant while meeting Tesla quality and schedule requirements<br/>Able to develop high level cost estimates with material take off information for all sizes of projects in short time frames<br/>Communicate effectively and timely to stakeholders and engineering team<br/>Must be able to prioritize and manage heavy workload to ensure high quality and productivity</p>
<p>Requirements</p>
<p>Minimum of 2 years HVAC and Plumbing/FP design experience<br/>Familiar with International Energy Conservation, Mechanical, Plumbing and Fire Protection Codes, NFPA standards, SMACNA duct construction standards, ACGIH Ventilation Practices, and ASHRAE 62 and 90.1<br/>Professional Engineer registration for NV and/or California or ability to be registered within a year<br/>Proficient in the use of following applications Trane or Carrier HAP, Revit, AutoCAD, Microsoft Office Suite. Experience in Caesar 2 and Pipe-flo are a plus.<br/>Familiar with following types of calculations: duct static pressure drop, pump head, NPSHa, fuel gas pipe sizing, steam and condensate pipe sizing.<br/>Plumbing and Fire Protection design experience<br/>Designs using the following equipment types: open and/or closed circuit cooling towers, water and air cooled chillers, gas fired and electric water boilers, large air handling units with heating/cooling coils and/or gas fired heaters, packaged air to air heat pumps, water to water heat pumps, dust collectors, humidifiers, dehumidifiers, fans, and pumps.<br/>Knowledge or experience with the following is a plus: Abatement systems (thermal oxidizers, dry and wet scrubbers), Heat Exchangers (shell/tube, plate/frame, brazed fin), Control Valves and Instrumentation, Heat Recovery Systems.<br/>Able to specify ductwork material and size for various ducted exhaust systems and pressure classes<br/>Able to specify pipe sizes to meet Energy Code and to specify material and fitting types for various hydronic and steam systems<br/>Knowledge and experience with writing sequences of operation for HVAC systems.<br/>Construction Administration experience including field reports, punch lists, answering RFIs, and reviewing shop drawings<br/>Direct experience in the preparation of mechanical contract drawings and engineering specifications</p>
<p>##############</p>
<p>Role</p>
<p>Tesla is looking for an exceptionally skilled and motivated Staff Mechanical Engineer to design the next generation of batteries, solar hardware, EV chargers and energy management products for the home. You will specify, design and test the enclosures, busbars, harnesses, thermal components and other hardware that make up our products.</p>
<p>You will be part of a small mechanical design team that is working on multiple products in parallel. Each of those product programs requires working as part of a multi-disciplinary team from concept to mass production.</p>
<p>Responsibilities</p>
<p>Modeling and design of mechanical systems and components including plastic, metal and sheet metal parts, conductors, insulators, wire-harnesses, fasteners, and other components.<br/>Mechanical design analysis including thermal, structural, design for assembly, and design for test.<br/>Solve electronics packaging issues including: isolation, EMC, RF transmission, thermal management, interconnection, shock and vibration management, etc.<br/>Utilize engineering principles to create test plans, identify root causes for field or test failures and implement fixes.<br/>Create drawing packages and instructions for proper manufacturing and assembly of designs.<br/>Assist in engineering prototype builds and component fabrication.<br/>Collaborate with other mechanical, systems, electrical, digital control, manufacturing test, industrial design, and test engineers to meet design and program needs.</p>
<p>Requirements</p>
<p>Aligned with Tesla’s mission to accelerate the transition to sustainability.<br/>Ideally, 4-5 years’ experience designing high volume electronics products or appliances. Equivalent experience in high volume automotive hardware or lower volume power products (inverters, transformers, etc) is also acceptable.<br/>Deep understanding of the material science of components used in mechanical design (metals, insulators, plastics, connectors, gaskets, conductors etc).<br/>4-5 years’ experience using 3D mechanical design and analysis tools (CATIA v6, hyperworks experience preferred).<br/>Excellent communication skills.<br/>Ability to work in a fast-paced and challenging environment.</p>
<p>Preferred</p>
<p>Experience using CATIA v6 preferred but not required.<br/>Experience with DFMEA, DVP&amp;Rs, failure analysis, statistical control methods<br/>Knowledge of GD&amp;T, finite element analysis and design for reliability concepts.<br/>Working knowledge of Matlab, Labview, and Python.<br/>Experience with designing products that receive international safety certifications.<br/>Basic understanding of electrical design fundamentals.</p><h3>Terminology</h3>
<p><span>sustainable energy</span></p>
<p><span>full life cycle development of automated test equipment</span></p>
<p><span>manufacturing test automation</span></p>
<p><span>ultra-reliable testers</span></p>
<p><span>unit defect detection capabilities</span></p>
<p><span>initial equipment conceptual development</span></p>
<p><span>carefully balance product specifications, process requirements, layout complexity, cost, and lead-time limits</span></p>
<p><span>promptly release testers</span></p>
<p><span>Modeling and testing for stress, thermal, fluid, and mechanical aspects of machines/components, that perform effectively while exposed to daily abuse of a manufacturing environment.</span></p>
<p><span>documentation packages</span></p>
<p><span>material science of components used in mechanical design (metals, insulators, plastics, connectors, gaskets, etc).</span></p>
<p><span>FEA simulation</span></p>
<p>GD&amp;T (Geometric Dimensioning and Tolerancing) <a href="https://en.wikipedia.org/wiki/Geometric_dimensioning_and_tolerancing">https://en.wikipedia.org/wiki/Geometric_dimensioning_and_tolerancing</a> </p>
<p><span>electromagnetic</span></p>
<p><span>mechanical power transmission components</span></p>
<p><span>prototypes in bench and vehicle configurations</span></p>
<p>CATIA: <a href="https://www.3ds.com/products-services/catia/">https://www.3ds.com/products-services/catia/</a> </p>
<p><span></span></p><h2>WCMS</h2>
<p><a href="https://github.com/mdecourse/wcms2018/issues/9">https://github.com/mdecourse/wcms2018/issues/9</a> </p><h1>Computer</h1>
<p>請利用 @gm 帳號至下列連結登記自學帳號, 從中學習與計算機程式課程相關內容.</p>
<p><a href="https://oli.cmu.edu/product-category/computer-science-programming-indep/">https://oli.cmu.edu/product-category/computer-science-programming-indep/</a> </p>
<p>以下畫面以 50703199 At mde dot nfu dot edu dot tw 註冊取得.</p>
<p><img alt="" class="add_border" height="778" src="/images/oli_cmu_computer_courses.png" width="800"/></p>
<p>個人電腦軟硬體簡介</p>
<p>軟體</p>
<p>電腦操作系統</p>
<p style="padding-left: 30px;">Windows</p>
<p style="padding-left: 30px;">Linux</p>
<p style="padding-left: 30px;">Mac OS</p>
<p>分散式版次管理系統</p>
<p style="padding-left: 30px;">近端</p>
<p style="padding-left: 30px;">遠端</p>
<p>網際內容管理 (Github 與 Heroku)</p>
<p style="padding-left: 30px;">CMSiMDE</p>
<p style="padding-left: 60px;">Pelican</p>
<p style="padding-left: 60px;">Reveal.js</p>
<p style="padding-left: 30px;">將包含 html 與 Javascript 的靜態網頁資料以 Github Pages, Gitlab Pages 或 Heroku 伺服</p>
<p style="padding-left: 30px;">Python 網際程式透過 Flask 則可以部署到 <a href="https://www.heroku.com/">Heroku</a> 雲端主機</p>
<h4>Reference</h4>
<p style="padding-left: 30px;"><a href="/downloads/computer_programming_as_an_art_Knuth.pdf">Computer Programming as an Art Knuth.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/KnuthTuringTranscript_2007.pdf">Interview_transcript_2007_Knuth.pdf</a></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/vUJ01nRE7r0" width="560"></iframe><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/6msRtLtfzeA" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/3t42E44d5aY" width="560"></iframe></p><h2>PC Hardware</h2>
<p><span>請利用 @gm 帳號至下列連結登記自學帳號, 從中學習與計算機程式課程相關內容.</span></p>
<p><a href="https://oli.cmu.edu/courses/pc-hardware-open-free/">https://oli.cmu.edu/courses/pc-hardware-open-free/</a> </p>
<h2>PC Software</h2>
<p><span>請利用 @gm 帳號至下列連結登記自學帳號, 從中學習與計算機程式課程相關內容.</span></p>
<p><a href="https://oli.cmu.edu/courses/pc-software-open-free/">https://oli.cmu.edu/courses/pc-software-open-free/</a> </p>
<h3>C++</h3>
<p>計算機程式主要說明 Python 解譯程式的用法, 但若要編譯 <a href="https://github.com/solvespace/solvespace">Solvespace</a>, <a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a>, <a href="https://github.com/Range-Software/range3">Range3</a>, <a href="https://bellard.org/tcc/">Tiny C</a> 或要編寫 CoppeliaSim <a href="https://github.com/mdecourse/vrep-example">C++ Remote API 應用程式</a>, 就必須使用 C++ 鯿譯器.</p>
<p>學習 C++ 可以使用線上編譯器:</p>
<p style="padding-left: 30px;"><a href="http://cpp.sh/">http://cpp.sh/</a></p>
<p style="padding-left: 30px;"><a href="https://ideone.com/">https://ideone.com/</a></p>
<p style="padding-left: 30px;"><a href="https://rextester.com/">https://rextester.com/</a></p>
<p style="padding-left: 30px;"><a href="https://www.jdoodle.com/online-compiler-c++/">https://www.jdoodle.com/online-compiler-c++/</a></p>
<p style="padding-left: 30px;"><a href="https://www.onlinegdb.com/online_c++_compiler">https://www.onlinegdb.com/online_c++_compiler</a></p>
<p style="padding-left: 30px;"><a href="https://www.tutorialspoint.com/compile_cpp_online.php">https://www.tutorialspoint.com/compile_cpp_online.php</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/cpp-programming/online-compiler/">https://www.programiz.com/cpp-programming/online-compiler/</a></p>
<p>Ebooks: <a href="https://link.springer.com/book/10.1007/978-1-4842-3366-5">Beginning C++17.pdf</a></p>
<p>在 Windows 10 64 位元下的可攜 C++ 編譯器: <a href="https://www.msys2.org/">https://www.msys2.org/</a></p>
<p>登入 @gm 下載可攜 <a href="https://drive.google.com/file/d/16qdwyO3E6XGuQajaoCyw89eiIPTk_rqB/view?usp=sharing">Msys2_project_portable.7z</a> (3.6GB)</p>
<h3>API</h3>
<p>API 為 Application Programming Interface, 意即應用程式介面, 用於延伸特定程式套件的功能, 以 Google 所提供的雲端應用程式為例, 常見的 API 有 Google GMail API, Google Blogger API, Google Drive API 等, 而 Github 則提供 Github API.</p>
<p>當使用者登入 GMail 帳號後, 連接至 <a href="https://console.developers.google.com">https://console.developers.google.com</a> 即可進入 Google 所有程式庫 API 的設定.</p>
<h4>Google GMail API</h4>
<p>Gmail Json to Token data</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import pickle
from google_auth_oauthlib.flow import InstalledAppFlow
from httplib2 import Http
from googleapiclient.discovery import build

creds = None
SCOPES = 'https://www.googleapis.com/auth/gmail.send' # Allows sending only, not reading

flow = InstalledAppFlow.from_client_secrets_file(
    './../scrum1_gmail.json', SCOPES)
creds = flow.run_local_server(port=0)
# Save the credentials for the naext run
with open('./../scrum1_gmail.pickle', 'wb') as token:
    pickle.dump(creds, token)

service = build('gmail', 'v1', credentials=creds)
print(service)</pre>
<p>send mail</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from email.mime.text import MIMEText
from base64 import urlsafe_b64encode
from httplib2 import Http
from googleapiclient.discovery import build
import pickle

SENDER = "your_sender@domain_name"
RECIPIENT = "your_recipient@domain_name"
SUBJECT = "gmail api 寄信測試"
CONTENT = ''' 這是文章內容, http://the.web.site'''

creds = None
with open('./../scrum1_gmail.pickle', 'rb') as token:
    creds = pickle.load(token)
service = build('gmail', 'v1', credentials=creds)

# https://developers.google.com/gmail/api/guides/sending
def create_message(sender, to, subject, message_text):
  """Create a message for an email.

  Args:
    sender: Email address of the sender.
    to: Email address of the receiver.
    subject: The subject of the email message.
    message_text: The text of the email message.

  Returns:
    An object containing a base64url encoded email object.
  """
  message = MIMEText(message_text)
  message['to'] = to
  message['from'] = sender
  message['subject'] = subject
  encoded_message = urlsafe_b64encode(message.as_bytes())
  return {'raw': encoded_message.decode()}


# https://developers.google.com/gmail/api/guides/sending
def send_message(service, user_id, message):
  """Send an email message.

  Args:
    service: Authorized Gmail API service instance.
    user_id: User's email address. The special value "me"
    can be used to indicate the authenticated user.
    message: Message to be sent.

  Returns:
    Sent Message.
  """
  try:
    message = (service.users().messages().send(userId=user_id, body=message)
               .execute())
    print('Message Id: %s' % message['id'])
    return message
  #except errors.HttpError, error:
  except:
    print('An error occurred: %s' % error)


raw_msg = create_message(SENDER, RECIPIENT, SUBJECT, CONTENT)
send_message(service, "me", raw_msg)</pre>
<h4>Google Blogger API</h4>
<p>Blogger Json to Token data</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># https://developers.google.com/blogger/docs/3.0/using
# pip install google_auth_oauthlib
# under Mac command + b to execute
'''
No module named 'googleapiclient'
    pip install google-api-python-client 
No module named 'google_auth_oauthlib'
    pip install google_auth_oauthlib
Add to Blogger need oauth2client
    pip install oauth2client
'''
import pickle
import os
from googleapiclient.discovery import build
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request


SCOPES = ['https://www.googleapis.com/auth/blogger', ]

# we check if the file tBo store the credentials exists
if not os.path.exists('mdecourse_blogger_token.dat'):

    flow = InstalledAppFlow.from_client_secrets_file('mdecourse_blogger_desktop.json', SCOPES)
    credentials = flow.run_local_server()

    with open('mdecourse_blogger_token.dat', 'wb') as credentials_dat:
        pickle.dump(credentials, credentials_dat)
else:
    with open('mdecourse_blogger_token.dat', 'rb') as credentials_dat:
        credentials = pickle.load(credentials_dat)
service = build('blogger', 'v3', credentials=credentials)
g.es(service)</pre>
<p>add to mblogger</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@language python
from markdown import markdown
from oauth2client import client
#from googleapiclient import sample_tools
import os
# 配合使用 credential token
import pickle
from googleapiclient.discovery import build
#from google_auth_oauthlib.flow import InstalledAppFlow
#from google.auth.transport.requests import Request

os.environ['TZ'] = 'Asia/Taipei'
with open('./../../yen_gm_blogger_token.dat', 'rb') as credentials_dat:
    credentials = pickle.load(credentials_dat)
service = build('blogger', 'v3', credentials=credentials)

def get_cat_tag_content(data):
    # 請注意, 因為 data 來自 .md 的檔案 內容, 第1行為 ---
    # 用跳行符號分割
    data_list = data.split("\n")
    #第 2 行為 title
    title= data_list[1]
    #第 4 行為 category
    category = data_list[3]
    #第 5 行為 tags
    tags = data_list[4]
    # 有多項資料的 content 型別為數列
    # 再將第 9 行之後的資料數列串回成以跳行隔開的資料
    content = "\n".join(data_list[8:])
    # 先將截斷摘要與內文的 pelican md 檔按符號, 換成 Blogger 的 &lt;!--more--&gt;
    content = content.replace('&lt;!-- PELICAN_END_SUMMARY --&gt;', '&lt;!--more--&gt;')
    # 接著若內容有 ~~~python 與 ~~~ 則換成 Wordpress 格式
    #content = content.replace('~~~python', '[code lang="python"]')
    #content = content.replace('~~~', '[/code]')
    return title, category, tags, content

# 從目前所在節點的 body pan 中取出類別, tags 以及文章內容
# p.h 為 @clean filename.md
# 因為要使用 @clean 節點掛上為後的 blogger post_id, 因此改為讀 .md 檔案
md_filename = p.h.split(" ")[1]
with open(md_filename, 'r', encoding="utf-8") as content_file:
    md_content = content_file.read()
# title_str, category_str, tags_str, content = get_cat_tag_content(p.b)
title_str, category_str, tags_str, content = get_cat_tag_content(md_content)
category = category_str.split(":")[1]
tags = tags_str.split(":")[1].split(",")
tags.append(category)
# title 是一個單獨的字串
title = title_str.split(":")[1]
# 將 markdown 格式 content 轉為 html
content = markdown(content)
# 以下處理 content 的 &lt;h2&gt; 標題
content = content.replace("&lt;h2&gt;", "&lt;h2&gt;&lt;font size='4'&gt;")
content = content.replace("&lt;/h2&gt;", "&lt;/font&gt;&lt;/h2&gt;")
# g.es(content)

try:
    '''
    users = service.users()
    # 取得使用者 profile 資料
    user = users.get(userId='self').execute()
    print('網誌名稱: %s' % user['displayName'])
    '''
    blogs = service.blogs()
    # 取得使用者所建立網誌名稱
    blogs = blogs.listByUser(userId='self').execute()
    # post_id is now blogs["items"][0]["id"]
    #blog_id = blogs["items"][0]["id"]
    blog_id = "7949497010793271992"
    #for blog in blogs['items']:
        #print(blog['name'], blog['url'])
    posts = service.posts()
    # 新增網誌 post 時, 需要 post_id
    body = {
    "kind": "blogger#post",
    "id": blog_id,
    "title": title,
    # 利用 markdown 函式, 將 .md 的內文轉為 html, 作為 Blogger 的文章內容
    "content": content,
    "labels": tags
    }
    insert = posts.insert(blogId=blog_id, body=body)
    posts_doc = insert.execute()
    post_id = posts_doc["id"]
    #print(posts_doc)
    # 改用 credential token 後不會產生 blogger.dat
    #os.remove("blogger.dat")
    # 利用最後的 child 節點來儲存 post_id
    to_save_post_id = p.insertAsLastChild()   
    # 改為內文為空的節點, id 直接標在 head 標題 
    to_save_post_id.b = ""
    to_save_post_id.h = post_id
    # 因為新增節點, commander 必須 redraw
    c.redraw()
    g.es("post_id 為", post_id)
    g.es("已經將資料送往 MBlogger!")
except(client.AccessTokenRefreshError):
    g.es("error")

</pre>
<p>edit to mblogger</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@language python
from markdown import markdown
from oauth2client import client
#from googleapiclient import sample_tools
import os
# 配合使用 credential token
import pickle
from googleapiclient.discovery import build
#from google_auth_oauthlib.flow import InstalledAppFlow
#from google.auth.transport.requests import Request

os.environ['TZ'] = 'Asia/Taipei'
with open('./../../yen_gm_blogger_token.dat', 'rb') as credentials_dat:
    credentials = pickle.load(credentials_dat)
service = build('blogger', 'v3', credentials=credentials)

def get_cat_tag_content(data):
    # 請注意, 因為 data 來自 .md 的檔案 內容, 第1行為 ---
    # 用跳行符號分割
    data_list = data.split("\n")
    #第 2 行為 title
    title= data_list[1]
    #第 4 行為 category
    category = data_list[3]
    #第 5 行為 tags
    tags = data_list[4]
    # 有多項資料的 content 型別為數列
    # 再將第 9 行之後的資料數列串回成以跳行隔開的資料
    content = "\n".join(data_list[8:])
    # 先將截斷摘要與內文的 pelican md 檔按符號, 換成 Blogger 的 &lt;!--more--&gt;
    content = content.replace('&lt;!-- PELICAN_END_SUMMARY --&gt;', '&lt;!--more--&gt;')
    # 接著若內容有 ~~~python 與 ~~~ 則換成 Wordpress 格式
    #content = content.replace('~~~python', '[code lang="python"]')
    #content = content.replace('~~~', '[/code]')
    return title, category, tags, content

# 從目前所在節點的 body pan 中取出類別, tags 以及文章內容
# p.h 為 @clean filename.md
# 因為要使用 @clean 節點掛上為後的 blogger post_id, 因此改為讀 .md 檔案
md_filename = p.h.split(" ")[1]
with open(md_filename, 'r', encoding="utf-8") as content_file:
    md_content = content_file.read()
# title_str, category_str, tags_str, content = get_cat_tag_content(p.b)
title_str, category_str, tags_str, content = get_cat_tag_content(md_content)
category = category_str.split(":")[1]
tags = tags_str.split(":")[1].split(",")
tags.append(category)
# title 是一個單獨的字串
title = title_str.split(":")[1]
# 將 markdown 格式 content 轉為 html
content = markdown(content)
# 以下處理 content 的 &lt;h2&gt; 標題
content = content.replace("&lt;h2&gt;", "&lt;h2&gt;&lt;font size='4'&gt;")
content = content.replace("&lt;/h2&gt;", "&lt;/font&gt;&lt;/h2&gt;")
# g.es(content)

try:
    blogs = service.blogs()
    # 取得使用者所建立網誌名稱
    blogs = blogs.listByUser(userId='self').execute()
    #blog_id = blogs["items"][0]["id"]
    blog_id = "7949497010793271992"
    # 設法取得原 post 的 id
    postid_outline = p.getLastChild()
    # 直接從標題取得 post 的 id 號碼
    post_id = postid_outline.h
    posts = service.posts()
    # 更新網誌文章時的 body
    body = {
    "kind": "blogger#post",
    "title": title,
    "content": content
    }
    # need to save postId to outline head
    update = posts.update(blogId=blog_id, postId=post_id, body=body, publish=True)
    update_doc = update.execute()
    # 使用 credential token 後, 無需刪除 blogger.dat
    #os.remove("blogger.dat")
    g.es("post_id 為", post_id)
    g.es("已經將更新資料送往 M Blogger!")
except(client.AccessTokenRefreshError):
    g.es("error")
</pre>
<h4>Google Drive API</h4>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># for uploadToGDrive3
# pip install google-api-python-client
# https://github.com/googleapis/google-api-python-client
import pickle
from googleapiclient.discovery import build
from apiclient.http import MediaFileUpload

# for filegdupload
import pickle
import codecs
import json

# for use under wcm.kmol.info flask server

def uploadToGdrive3(fileName, mimeType):
    # get upload folder id
    # GDrive 上 uploaded 目錄的 fileID
    with open("./../gdrive_uploaded_id.txt", 'r') as content_file:
        folderID = content_file.read()

    creds = None
    with open('./../gdrive_write_token.pickle', 'rb') as token:
        creds = pickle.load(token)
    # 讀進既有的 token, 建立 service
    driveService = build('drive', 'v3', credentials=creds)

    metadata = {
        'name': fileName,
        'mimeType': mimeType,
        # 注意: 必須提供數列格式資料
        'parents': [folderID]
        }

    filePath = _curdir + "/downloads/" + fileName
    media = MediaFileUpload(filePath,
                                            mimetype=mimeType,
                                            chunksize=1024*1024,
                                            resumable=True
                                            )

    gdFile = driveService.files().create(
        body=metadata,
        media_body=media,
        fields='id'
    ).execute()
    fileID = gdFile.get("id")

    return fileID
</pre>
<p><br/><br/></p>
<h2>Logics and Proofs</h2>
<p><span>請利用 @gm 帳號至下列連結登記自學帳號, 從中學習與計算機程式課程相關內容.</span></p>
<p><a href="https://oli.cmu.edu/courses/logic-proofs-copy/">https://oli.cmu.edu/courses/logic-proofs-copy/</a></p>
<h2>Media Programming</h2>
<p><span>請利用 @gm 帳號至下列連結登記自學帳號, 從中學習與計算機程式課程相關內容.</span></p>
<p><a href="https://oli.cmu.edu/courses/media-programming-copy/">https://oli.cmu.edu/courses/media-programming-copy/</a> </p>
<h1>Network</h1>
<p>Facebook: <a href="/downloads/facebook_go_ipv6_slides.pdf">the road to IPv6.pdf</a></p>
<p>電腦網路系統與設定簡介</p>
<p><img alt="" class="add_border" height="558" src="/images/routing_network_diagram.png" width="800"/></p>
<p>校內網路設定</p>
<p style="padding-left: 30px;">系網路</p>
<p style="padding-left: 30px;">IPv4 與 IPv6</p>
<p style="padding-left: 30px;">代理主機</p>
<p>校外網路設定</p>
<p style="padding-left: 30px;">VPN</p>
<p style="padding-left: 60px;">下載安裝校方提供軟體</p>
<p style="padding-left: 90px;">每半年認證一次</p>
<p style="padding-left: 60px;">下載校方購買的電子書與期刊</p><h2>SSH</h2>
<h4>SSH 網路連線加密機制</h4>
<p>SSH 指 Secure SHell, 是一種網路連線加密機制, 當我們在 Mac OS 或 Linux 操作系統中的 Terminal 或 XTerm 時, 可以利用 ssh 帳號@遠端主機 ip 或符號名稱, 就可以輸入認證密碼, 登入到遠端主機.</p>
<p>一般針對公開的 Github 倉儲, 任何人都可以直接透過 https 協定 clone 倉儲, 無需認證, 但是倉儲協同者若要從近端將改版資料送到 Github, 就必須通過認證, 假如採 https 協定, 則倉儲協同者在推送改版資料時, 必須提供帳號與密碼.</p>
<p>除了 https 協定, Github 也接受倉儲的協同者以 SSH 連線的方式, git clone private 倉儲, 或以 SSH 連線的方式將近端改版資料推送到遠端倉儲.</p>
<p>SSH 的連線加密機制依賴 private key 與 public key 之間的配對, 當使用者建立 SSH key pair 時, private key 必須保護在近端, 而 public key 則必須送到進行認證的遠端伺服器中.</p>
<h4>建立 OpenSSH key pair</h4>
<p>Github 伺服器所支援的 SSH 為 OpenSSH 檔案格式的協定, 因此使用者要送到 Github 伺服器上的 OpenSSH 格式 public key, 可以透過 portablegit 中的 sh.exe 進入 SHell, 然後利用以下指令建立採 <a href="https://en.wikipedia.org/wiki/RSA_(cryptosystem)">rsa</a> 加密演算法的 key pair:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">ssh-keygen -t rsa -b 4096 -C "使用者學號"</pre>
<p>在 -C 後的使用者學號字串, 會直接附加在 OpenSSH public key 檔案的最後端, 讓使用者得以辨識 public key 的對應使用者, 而所建立的 OpenSSH private key 則可以透過 puttygen 轉換為 putty 特有檔案格式.</p>
<h4>Putty 作為 SSH 連線客戶端工具</h4>
<p>Putty 套件可用於 Windows 與 Linux 操作系統, 可以讓使用者以 SSH 加密機制遠端登入到其他伺服器主機, 由於電腦輔助設計室電腦的第三磁區上課時會轉為純 IPv6 協定上網, 當使用者要將近端改版資料推送到遠端時, 由於 Github 至今仍只支援 IPv4 網路協定, 因此無論是以 https 或 ssh 方式連線, 都必須透過能同時支援 IPv4 與 IPv6 的代理主機.</p>
<p>以 https 協定對 Github 連線的代理主機設定位於 home/.gitconfig, 而在 Windows 10 操作系統中採 SSH 對 Github 連線, 就必須將代理主機與 private key 的設定, 透過 Putty 完成.</p>
<h4>以 SSH 協定與 Github 連線</h4>
<p>1. 建立一對 OpenSSH key pair, private key 保留在近端, 將 public key 登記在 Github 所屬帳號設定中.</p>
<p>2. 近端可攜系統啟動時, 必須確認已經設定</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">set GIT_SSH=%Disk%:\putty\plink.exe</pre>
<p>表示 git 將透過 putty 工具以 ssh 加密協定對 Github 連線</p>
<p>3. 在 Putty 中設定對 github.com ssh 時必須提供的 Proxy 代理主機設定與 Auth 認證所需的近端 private key, 而且必須利用 puttygen 將 OpenSSH 格式轉為 putty 檔案格式</p>
<p>4. 無論在 git clone 或 git push (URL 位於倉儲 .git/config 中), URL 必須使用 <a href="mailto:git@github.com:帳號/倉儲名稱.git">git@github.com:帳號/倉儲名稱.git</a> 連線</p>
<h4>利用 SSH 對 Gitlab 連線</h4>
<ol>
<li>首先必須要將 OpenSSH 格式的 public key 登錄到 Gitlab 帳號下</li>
<li>確定已經利用 putty.exe 建立 session 名稱為 gitlab.com 的設定, 其中設定 AUTH 與 Proxy 資料</li>
<li>修改各倉儲中 .git/config 的 gitlab remote add 設定, 以 url = git@gitlab.com:user_name/url 對 gitlab 連接.</li>
</ol>
<p></p><h3>OpenSSH</h3>
<p><a href="/downloads/OpenSSH vs OpenSSL Key Formats.pdf">OpenSSH vs OpenSSL Key Formats.pdf</a></p>
<p>利用 OpenSSH 建立 key pair 的方法:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">ssh-keygen -t rsa -b 4096 -C "使用者學號"</pre>
<p>利用 OpenSSH 從 private key 產生 public key:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">ssh-keygen -y -f id_rsa &gt; id_rsa.pub</pre>
<p></p><h1>Topics</h1>
<p></p>
<p><a href="/downloads/open_design_movement.pdf">Open Design Movement.pdf</a></p>
<p><a href="/downloads/designing_open_engineering_systems.pdf">Designing Open Engineering Systems.pdf</a></p>
<p><a href="/downloads/industry_4_workforce_for_tomorrow.pdf">Inductry 4.0 and Workforce for Tomorrow.pdf</a></p>
<p style="padding-left: 30px;">Digitization is the transformation from analog to digital or digital<br/>representation of a physical item with the goal to digitize and<br/>automate processes or workflows.</p>
<p style="padding-left: 30px;">Digital Business is the creation of new business designs by blurring<br/>the digital and physical worlds. It promises to usher in an<br/>unprecedented convergence of people, business and things that<br/>disrupts existing business models - even those born of the Internet<br/>and e-business eras.</p>
<p style="padding-left: 30px;">Digital Transformation is the novel use of digital technology to solve<br/>traditional problems. These digital solutions enable - other than<br/>efficiency via automation - new types of innovation and creativity,<br/>rather than simply enhance and support traditional methods.<br/>Success is anchored in both digital business and digitization.</p>
<p style="padding-left: 30px;">Interoperability: The ability of machines, devices, sensors, and<br/>people to connect and communicate with each other via the<br/>Internet of Things (IoT) or the Internet of People (IoP).</p>
<p style="padding-left: 30px;">Information transparency: The ability of information systems to<br/>create a virtual copy of the physical world by enriching digital<br/>plant models with sensor data. This requires the aggregation of<br/>raw sensor data to higher-value context information.</p>
<p style="padding-left: 30px;">Technical assistance: First, the ability of assistance systems to<br/>support humans by aggregating and visualizing information<br/>comprehensibly for making informed decisions and solving urgent<br/>problems on short notice. Second, the ability of cyber physical<br/>systems to physically support humans by conducting a range of<br/>tasks that are unpleasant, too exhausting, or unsafe for their<br/>human co-workers.</p>
<p style="padding-left: 30px;">Decentralized decisions: The ability of cyber physical systems to<br/>make decisions on their own and to perform their tasks as<br/>autonomously as possible. Only in the case of exceptions,<br/>interferences, or conflicting goals, are tasks delegated to a higher<br/>level.</p>
<p style="padding-left: 30px;">In addition to being able to adapt to advances in technology, the<br/>person needs to be able to communicate and relate to people (from<br/>different disciplines, cultures, values) who may not be co-located.<br/>Talent in a digitally transforming enterprise ($Talent_{dt}$) can loosely be<br/>expressed as follows:</p>
<p style="padding-left: 30px;">$Talent_{dt} = Talent + Generative Learning$</p>
<p style="padding-left: 30px;">Generative learning is learning that enhances our capacity to innovate<br/>and create. Foundational to it is the active integration of new ideas<br/>with the learner’s existing schemata.</p>
<p style="padding-left: 30px;">We cannot teach people how to learn what is needed, unlearn what is<br/>no longer relevant and re-learn that which is still needed.<br/>We can provide an opportunity for people to learn by reflecting on<br/>doing (Experiential Learning).</p>
<p><a href="/downloads/machine_learning_applications_for_furnace_control_and_process_optimization_in_steelmaking.pdf">Machine Learning Applications for Furnamce Control and Process Optimization in Steelmaking.pdf</a></p>
<p>課程助教:</p>
<p>40723150 (lead), 40723110, 40723115, 40723138, 40723148</p>
<p>40723145 (lead), 40723102, 40723103, 40723153, 40723245</p>
<p>40723212 (lead), 40723216, 40723223, 40723246</p>
<p>負責事項:</p>
<p>電腦輔助設計室電腦第三磁區系統維護</p>
<p>每週四 19:00 - 21:00 在電腦輔助設計室為操作實習與助教協助回答問題時間</p>
<script>
MathJax = {
    tex: {inlineMath: [['$', '$']]}
  };
</script>
<script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script>
<h2>Video</h2>
<p>本課程所有學員都必須熟悉利用下列工具製作電腦操作過程錄影並協同進行線上直播與錄影:</p>
<h4 style="padding-left: 30px;"><a href="https://github.com/ShareX/ShareX/releases">ShareX</a></h4>
<p style="padding-left: 60px;">課程進行中的所有操作細節都會利用 <a href="https://github.com/ShareX/ShareX/releases">ShareX</a> 進行錄影, 並將 mp4 影片檔案放入 <a href="https://drive.google.com/drive/folders/1FQ0cTvXYrLGvdjKfVIotB8oXR8o7EYwo?usp=sharing">cp2020 課程線上教學影片區</a>, 各學員可以直接利用電腦或手機觀看.</p>
<h4 style="padding-left: 30px;"><a href="https://meet.google.com/">Google Meet</a></h4>
<p style="padding-left: 60px;"><a href="https://meet.google.com/">https://meet.google.com/</a> 允許 @gm 用戶進行線上串流對談, 分享電腦操作畫面, 文字留言以及串流影音錄影等功能, 各分組學員必須熟悉如何操作並且在分組後每單數週, 利用 <a href="https://meet.google.com/">Google Meet</a> 進行線上會議討論與錄影存證.</p>
<h4 style="padding-left: 30px;"><a href="https://www.youtube.com/">Youtube</a> + <a href="https://obsproject.com/">OBS</a></h4>
<p style="padding-left: 60px;"><a href="https://obsproject.com/">OBS</a> 支援多元的電腦影音來源組合功能, 配合 <a href="https://www.youtube.com/">Youtube</a> 的線上串流直播與錄影功能, 可以讓不參與會議者以文字留言板進行互動或在線上觀看直播. <span>各分組學員必須熟悉如何操作並且在分組後每雙數週, 利用 <a href="https://www.youtube.com/">Youtube</a> + <a href="https://obsproject.com/">OBS</a> 進行線上會議討論與錄影存證.</span></p>
<h4 style="padding-left: 30px;"><a href="https://www.debugmode.com/wink/download.htm">Wink</a></h4>
<p style="padding-left: 60px;"><a href="https://www.debugmode.com/wink/download.htm">Wink</a> 是一套用來製作電腦操作流程說明用的工具, 之前 2.0 版本的輸出檔案為 Flash swf 檔案格式, 但因各瀏覽器將在 <a href="https://www.blog.google/products/chrome/saying-goodbye-flash-chrome/">2020 年底停止支援 Flash 播放功能</a>, 因此目前作者正在測試能夠透過 <a href="https://ffmpeg.org/">FFMPEG</a> 輸出 mp4 檔案的版本, 待其正式推出後將可用於課程教學中.</p>
<p>以下為參考用的線上影片:</p>
<h4>Deep Learning</h4>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/r0Ogt-q956I" width="560"></iframe></p>
<p>2016</p>
<p>By 2020, the workplace will look very different from the one we see today. Companies will function in a vastly more <span style="background-color: #ffff00;">digitized environment</span>, but 30 percent of them will fail because there aren't enough workers with the skills to drive the <span style="background-color: #ffff00;">digital transformation</span> that companies need.</p>
<p>Analysts are forecasting a global shortage of 38 million to 40 million college-educated workers, a gap that will affect advanced nations as well as emerging countries. And the length of tenure in a job is shortening as well. The average time a worker spends in one job has declined from five to seven years to only two to three years, widening the gap between supply and demand. This session will explore the critical changes that must be made to give workers the skills required in the workforce of tomorrow.</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/nCcU_9oH0wE" width="560"></iframe></p>
<p>2017</p>
<p>In the eyes of top executives, their job is to imagine the future and work towards making that imagined future a reality. Many of the largest companies in the world are intent on embracing change and building pathways that lead to a robust workforce, innovation and job creation. Corporate leaders must pursue and encourage growth while also promoting values that reach beyond the bottom line.</p>
<p>How do business leaders build and drive the workforce of the future? <br/>Change can be an amorphous concept; how should corporations define and pursue it? <br/>What are the most effective ways for CEOs and other top executives to combine growth and purpose to reflect workforce and corporate values and culture?</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/VuExrq0ZGRI" width="560"></iframe></p>
<p>2018</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/TeBpABAMkYA" width="560"></iframe></p>
<p>2019</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/k9DqpyXDpY8" width="560"></iframe></p>
<p>2020</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/r202X3Kmius" width="560"></iframe></p>
<h3>W1Video</h3>
<p><a href="https://drive.google.com/file/d/1kAqQ5gIEiBpAwBTLY7PWnHFZWPFcotY5/view?usp=sharing">1bw1cp_cadlab_networking.mp4</a></p>
<p style="padding-left: 30px;">說明綜一館八樓電腦輔助設計室上 <a href="http://mde.tw/lab/">KMOLab</a> 課程時如何採 IPv6 設定</p>
<p style="padding-left: 30px;">為何要採用 IPv6 網路設定</p>
<p style="padding-left: 30px;">如何設定 IPv4 與 IPv6 雙支援的代理主機</p>
<p style="padding-left: 30px;">如何利用 ipconfig /all 查驗 Windows 10 網路設定結果</p>
<p><a href="https://drive.google.com/file/d/1008tISrNfJXm5u457YPYUFYcRVcZ0EHj/view?usp=sharing">2bw1cp_course_introduction.mp4</a></p>
<p style="padding-left: 30px;">計算機程式課程簡介</p>
<p style="padding-left: 30px;">課程評分流程簡介</p>
<p style="padding-left: 30px;">說明將使用 <a href="https://gitter.im/mdecourse/cp2020">https://gitter.im/mdecourse/cp2020</a> 收集並回答課程相關問題</p>
<p style="padding-left: 30px;">說明將使用 <a href="https://oli.cmu.edu/product-category/computer-science-programming-indep/">https://oli.cmu.edu/product-category/computer-science-programming-indep/</a><span><span> 教材熟悉電腦硬體與軟體</span></span></p>
<p style="padding-left: 30px;">說明如何利用 <a href="https://github.com/ShareX/ShareX/releases">ShareX</a> 錄製電腦操作過程</p>
<p><a href="https://drive.google.com/file/d/19hFSj-9BNlmtRgsjAOOEgHdnbNlapkfm/view?usp=sharing">3aw1cp_sharex_github_introduction.mp4</a></p>
<p style="padding-left: 30px;"><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/zoomit">Zoomit</a> 工具介紹</p>
<p style="padding-left: 30px;"><a href="https://www.7-zip.org/download.html">7zip</a> 工具介紹</p>
<p style="padding-left: 30px;"><span>說明如何利用 </span><a href="https://github.com/ShareX/ShareX/releases">ShareX</a><span><span> </span>錄製電腦操作過程</span></p>
<p style="padding-left: 30px;"><a href="http://a.kmol.info:88/">fall2020.7z</a> 下載與使用 (第一版未安裝 <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a> 所需模組)</p>
<p style="padding-left: 30px;">介紹將在隨身系統, <a href="https://www.kaggle.com/mdecourse/notebooks">Kaggle</a> 與 <a href="https://colab.research.google.com/">colab</a> 環境學習 <a href="https://docs.python.org/3/">Python</a></p>
<p style="padding-left: 30px;"><span>說明將使用 </span><a href="https://oli.cmu.edu/product-category/computer-science-programming-indep/">https://oli.cmu.edu/product-category/computer-science-programming-indep/</a><span><span> 教材熟悉電腦硬體與軟體</span></span></p>
<h3>W2Video</h3>
<p><a href="https://drive.google.com/file/d/1YnrfYftnrG7B3wp_FmiOS-bHndmF7-49/view?usp=sharing">4bw2cp_random_grouping.mp4</a></p>
<p style="padding-left: 30px;">利用線上程式進行亂數分組</p>
<p style="padding-left: 30px;">說明亂數分組程式牽涉教務處主機, <a href="https://www.heroku.com/">Heroku</a> 雲端主機以及 <a href="https://dart.dev/">Dart</a> 轉 Javascript 等三個程式</p>
<p style="padding-left: 30px;">上課的資料將同步到 <a href="https://github.com/">Github</a> 與 <a href="https://gitlab.com/">Gitlab</a>, 主要目的在建立資料保全的習慣</p>
<p style="padding-left: 30px;">亂數分組程式假設各組員能夠採用學號作為 Github 帳號</p>
<p style="padding-left: 30px;">說明針對規律型的超文件資料, 可以採用計算機重複迴圈建立所需的資料</p>
<p style="padding-left: 30px;">說明在系上可以從 <a href="http://a.kmol.info:88">http://a.kmol.info:88</a> 主機下載所需的資料</p>
<p style="padding-left: 30px;">說明在 Windows 命令列指令的基本用法</p>
<p style="padding-left: 30px;">說明如何在近端啟動 <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a> 動態網頁系統, 目的是進行網站內容的編輯</p>
<p><a href="https://drive.google.com/file/d/1eqBXHABLUNanNzUUSRPLXmfeLFfIpOUY/view?usp=sharing">5bw2cp_repo_cmsimde.mp4</a></p>
<p style="padding-left: 30px;">利用 50703199 帳號 demo <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a> 建立 <a href="https://pages.github.com/">Github Pages</a> 網站的做法</p>
<p style="padding-left: 30px;">Demo 如何對 Github 倉儲改名</p>
<p style="padding-left: 30px;">說明與可攜系統 start.bat 有關的<a href="https://www.tutorialspoint.com/batch_script/batch_script_overview.htm">批次檔案指令</a></p>
<p style="padding-left: 30px;">說明 Windows 資料夾與隱藏檔案的檢視設定</p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/docs/git-clone">git clone</a> 以及 <a href="https://git-scm.com/docs/git-submodule">git submodule add</a> 的用法, 目的在利用 <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a> 建立個人網站</p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/docs/git-config">git config</a> 用法</p>
<p><a href="https://drive.google.com/file/d/1W7SJCi5IJ5XLxuPcqaPvqiU538fDUnSQ/view?usp=sharing">6bw2cp_github_pages.mp4</a></p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/docs/git-branch">Git 分支</a>用法, 並將個人 cp2020 倉儲的 master 設為 Github Pages 網頁的根目錄</p>
<p style="padding-left: 30px;">說明 <a href="https://pages.github.com/">Github Pages</a> 網址與帳號之間的關聯</p>
<p style="padding-left: 30px;">說明近端 <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a> 子模組新增後必須將 <a href="https://github.com/mdecourse/cmsimde/tree/master/up_dir">up_dir</a> 資料複製到倉儲根目錄的用法</p>
<p style="padding-left: 30px;">說明如何在近端利用 <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a><span><span> </span></span>動態網站管理網站內容</p>
<p style="padding-left: 30px;">說明如何將動態網頁轉成靜態網頁並 git add, git commit , git push 到遠端 Github 主機</p>
<p><a href="https://drive.google.com/file/d/1XQuA4TossgadnqybaqogrqQhUgXv47ep/view?usp=sharing">7aw2cp_kaggle_python.mp4</a></p>
<p style="padding-left: 30px;">nslookup 用法說明</p>
<p style="padding-left: 30px;">說明如何在 <a href="https://www.kaggle.com/mdecourse/notebooks">Kaggle</a><span><span> 以及近端可攜程式環境, 利用 Python 編寫累加程式</span></span></p>
<p style="padding-left: 30px;"></p><h3>W3Video</h3>
<p><a href="https://drive.google.com/file/d/1U3-rTZ9Dkp3uontS0vqo8sMecpKUJQ_A/view?usp=sharing">8bw3cp_how_to_deal_with_vacant_repository.mp4</a></p>
<p style="padding-left: 30px;">說明如何處理 <a href="https://github.com/">Github</a> 空倉儲與近端倉儲間的資料連結設定</p>
<p style="padding-left: 30px;">Windows path 命令與指令搜尋間的關係及用法</p>
<p style="padding-left: 30px;">Windows 批次命令 echo 的用法</p>
<p style="padding-left: 30px;">說明 <a href="https://git-scm.com/docs/git-init">git init</a>, <a href="https://git-scm.com/docs/git-remote">git remote add</a>, 以及 <a href="https://git-scm.com/docs/git-push">git push -u</a> 的用法</p>
<p style="padding-left: 30px;">說明 Windows 中如何修改將隱藏檔案與目錄檢視設定</p>
<p style="padding-left: 30px;">利用 Git 倉儲近端工作目錄與遠端倉儲之間同步進行資料保全</p>
<p style="padding-left: 30px;">說明對 Github 採 https 與 SSH 協定的語法差異</p>
<p style="padding-left: 30px;">git push --set-upstream 的簡寫為 git push -u</p>
<p><a href="https://drive.google.com/file/d/1-WFEho0KiH5KE1EDFcNCnMuhnbDy-AaH/view?usp=sharing">9bw3cp_downlaod_v2_submodule_add_cmsimde.mp4</a></p>
<p style="padding-left: 30px;">說明如何在系上從 <a href="http://a.kmol.info:88">http://a.kmol.info:88</a> 下載第二版的可攜程式環境</p>
<p style="padding-left: 30px;">再次提醒 <a href="https://git-scm.com/docs/git-config">git config</a> 的用法, 包括 --global user.email, --global user.name 與 --global http.proxy</p>
<p style="padding-left: 30px;">說明如何在近端利用執行 <a href="https://github.com/mdecourse/cmsimde/blob/master/up_dir/http-server.py">http-server.py</a> 檢視 <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a> 的靜態網頁</p>
<p style="padding-left: 30px;">說明當倉儲已經具有子模組則要從遠端 git clone 資料到近端, 必須使用 git clone --recurse-submodules URL.git 進行資料下載</p><h3>W5Video</h3>
<p><a href="https://drive.google.com/file/d/1_xMRdzoNXRQcFrw4R65o2Ynnmriy-ZmG/view?usp=sharing">10aw5_kaggle_variable_for_list_append.mp4</a></p>
<p style="padding-left: 30px;">說明可以利用命令列輸入 Python 進入互動模式逐步測試 Python 程式語法</p>
<p style="padding-left: 30px;">說明如何利用 print() 函式列印變數內容</p>
<p style="padding-left: 30px;">說明如何利用 typ() 列印物件的資料型別 </p>
<p style="padding-left: 30px;">說明變數命名可以使用英文大小寫字母或底線開頭, 再加上其他數字, 大小寫英文字母或底線</p>
<p style="padding-left: 30px;">說明如何利用 "<span class="c1">python read url file data" 搜尋網路上有關利用 Python 讀取網頁資料的用法</span></p>
<p style="padding-left: 30px;"><span class="c1">說明 for 迴圈的基本用法</span></p>
<p style="padding-left: 30px;"><span class="c1">說明 Python 程式利用四個空白鍵作為縮排的格式, 並且利用縮排來區隔執行範圍</span></p>
<p style="padding-left: 30px;"><span class="c1">說明 NameError 與 SyntaxError 的發生情況</span></p>
<p style="padding-left: 30px;"><a href="https://www.kaggle.com/mdecourse/w5cpa">https://www.kaggle.com/mdecourse/w5cpa</a> </p>
<p style="padding-left: 30px;"><a href="https://www.kaggle.com/mdecourse/cp2020-hw2">https://www.kaggle.com/mdecourse/cp2020-hw2</a> </p>
<p><a href="https://drive.google.com/file/d/11WV9HSmNfVCFdJmbAGfgjdSkGmA9hwta/view?usp=sharing">11aw5_kaggle_list_for_to_anchor.mp4</a></p>
<p style="padding-left: 30px;">說明如何將網路上的資料讀進數列, 並且將每一列資料的最後符號刪除</p>
<p style="padding-left: 30px;">如何利用迴圈與字串組合產生所需要的 html 超文件資料</p>
<h3>W7Video</h3>
<p><a href="https://drive.google.com/file/d/1AAfYEPbJ3053wT0I4qhQ38F9SlMr0iTG/view?usp=sharing">12bw7_gitlab_remote_add_kaggle_intro.mp4</a></p>
<p style="padding-left: 30px;">說明如何在 <a href="https://gitlab.com">https://gitlab.com</a> 建立一個與 <a href="https://github.com">https://github.com</a> 同名的空倉儲, 然後利用 git remote add 設定一個名稱為 gitlab 的遠端倉儲連線, 然後在 git push 時就可以將近端版本同步一份到 gitlab.com</p>
<p style="padding-left: 30px;">假如希望啟用 gitlab 倉儲上的 <a href="https://docs.gitlab.com/ee/user/project/pages/">gitlab pages</a>, 請參考: <a href="https://mde.tw/lab/blog/use-github-and-gitlab-pages.html">https://mde.tw/lab/blog/use-github-and-gitlab-pages.html</a></p>
<p style="padding-left: 30px;">必須在倉儲根目錄中放入 .gitlab-ci.yml 設定檔案:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">pages:
  stage: deploy
  script:
  - mkdir .public
  - cp -r * .public
  - mv .public public
  artifacts:
    paths:
    - public
  only:
  - master
variables:
  GIT_SUBMODULE_STRATEGY: recursive</pre>
<p>在原 github 倉儲中加入 .gitlab-ci.yml 並將資料推送至 gitlab 倉儲後, 就可以見到 <a href="https://mdecourse.gitlab.io/cp2020/">https://mdecourse.gitlab.io/cp2020/</a> </p>
<p><a href="https://drive.google.com/file/d/1_lnRQCjMOWIyxtHiMyX5leSJE6kMjoZI/view?usp=sharing">13bw7_print_function_demo.mp4</a></p>
<p style="padding-left: 30px;">說明如何使用 print() 函式</p><h3>W8Video</h3>
<p><a href="https://drive.google.com/file/d/1TrRCGcoSyNLSwp2fvj2cznoKuVCcPxQY/view?usp=sharing">14bw8_diagrams_kaggle_datasets_read_data.mp4</a></p>
<p style="padding-left: 30px;">說明使用者可以直接利用 <a href="https://app.diagrams.net/">https://app.diagrams.net/</a> 建立流程圖說明網路架構或者計算機程式規劃圖.</p>
<p style="padding-left: 30px;">說明如何利用 With open as 與 read, readline 與 readlines 讀取近端檔案或者利用 urllib.request  讀取網際資料, 取得資料後再設法進行處理重用.</p>
<p style="padding-left: 30px;">本週同時加入 <a href="https://www.kaggle.com/mdecourse/w8data">https://www.kaggle.com/mdecourse/w8data</a> 以及 <a href="https://www.kaggle.com/mdecourse/cp2020w8">https://www.kaggle.com/mdecourse/cp2020w8</a>, 使用者可以直接在 kaggle 上編輯並分享 Python 程式與資料集.</p>
<h3>W10Video</h3>
<p><a href="https://drive.google.com/file/d/1DPo5dYkBR-vvwaq1XXezfnwSFPuQn6v8/view?usp=sharing">15bw10_ssh_putty_connect_to_github.mp4</a></p>
<p style="padding-left: 30px;">說明如何在 git 協同過程利用 ssh 對遠端倉儲連線, 其中牽涉從啟動 start.bat GIT_SSH 變數必須與 Putty 中的 plink.exe 對應, 必須建立 OpenSSH 格式的 key pair, 必須將 public key 登記到 Github 帳號, 必須將近端倉儲的連線從 https 改為 ssh, 必須會將 private key 轉為 putty 格式, 最後則是在建立 Putty 對 github.com 連線 session 時, 必須設定從純 IPv6 對目前只支援 IPv4 的 github.com 連線啟用 http 代理主機, 並且設定 Putty 格式 private key 位置.</p>
<p><a href="https://drive.google.com/file/d/1QYJ3vfDnMSp0OGyKsOp_7_mzU_Umw3S7/view?usp=sharing">16bw10_ssh_generate_key_convert_key_intro.mp4</a></p>
<p style="padding-left: 30px;">示範如何利用 sh.exe 建立 OpenSSH 格式的 key pair, 如何轉為 putty 格式的 private key</p>
<p><a href="https://drive.google.com/file/d/1za4f2O0ufm-nW3F6rb4Rw9UY4FBWd8ay/view?usp=sharing">17_bw10_use_cmstemplate_to_create.mp4</a></p>
<p style="padding-left: 30px;">示範利用 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 建立各分組倉儲</p>
<p style="padding-left: 30px;">先登入 github 帳號</p>
<p style="padding-left: 30px;">將瀏覽器指向 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 點選右上方綠色的 Use this template 按鈕後建立分組倉儲, 完成後該分組倉儲就會以目前 cmstemplate 倉儲的內容作為樣板建立分組倉儲.</p>
<h3>W11Video</h3>
<p><a href="https://drive.google.com/file/d/1hG6EXjogxm3TOY7I1csXpZPxl7yjBAZq/view?usp=sharing">22bw11_cmstemplate_collaboration.mp4</a></p>
<p style="padding-left: 30px;">說明如何進行分組協同作業</p>
<h3>W12Video</h3>
<p><a href="https://drive.google.com/file/d/16TqvhiT7U2C20O6Lhu3FcaFZl_bw0sfY/view?usp=sharing">18bw12_csave_for_hw3.mp4</a></p>
<p style="padding-left: 30px;">說明如何在區域網路中由組長啟動帶有協同儲存 (csave) 功能的動態編輯器</p>
<p><a href="https://drive.google.com/file/d/1S0XYN-1MKxo0KFYxs0pFTcTrr8NL4n1b/view?usp=sharing">19aw12_add_putty_session_registry_to_start.bat.mp4</a></p>
<p style="padding-left: 30px;">說明如何將 putty.exe 中的 github.com session 組態值匯出, 並利用 start.bat 在隨身系統啟動時自動設定正確的個人 .ppk 路徑</p>
<p></p><h2>W1</h2>
<p>每班按照學號使用固定電腦, 若電腦故障則必須在一週內負責告知助教, 並將電腦第三磁區複製回原始狀態, 若電腦硬體故障則需回報給助教設法請廠商進行維護, 期間則至使用最後一列備用電腦.</p>
<p>準備在個人的電腦, 筆電或電腦輔助設計室中的電腦, 製作合用的可攜程式系統.</p>
<p>W1 學員登入學校配發的 @gm 郵件帳號後,<span> </span><a href="https://forms.gle/3hfnf6D2QCemdDQn9">填寫基本資料</a></p>
<p>W1 告知將利用<span> </span><a href="https://gitter.im/">Gitter</a><span> </span>進行課程議題討論 (其餘各種問題可以至 <a href="https://forum.eng.nfu.edu.tw/">discourse</a> 討論)</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cp2020">https://gitter.im/mdecourse/cp2020</a> </p>
<p style="padding-left: 30px;"><a href="https://forum.eng.nfu.edu.tw">https://forum.eng.nfu.edu.tw</a> </p>
<p>W1 就電腦軟硬體與網路環境的使用進行介紹</p>
<p style="padding-left: 30px;">上課時將以 50703199 At mde dot nfu dot edu dot tw <a href="https://oli.cmu.edu/product-category/computer-science-programming-indep/">登入</a>介紹</p>
<p>W1 登入 @gm 帳號後, 可以直接利用 <a href="https://kaggle.com">https://kaggle.com</a> 中的 Notebook 執行 Python 程式</p>
<p style="padding-left: 30px;">在 Kaggle 中啟用 GPU 與網路連線需要利用手機門號驗證, 而且一個門號只能驗證一個帳號</p>
<p style="padding-left: 30px;"><a href="https://www.kaggle.com/mdecourse/cp2020">https://www.kaggle.com/mdecourse/cp2020</a> </p>
<p style="padding-left: 30px;"><a href="https://www.kaggle.com/mdecourse/ml2020">https://www.kaggle.com/mdecourse/ml2020</a> </p>
<p>Notice: 一甲 9/24 (四) 下午要補 10/2 中秋節連假的課程時段</p><h3>W1_list</h3>
<p>1. 基本資料填了沒? <a href="https://forms.gle/3hfnf6D2QCemdDQn9">填寫基本資料</a></p>
<p>2. 會不會進入 <a href="https://kaggle.com">https://kaggle.com</a>  利用 Python Notebook 練習 Python 程式?</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">var1 = 1
var2 = 1.01
var3 = "integer"
var4 = "float number"
_var5 = "Hello"
print(_var5 + "," + str(var1) + " is an " + var3 + ".")</pre>
<p>3. 操作發生問題, 知不知道去哪裡問?</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cp2020">https://gitter.im/mdecourse/cp2020</a> </p>
<p style="padding-left: 30px;"><a href="https://forum.eng.nfu.edu.tw">https://forum.eng.nfu.edu.tw</a> </p>
<p style="padding-left: 30px;">提問題之前要先看看 <a href="https://drive.google.com/drive/folders/1FQ0cTvXYrLGvdjKfVIotB8oXR8o7EYwo?usp=sharing">cp2020 課程線上教學影片區</a> 中的教學影片有沒有相關內容, 看完教學影片是否將重點整理在自己的紙本筆記中?  有沒有逐步養成與組員協同找答案的習慣?</p>
<p>4. 各小組有沒有準備開始在線上利用 <a href="https://meet.google.com/">Meet</a> 或 <a href="https://www.youtube.com/">Youtube</a> + <a href="https://obsproject.com/">OBS</a> 開每週小組討論會議?</p>
<p style="padding-left: 30px;"><a href="https://meet.google.com/">Google Meet</a></p>
<p style="padding-left: 60px;"><a href="https://meet.google.com/">https://meet.google.com/</a> 允許 @gm 用戶進行線上串流對談, 分享電腦操作畫面, 文字留言以及串流影音錄影等功能, 各分組學員必須熟悉如何操作並且在分組後每單數週, 利用 <a href="https://meet.google.com/">Google Meet</a> 進行線上會議討論與錄影存證.</p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/">Youtube</a> + <a href="https://obsproject.com/">OBS</a></p>
<p style="padding-left: 60px;"><a href="https://obsproject.com/">OBS</a> 支援多元的電腦影音來源組合功能, 配合 <a href="https://www.youtube.com/">Youtube</a> 的線上串流直播與錄影功能, 可以讓不參與會議者以文字留言板進行互動或在線上觀看直播. <span>各分組學員必須熟悉如何操作並且在分組後每雙數週, 利用 <a href="https://www.youtube.com/">Youtube</a> + <a href="https://obsproject.com/">OBS</a> 進行線上會議討論與錄影存證.</span></p>
<p>5. 知不知道什麼時候 HW1 due? Github Pages 建起來之後, 趕快進行.</p>
<p style="padding-left: 30px;"><a href="http://mde.tw/cp2020/content/W3.html">http://mde.tw/cp2020/content/W3.html</a> </p>
<p style="padding-left: 30px;">知不知道 HW2 也規劃好了?</p>
<p></p><h2>W2</h2>
<p>W2 學員建立<span> </span><a href="https://github.com/">Github</a>,<span> </span><a href="https://gitlab.com">Gitlab,</a><span> </span><a href="https://www.heroku.com/">Heroku</a><span> </span>與<span> </span><a href="https://www.authorea.com/">Authorea</a><span> </span>帳號</p>
<p><span>W2</span><span> </span>學員利用 Github Pages 與 CMSiMDE 建立個人網頁</p>
<p>W2 學員學習如何利用 Git 與 Github 維護個人網頁</p>
<h4>下載可攜 Python 套件</h4>
<p>在電腦輔助設計室可以利用 IPv6 協定至 <a href="http://a.kmol.info:88">http://a.kmol.info:88</a> 下載課程相關檔案.</p>
<p>下載 <a href="https://drive.google.com/file/d/1fKXXLc2P7hQb3spsmD1HM9Uljy3gvcMc/view?usp=sharing">fall2020_cp.7z</a> 壓縮檔案之後, 直接利用 7zip 解開壓縮, 然後在 64 位元 Windows 10 啟動 start.bat, 就可以直接在 SciTE 編輯器中解譯 Python 程式, 而且可以利用 pip 工具安裝所需的 Python 模組之後, 接下來必須:</p>
<ol>
<li>了解如何自己建立與 fall2020_cp.7z 相同功能的可攜 Python 套件</li>
<li>了解如何在可攜套件中加入 portablegit, sharex, putty 等工具, 並學習如何使用</li>
<li>了解如何在 github 以 submodule (或不以 submodule) 建立 cmsimde 倉儲</li>
<li>了解如何在近端維護 CMSiMDE 內容管理系統</li>
</ol>
<h4>for 重複迴圈的應用</h4>
<p>接下來要在頁面中插入 11 張圖, 希望寬度為 600 且 img 屬性加入 add_border.</p>
<p>第一張圖以手動方式插入後, 手動進入 html 編輯, 加入 class="add_border" 屬性後, 取得插入圖檔的 html 如下:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;p&gt;&lt;img class="add_border" height="342" src="/images/1_cp_git_and_cmsimde.png" width="600"&gt;&lt;/p&gt;</pre>
<p>隨後的 10 張圖希望利用 Python 迴圈產生後再從 html 編輯插入.</p>
<p><img class="add_border" height="342" src="/images/1_cp_git_and_cmsimde.png" width="600"/></p>
<p><img class="add_border" height="342" src="/images/2_cp_git_and_cmsimde.png" width="600"/></p>
<p><img class="add_border" height="342" src="/images/3_cp_git_and_cmsimde.png" width="600"/></p>
<p><img class="add_border" height="342" src="/images/4_cp_git_and_cmsimde.png" width="600"/></p>
<p><img class="add_border" height="342" src="/images/5_cp_git_and_cmsimde.png" width="600"/></p>
<p><img class="add_border" height="342" src="/images/6_cp_git_and_cmsimde.png" width="600"/></p>
<p><img class="add_border" height="342" src="/images/7_cp_git_and_cmsimde.png" width="600"/></p>
<p><img class="add_border" height="342" src="/images/8_cp_git_and_cmsimde.png" width="600"/></p>
<p><img class="add_border" height="342" src="/images/9_cp_git_and_cmsimde.png" width="600"/></p>
<p><img class="add_border" height="342" src="/images/10_cp_git_and_cmsimde.png" width="600"/></p>
<p><img class="add_border" height="342" src="/images/11_cp_git_and_cmsimde.png" width="600"/></p>
<p>上述利用迴圈插入具有規律的字串程式碼為:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
參考用的 html 字串為
&lt;p&gt;&lt;img class="add_border" height="342" src="/images/1_cp_git_and_cmsimde.png" width="600"&gt;&lt;/p&gt;
'''
firstSegment = '''&lt;p&gt;&lt;img class="add_border" height="342" src="/images/'''

secondSegment = '''_cp_git_and_cmsimde.png" width="600"&gt;&lt;/p&gt;'''

for i in range(2, 12):
    print(firstSegment + str(i) + secondSegment)</pre>
<p>其於 SciTE 編輯器執行畫面:</p>
<p><img alt="" class="add_border" height="398" src="/images/cp_w2_python_for_loop_application1.png" width="600"/></p>
<p>請問, 當成功以 <a>https://localhost:9443</a> 對 CMSiMDE 動態網站連線時出現以下畫面, 代表甚麼意思?</p>
<p><img alt="" class="add_border" height="297" src="/images/https_9443_panic.png" width="600"/></p>
<p>當我們成功完成 CMSiMDE 動態網站內容, 且利用  generate_pages 按鈕轉為靜態網站資料後, 要利用 git 指令新增提交退送時, 碰到以下問題:</p>
<p><img alt="" class="add_border" height="354" src="/images/cp_git_config_user_email_name.png" width="600"/></p>
<p>接著配合畫面中的提示, 利用 git config 指令操作結束後, 接著嘗試以 git push 將改版資料推送到遠端, 結果又出現下列畫面:</p>
<p><img alt="" class="add_border" height="354" src="/images/cp_push_rejected_need_git_pull.png" width="600"/></p>
<p>根據提示, 以 git pull 拉下遠端與近端的差異資料後, 又出現下列畫面, 因為提示中拉下的資料與 Leo Editor 有關, 因此在命令列視窗中輸入 leo, 試著開啟 Leo Editor, 結果出現的小視窗無論如何操作都會落入重複迴圈, 於是在 y:\home\.leo 目錄中, 以 SciTE 編輯器建立一個 .leoID.txt 檔案, 內容為任何字串, 然後以 stop.bat 關閉可攜系統之後, 再以 start.bat 開啟系統, 終於能夠開啟 Leo Editor, 並利用 git push 將近端資料成功送到 github.</p>
<p><img alt="" class="add_border" height="423" src="/images/cp_doing_git_pull.png" width="600"/></p>
<ol>
<li>請問, git config --global 指令執行成功後, 這些設定會存在哪裡?</li>
<li>另外假如我們不是使用可攜程式套件而是使用電腦輔助設計室中電腦所安裝的 Python 以及 git, 但是卻想在其他用戶所存放的 git config identity 中, 提交屬於自己帳號下的 comment, 該如何操作?</li>
<li>上述的流程設定, 必須每一次推送時都輸入 github 所登錄的帳號與密碼, 假如在協同者面前輸入帳號密碼時, 其他人都一直盯著我的鍵盤看, 該如何是好?</li>
<li>上述在 git push 之前需要 git pull 的原因是甚麼?</li>
<li>上述 Leo Editor 啟動時, 為何會進入重複迴圈?</li>
<li>CMSiMDE 是用甚麼程式語言建立的?</li>
<li>CMSiMDE 為什麼有動態網站與靜態網站的設計?</li>
<li>假如每一班都配給一台 Ubuntu 20.04 的伺服器, 可以配置與 Windows 10 相同的程式環境嗎? 假如我使用 MacBook 筆電也可以嗎?</li>
</ol><h3>程式語言</h3>
<h4>Python</h4>
<h4>Python Official Documentation:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/">https://docs.python.org/3/</a></p>
<h4>Kaggle Hello Python:</h4>
<p><a href="https://www.kaggle.com/colinmorris/hello-python">https://www.kaggle.com/colinmorris/hello-python</a></p>
<h4>Principles of Computation with Python:</h4>
<p style="padding-left: 30px;"><a href="https://oli.cmu.edu/courses/principles-of-computation-with-python-open-free/">https://oli.cmu.edu/courses/principles-of-computation-with-python-open-free/</a></p>
<p><img alt="" class="add_border" height="891" src="/images/intro_programming_with_python.png" width="600"/></p>
<h4>Javascript</h4>
<p style="padding-left: 30px;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">https://developer.mozilla.org/en-US/docs/Web/JavaScript</a></p>
<h4>Flutter</h4>
<p style="padding-left: 30px;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">https://developer.mozilla.org/en-US/docs/Web/JavaScript</a></p>
<h4>Lua</h4>
<p style="padding-left: 30px;"><a href="https://www.lua.org/start.html">https://www.lua.org/start.html</a> </p>
<h4>C<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"></a></h4>
<p style="padding-left: 30px;"><a href="https://bellard.org/tcc/">https://bellard.org/tcc/</a> </p>
<h4>C++</h4>
<p style="padding-left: 30px;"><a href="https://gcc.gnu.org/">https://gcc.gnu.org/</a> </p>
<p style="padding-left: 30px;"></p>
<p></p>
<p></p>
<p></p><h2>W3</h2>
<p>Ｗ3 統整 W1 與 W2 教材內容至各學員個人網頁</p>
<p>Ｗ3 完成<a href="http://mde.tw/cp2020/content/%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.html">亂數分組</a>,  每班分成五組</p>
<p>1a</p>
<p>group 1:<br/><br/> Repository: <a href="https://github.com/40923102/cp2020">40923102</a> | Site: <a href="https://40923102.github.io/cp2020">40923102</a><br/> Repository: <a href="https://github.com/40923103/cp2020">40923103</a> | Site: <a href="https://40923103.github.io/cp2020">40923103</a><br/> Repository: <a href="https://github.com/40923117/cp2020">40923117</a> | Site: <a href="https://40923117.github.io/cp2020">40923117</a><br/> Repository: <a href="https://github.com/40923119/cp2020">40923119</a> | Site: <a href="https://40923119.github.io/cp2020">40923119</a><br/> Repository: <a href="https://github.com/40923123/cp2020">40923123</a> | Site: <a href="https://40923123.github.io/cp2020">40923123</a> (組長)<br/> Repository: <a href="https://github.com/40923127/cp2020">40923127</a> | Site: <a href="https://40923127.github.io/cp2020">40923127</a><br/> Repository: <a href="https://github.com/40923131/cp2020">40923131</a> | Site: <a href="https://40923131.github.io/cp2020">40923131</a><br/> Repository: <a href="https://github.com/40923133/cp2020">40923133</a> | Site: <a href="https://40923133.github.io/cp2020">40923133</a><br/> Repository: <a href="https://github.com/40923141/cp2020">40923141</a> | Site: <a href="https://40923141.github.io/cp2020">40923141</a><br/> Repository: <a href="https://github.com/40923144/cp2020">40923144</a> | Site: <a href="https://40923144.github.io/cp2020">40923144</a><br/> Repository: <a href="https://github.com/40923148/cp2020">40923148</a> | Site: <a href="https://40923148.github.io/cp2020">40923148</a><br/> Repository: <a href="https://github.com/40923149/cp2020">40923149</a> | Site: <a href="https://40923149.github.io/cp2020">40923149</a><br/> <br/><br/> ============================== <br/><br/> group 2:<br/><br/> Repository: <a href="https://github.com/40623219/cp2020">40623219</a> | Site: <a href="https://40623219.github.io/cp2020">40623219</a><br/> Repository: <a href="https://github.com/40923101/cp2020">40923101</a> | Site: <a href="https://40923101.github.io/cp2020">40923101</a><br/> Repository: <a href="https://github.com/40923104/cp2020">40923104</a> | Site: <a href="https://40923104.github.io/cp2020">40923104</a><br/> Repository: <a href="https://github.com/40923107/cp2020">40923107</a> | Site: <a href="https://40923107.github.io/cp2020">40923107</a><br/> Repository: <a href="https://github.com/40923115/cp2020">40923115</a> | Site: <a href="https://40923115.github.io/cp2020">40923115</a><br/> Repository: <a href="https://github.com/40923124/cp2020">40923124</a> | Site: <a href="https://40923124.github.io/cp2020">40923124</a><br/> Repository: <a href="https://github.com/40923125/cp2020">40923125</a> | Site: <a href="https://40923125.github.io/cp2020">40923125</a> (組長)<br/> Repository: <a href="https://github.com/40923136/cp2020">40923136</a> | Site: <a href="https://40923136.github.io/cp2020">40923136</a><br/> Repository: <a href="https://github.com/40923142/cp2020">40923142</a> | Site: <a href="https://40923142.github.io/cp2020">40923142</a><br/> Repository: <a href="https://github.com/40923151/cp2020">40923151</a> | Site: <a href="https://40923151.github.io/cp2020">40923151</a><br/> Repository: <a href="https://github.com/40923152/cp2020">40923152</a> | Site: <a href="https://40923152.github.io/cp2020">40923152</a><br/> <br/><br/> ============================== <br/><br/> group 3:<br/><br/> Repository: <a href="https://github.com/s40723154/cp2020">40723154</a> | Site: <a href="https://s40723154.github.io/cp2020">40723154</a><br/> Repository: <a href="https://github.com/40828127/cp2020">40828127</a> | Site: <a href="https://40828127.github.io/cp2020">40828127</a><br/> Repository: <a href="https://github.com/40923106/cp2020">40923106</a> | Site: <a href="https://40923106.github.io/cp2020">40923106</a><br/> Repository: <a href="https://github.com/40923108/cp2020">40923108</a> | Site: <a href="https://40923108.github.io/cp2020">40923108</a><br/> Repository: <a href="https://github.com/40923118/cp2020">40923118</a> | Site: <a href="https://40923118.github.io/cp2020">40923118</a><br/> Repository: <a href="https://github.com/40923120/cp2020">40923120</a> | Site: <a href="https://40923120.github.io/cp2020">40923120</a><br/> Repository: <a href="https://github.com/40923126-1/cp2020">40923126</a> | Site: <a href="https://40923126-1.github.io/cp2020">40923126</a> (組長)<br/> Repository: <a href="https://github.com/40923128/cp2020">40923128</a> | Site: <a href="https://40923128.github.io/cp2020">40923128</a><br/> Repository: <a href="https://github.com/40923138/cp2020">40923138</a> | Site: <a href="https://40923138.github.io/cp2020">40923138</a><br/> Repository: <a href="https://github.com/40923145/cp2020">40923145</a> | Site: <a href="https://40923145.github.io/cp2020">40923145</a><br/> Repository: <a href="https://github.com/40923150/cp2020">40923150</a> | Site: <a href="https://40923150.github.io/cp2020">40923150</a><br/> <br/><br/> ============================== <br/><br/> group 4:<br/><br/> Repository: <a href="https://github.com/40923113/cp2020">40923113</a> | Site: <a href="https://40923113.github.io/cp2020">40923113</a><br/> Repository: <a href="https://github.com/40923114/cp2020">40923114</a> | Site: <a href="https://40923114.github.io/cp2020">40923114</a><br/> Repository: <a href="https://github.com/40923116/cp2020">40923116</a> | Site: <a href="https://40923116.github.io/cp2020">40923116</a> (組長)<br/> Repository: <a href="https://github.com/40923121/cp2020">40923121</a> | Site: <a href="https://40923121.github.io/cp2020">40923121</a><br/> Repository: <a href="https://github.com/40923129/cp2020">40923129</a> | Site: <a href="https://40923129.github.io/cp2020">40923129</a><br/> Repository: <a href="https://github.com/a40923137/cp2020">40923137</a> | Site: <a href="https://a40923137.github.io/cp2020">40923137</a><br/> Repository: <a href="https://github.com/40923140/cp2020">40923140</a> | Site: <a href="https://40923140.github.io/cp2020">40923140</a><br/> Repository: <a href="https://github.com/40923146/cp2020">40923146</a> | Site: <a href="https://40923146.github.io/cp2020">40923146</a><br/> Repository: <a href="https://github.com/40923147/cp2020">40923147</a> | Site: <a href="https://40923147.github.io/cp2020">40923147</a><br/> <br/><br/> ============================== <br/><br/> group 5:<br/><br/> Repository: <a href="https://github.com/40923105/cp2020">40923105</a> | Site: <a href="https://40923105.github.io/cp2020">40923105</a><br/> Repository: <a href="https://github.com/40923109/cp2020">40923109</a> | Site: <a href="https://40923109.github.io/cp2020">40923109</a><br/> Repository: <a href="https://github.com/40923110/cp2020">40923110</a> | Site: <a href="https://40923110.github.io/cp2020">40923110</a><br/> Repository: <a href="https://github.com/40923111/cp2020">40923111</a> | Site: <a href="https://40923111.github.io/cp2020">40923111</a><br/> Repository: <a href="https://github.com/40923122/cp2020">40923122</a> | Site: <a href="https://40923122.github.io/cp2020">40923122</a><br/> Repository: <a href="https://github.com/40923130/cp2020">40923130</a> | Site: <a href="https://40923130.github.io/cp2020">40923130</a><br/> Repository: <a href="https://github.com/40923134/cp2020">40923134</a> | Site: <a href="https://40923134.github.io/cp2020">40923134</a><br/> Repository: <a href="https://github.com/40923135/cp2020">40923135</a> | Site: <a href="https://40923135.github.io/cp2020">40923135</a> (組長)<br/> Repository: <a href="https://github.com/40923139/cp2020">40923139</a> | Site: <a href="https://40923139.github.io/cp2020">40923139</a><br/> Repository: <a href="https://github.com/40923143/cp2020">40923143</a> | Site: <a href="https://40923143.github.io/cp2020">40923143</a><br/> Repository: <a href="https://github.com/40923153/cp2020">40923153</a> | Site: <a href="https://40923153.github.io/cp2020">40923153</a></p>
<p></p>
<p>[['40923102', '40923103', '40923117', '40923119', '40923123', '40923127', '40923131', '40923133', '40923141', '40923144', '40923148', '40923149'], ['40623219', '40923101', '40923104', '40923107', '40923115', '40923124', '40923125', '40923136', '40923142', '40923151', '40923152'], ['40723154', '40828127', '40923106', '40923108', '40923118', '40923120', '40923126', '40923128', '40923138', '40923145', '40923150'], ['40727216', '40727219', '40923113', '40923114', '40923116', '40923121', '40923129', '40923137', '40923140', '40923146', '40923147'], ['40923105', '40923109', '40923110', '40923111', '40923122', '40923130', '40923134', '40923135', '40923139', '40923143', '40923153']]</p>
<p>1b</p>
<p>group 1:</p>
<p>分組倉儲: <a href="https://github.com/40923238/cp2020bg1">https://github.com/40923238/cp2020bg1</a></p>
<p>分組網站: <a href="https://40923238.github.io/cp2020bg1">https://40923238.github.io/cp2020bg1</a> <br/><br/> Repository: <a href="https://github.com/40823148/cp2020">40823148</a> | Site: <a href="https://40823148.github.io/cp2020">40823148</a><br/> Repository: <a href="https://github.com/40923203/cp2020">40923203</a> | Site: <a href="https://40923203.github.io/cp2020">40923203</a><br/> Repository: <a href="https://github.com/nfu40923208/cp2020">40923208</a> | Site: <a href="https://nfu40923208.github.io/cp2020">40923208</a><br/> Repository: <a href="https://github.com/40923209/cp2020">40923209</a> | Site: <a href="https://40923209.github.io/cp2020">40923209</a><br/> Repository: <a href="https://github.com/40923210/cp2020">40923210</a> | Site: <a href="https://40923210.github.io/cp2020">40923210</a><br/> Repository: <a href="https://github.com/40923223/cp2020">40923223</a> | Site: <a href="https://40923223.github.io/cp2020">40923223</a><br/> Repository: <a href="https://github.com/40923225/cp2020">40923225</a> | Site: <a href="https://40923225.github.io/cp2020">40923225</a><br/> Repository: <a href="https://github.com/40923230/cp2020">40923230</a> | Site: <a href="https://40923230.github.io/cp2020">40923230</a><br/> Repository: <a href="https://github.com/40923238/cp2020">40923238</a> | Site: <a href="https://40923238.github.io/cp2020">40923238</a> (組長)<br/> Repository: <a href="https://github.com/40923239/cp2020">40923239</a> | Site: <a href="https://40923239.github.io/cp2020">40923239</a><br/> Repository: <a href="https://github.com/40923244/cp2020">40923244</a> | Site: <a href="https://40923244.github.io/cp2020">40923244</a><br/> Repository: <a href="https://github.com/40923249/cp2020">40923249</a> | Site: <a href="https://40923249.github.io/cp2020">40923249</a><br/> <br/><br/> ============================== <br/><br/> group 2:</p>
<p>分組倉儲: <a href="https://github.com/40923240/cp2020bg2">https://github.com/40923240/cp2020bg2</a></p>
<p>分組網站: <a href="https://40923240.github.io/cp2020bg2">https://40923240.github.io/cp2020bg2</a> <br/><br/> Repository: <a href="https://github.com/40523148/cp2020">40523148</a> | Site: <a href="https://40523148.github.io/cp2020">40523148</a><br/> Repository: <a href="https://github.com/40923201/cp2020">40923201</a> | Site: <a href="https://40923201.github.io/cp2020">40923201</a><br/> Repository: <a href="https://github.com/40923202/cp2020">40923202</a> | Site: <a href="https://40923202.github.io/cp2020">40923202</a><br/> Repository: <a href="https://github.com/40923218/cp2020">40923218</a> | Site: <a href="https://40923218.github.io/cp2020">40923218</a><br/> Repository: <a href="https://github.com/409232194/cp2020">40923219</a> | Site: <a href="https://409232194.github.io/cp2020">40923219</a><br/> Repository: <a href="https://github.com/40923228/cp2020">40923228</a> | Site: <a href="https://40923228.github.io/cp2020">40923228</a><br/> Repository: <a href="https://github.com/40923231/cp2020">40923231</a> | Site: <a href="https://40923231.github.io/cp2020">40923231</a><br/> Repository: <a href="https://github.com/40923232/cp2020">40923232</a> | Site: <a href="https://40923232.github.io/cp2020">40923232</a><br/> Repository: <a href="https://github.com/40923240/cp2020">40923240</a> | Site: <a href="https://40923240.github.io/cp2020">40923240</a> (組長)<br/> Repository: <a href="https://github.com/40923247/cp2020">40923247</a> | Site: <a href="https://40923247.github.io/cp2020">40923247</a><br/> Repository: <a href="https://github.com/40923248/cp2020">40923248</a> | Site: <a href="https://40923248.github.io/cp2020">40923248</a><br/> Repository: <a href="https://github.com/40923250/cp2020">40923250</a> | Site: <a href="https://40923250.github.io/cp2020">40923250</a><br/> <br/><br/> ============================== <br/><br/> group 3:</p>
<p>分組倉儲: <a href="https://github.com/40823152/cp2020bg3">https://github.com/40823152/cp2020bg3</a></p>
<p>分組網站: <a href="https://40823152.github.io/cp2020bg3">https://40823152.github.io/cp2020bg3</a> <br/><br/> Repository: <a href="https://github.com/40823152/cp2020">40823152</a> | Site: <a href="https://40823152.github.io/cp2020">40823152</a> (組長)<br/> Repository: <a href="https://github.com/40923205/cp2020">40923205</a> | Site: <a href="https://40923205.github.io/cp2020">40923205</a><br/> Repository: <a href="https://github.com/40923212/cp2020">40923212</a> | Site: <a href="https://40923212.github.io/cp2020">40923212</a><br/> Repository: <a href="https://github.com/40923214/cp2020">40923214</a> | Site: <a href="https://40923214.github.io/cp2020">40923214</a><br/> Repository: <a href="https://github.com/40923217/cp2020">40923217</a> | Site: <a href="https://40923217.github.io/cp2020">40923217</a><br/> Repository: <a href="https://github.com/40923226/cp2020">40923226</a> | Site: <a href="https://40923226.github.io/cp2020">40923226</a><br/> Repository: <a href="https://github.com/40923236/cp2020">40923236</a> | Site: <a href="https://40923236.github.io/cp2020">40923236</a><br/> Repository: <a href="https://github.com/40923241/cp2020">40923241</a> | Site: <a href="https://40923241.github.io/cp2020">40923241</a><br/> Repository: <a href="https://github.com/40923242/cp2020">40923242</a> | Site: <a href="https://40923242.github.io/cp2020">40923242</a><br/> Repository: <a href="https://github.com/40923246/cp2020">40923246</a> | Site: <a href="https://40923246.github.io/cp2020">40923246</a><br/> Repository: <a href="https://github.com/40923251/cp2020">40923251</a> | Site: <a href="https://40923251.github.io/cp2020">40923251</a><br/> <br/><br/> ============================== <br/><br/> group 4:</p>
<p>分組倉儲: <a href="https://github.com/40923252/cp2020bg4">https://github.com/40923252/cp2020bg4</a></p>
<p>分組網站: <a href="https://40923252.github.io/cp2020bg4">https://40923252.github.io/cp2020bg4</a> <br/><br/> Repository: <a href="https://github.com/40723217/cp2020">40723217</a> | Site: <a href="https://40723217.github.io/cp2020">40723217</a><br/> Repository: <a href="https://github.com/40728238/cp2020">40728238</a> | Site: <a href="https://40728238.github.io/cp2020">40728238</a><br/> Repository: <a href="https://github.com/40923206-1/cp2020">40923206</a> | Site: <a href="https://40923206-1.github.io/cp2020">40923206</a><br/> Repository: <a href="https://github.com/40923216/cp2020">40923216</a> | Site: <a href="https://40923216.github.io/cp2020">40923216</a><br/> Repository: <a href="https://github.com/40923220/cp2020">40923220</a> | Site: <a href="https://40923220.github.io/cp2020">40923220</a><br/> Repository: <a href="https://github.com/40923227/cp2020">40923227</a> | Site: <a href="https://40923227.github.io/cp2020">40923227</a><br/> Repository: <a href="https://github.com/40923233/cp2020">40923233</a> | Site: <a href="https://40923233.github.io/cp2020">40923233</a><br/> Repository: <a href="https://github.com/40923237/cp2020">40923237</a> | Site: <a href="https://40923237.github.io/cp2020">40923237</a><br/> Repository: <a href="https://github.com/40923243/cp2020">40923243</a> | Site: <a href="https://40923243.github.io/cp2020">40923243</a><br/> Repository: <a href="https://github.com/40923252/cp2020">40923252</a> | Site: <a href="https://40923252.github.io/cp2020">40923252</a> (組長)<br/> Repository: <a href="https://github.com/40923253/cp2020">40923253</a> | Site: <a href="https://40923253.github.io/cp2020">40923253</a><br/> <br/><br/> ============================== <br/><br/> group 5:</p>
<p>分組倉儲: <a href="https://github.com/40923245/cp2020bg5">https://github.com/40923245/cp2020bg5</a></p>
<p>分組網站: <a href="https://40923245.github.io/cp2020bg5">https://40923245.github.io/cp2020bg5</a> <br/><br/> Repository: <a href="https://github.com/40523138/cp2020">40523138</a> | Site: <a href="https://40523138.github.io/cp2020">40523138</a><br/> Repository: <a href="https://github.com/40923204/cp2020">40923204</a> | Site: <a href="https://40923204.github.io/cp2020">40923204</a><br/> Repository: <a href="https://github.com/40923207/cp2020">40923207</a> | Site: <a href="https://40923207.github.io/cp2020">40923207</a><br/> Repository: <a href="https://github.com/40923211/cp2020">40923211</a> | Site: <a href="https://40923211.github.io/cp2020">40923211</a><br/> Repository: <a href="https://github.com/40923213/cp2020">40923213</a> | Site: <a href="https://40923213.github.io/cp2020">40923213</a><br/> Repository: <a href="https://github.com/40923221/cp2020">40923221</a> | Site: <a href="https://40923221.github.io/cp2020">40923221</a><br/> Repository: <a href="https://github.com/s40923224/cp2020">40923224</a> | Site: <a href="https://s40923224.github.io/cp2020">40923224</a><br/> Repository: <a href="https://github.com/40923229/cp2020">40923229</a> | Site: <a href="https://40923229.github.io/cp2020">40923229</a><br/> Repository: <a href="https://github.com/40923234/cp2020">40923234</a> | Site: <a href="https://40923234.github.io/cp2020">40923234</a><br/> Repository: <a href="https://github.com/40923235/cp2020">40923235</a> | Site: <a href="https://40923235.github.io/cp2020">40923235</a><br/> Repository: <a href="https://github.com/40923245/cp2020">40923245</a> | Site: <a href="https://40923245.github.io/cp2020">40923245</a> (組長)</p>
<p>unordered list:</p>
<p>[[40823148, 40923203, 40923208, 40923209, 40923210, 40923223, 40923225, 40923230, 40923238, 40923239, 40923244, 40923249], [40523148, 40923201, 40923202, 40923218, 40923219, 40923228, 40923231, 40923232, 40923240, 40923247, 40923248, 40923250], [40823152, 40923205, 40923212, 40923214, 40923217, 40923226, 40923236, 40923241, 40923242, 40923246, 40923251], [40723217, 40728238, 40923206, 40923216, 40923220, 40923227, 40923233, 40923237, 40923243, 40923252, 40923253], [40523138, 40923204, 40923207, 40923211, 40923213, 40923221, 40923224, 40923229, 40923234, 40923235, 40923245]]</p><h3>1a links</h3>
<p>repo: <a href="https://github.com/40623219/cp2020.git">40623219</a> site:<a href="https://40623219.github.io/cp2020">40623219</a><br/> repo: <a href="https://github.com/s40723154/cp2020.git">40723154</a> site:<a href="https://s40723154.github.io/cp2020">40723154</a><br/> repo: <a href="https://github.com/40828127/cp2020.git">40828127</a> site:<a href="https://40828127.github.io/cp2020">40828127</a><br/> repo: <a href="https://github.com/40923101/cp2020.git">40923101</a> site:<a href="https://40923101.github.io/cp2020">40923101</a><br/> repo: <a href="https://github.com/40923102/cp2020.git">40923102</a> site:<a href="https://40923102.github.io/cp2020">40923102</a><br/> repo: <a href="https://github.com/40923103/cp2020.git">40923103</a> site:<a href="https://40923103.github.io/cp2020">40923103</a><br/> repo: <a href="https://github.com/40923104/cp2020.git">40923104</a> site:<a href="https://40923104.github.io/cp2020">40923104</a><br/> repo: <a href="https://github.com/40923105/cp2020.git">40923105</a> site:<a href="https://40923105.github.io/cp2020">40923105</a><br/> repo: <a href="https://github.com/40923106/cp2020.git">40923106</a> site:<a href="https://40923106.github.io/cp2020">40923106</a><br/> repo: <a href="https://github.com/40923107/cp2020.git">40923107</a> site:<a href="https://40923107.github.io/cp2020">40923107</a><br/> repo: <a href="https://github.com/40923108/cp2020.git">40923108</a> site:<a href="https://40923108.github.io/cp2020">40923108</a><br/> repo: <a href="https://github.com/40923109/cp2020.git">40923109</a> site:<a href="https://40923109.github.io/cp2020">40923109</a><br/> repo: <a href="https://github.com/40923110/cp2020.git">40923110</a> site:<a href="https://40923110.github.io/cp2020">40923110</a><br/> repo: <a href="https://github.com/40923111/cp2020.git">40923111</a> site:<a href="https://40923111.github.io/cp2020">40923111</a><br/> repo: <a href="https://github.com/40923113/cp2020.git">40923113</a> site:<a href="https://40923113.github.io/cp2020">40923113</a><br/> repo: <a href="https://github.com/40923114/cp2020.git">40923114</a> site:<a href="https://40923114.github.io/cp2020">40923114</a><br/> repo: <a href="https://github.com/40923115/cp2020.git">40923115</a> site:<a href="https://40923115.github.io/cp2020">40923115</a><br/> repo: <a href="https://github.com/40923116/cp2020.git">40923116</a> site:<a href="https://40923116.github.io/cp2020">40923116</a><br/> repo: <a href="https://github.com/40923117/cp2020.git">40923117</a> site:<a href="https://40923117.github.io/cp2020">40923117</a><br/> repo: <a href="https://github.com/40923118/cp2020.git">40923118</a> site:<a href="https://40923118.github.io/cp2020">40923118</a><br/> repo: <a href="https://github.com/40923119/cp2020.git">40923119</a> site:<a href="https://40923119.github.io/cp2020">40923119</a><br/> repo: <a href="https://github.com/40923120/cp2020.git">40923120</a> site:<a href="https://40923120.github.io/cp2020">40923120</a><br/> repo: <a href="https://github.com/40923121/cp2020.git">40923121</a> site:<a href="https://40923121.github.io/cp2020">40923121</a><br/> repo: <a href="https://github.com/40923122/cp2020.git">40923122</a> site:<a href="https://40923122.github.io/cp2020">40923122</a><br/> repo: <a href="https://github.com/40923123/cp2020.git">40923123</a> site:<a href="https://40923123.github.io/cp2020">40923123</a><br/> repo: <a href="https://github.com/40923124/cp2020.git">40923124</a> site:<a href="https://40923124.github.io/cp2020">40923124</a><br/> repo: <a href="https://github.com/40923125/cp2020.git">40923125</a> site:<a href="https://40923125.github.io/cp2020">40923125</a><br/> repo: <a href="https://github.com/40923126-1/cp2020.git">40923126</a> site:<a href="https://40923126-1.github.io/cp2020">40923126</a><br/> repo: <a href="https://github.com/40923127/cp2020.git">40923127</a> site:<a href="https://40923127.github.io/cp2020">40923127</a><br/> repo: <a href="https://github.com/40923128/cp2020.git">40923128</a> site:<a href="https://40923128.github.io/cp2020">40923128</a><br/> repo: <a href="https://github.com/40923129/cp2020.git">40923129</a> site:<a href="https://40923129.github.io/cp2020">40923129</a><br/> repo: <a href="https://github.com/40923130/cp2020.git">40923130</a> site:<a href="https://40923130.github.io/cp2020">40923130</a><br/> repo: <a href="https://github.com/40923131/cp2020.git">40923131</a> site:<a href="https://40923131.github.io/cp2020">40923131</a><br/> repo: <a href="https://github.com/40923133/cp2020.git">40923133</a> site:<a href="https://40923133.github.io/cp2020">40923133</a><br/> repo: <a href="https://github.com/40923134/cp2020.git">40923134</a> site:<a href="https://40923134.github.io/cp2020">40923134</a><br/> repo: <a href="https://github.com/40923135/cp2020.git">40923135</a> site:<a href="https://40923135.github.io/cp2020">40923135</a><br/> repo: <a href="https://github.com/40923136/cp2020.git">40923136</a> site:<a href="https://40923136.github.io/cp2020">40923136</a><br/> repo: <a href="https://github.com/a40923137/cp2020.git">40923137</a> site:<a href="https://a40923137.github.io/cp2020">40923137</a><br/> repo: <a href="https://github.com/40923138/cp2020.git">40923138</a> site:<a href="https://40923138.github.io/cp2020">40923138</a><br/> repo: <a href="https://github.com/40923139/cp2020.git">40923139</a> site:<a href="https://40923139.github.io/cp2020">40923139</a><br/> repo: <a href="https://github.com/40923140/cp2020.git">40923140</a> site:<a href="https://40923140.github.io/cp2020">40923140</a><br/> repo: <a href="https://github.com/40923141/cp2020.git">40923141</a> site:<a href="https://40923141.github.io/cp2020">40923141</a><br/> repo: <a href="https://github.com/40923142/cp2020.git">40923142</a> site:<a href="https://40923142.github.io/cp2020">40923142</a><br/> repo: <a href="https://github.com/40923143/cp2020.git">40923143</a> site:<a href="https://40923143.github.io/cp2020">40923143</a><br/> repo: <a href="https://github.com/40923144/cp2020.git">40923144</a> site:<a href="https://40923144.github.io/cp2020">40923144</a><br/> repo: <a href="https://github.com/40923145/cp2020.git">40923145</a> site:<a href="https://40923145.github.io/cp2020">40923145</a><br/> repo: <a href="https://github.com/40923146/cp2020.git">40923146</a> site:<a href="https://40923146.github.io/cp2020">40923146</a><br/> repo: <a href="https://github.com/40923147/cp2020.git">40923147</a> site:<a href="https://40923147.github.io/cp2020">40923147</a><br/> repo: <a href="https://github.com/40923148/cp2020.git">40923148</a> site:<a href="https://40923148.github.io/cp2020">40923148</a><br/> repo: <a href="https://github.com/40923149/cp2020.git">40923149</a> site:<a href="https://40923149.github.io/cp2020">40923149</a><br/> repo: <a href="https://github.com/40923150/cp2020.git">40923150</a> site:<a href="https://40923150.github.io/cp2020">40923150</a><br/> repo: <a href="https://github.com/40923151/cp2020.git">40923151</a> site:<a href="https://40923151.github.io/cp2020">40923151</a><br/> repo: <a href="https://github.com/40923152/cp2020.git">40923152</a> site:<a href="https://40923152.github.io/cp2020">40923152</a><br/> repo: <a href="https://github.com/40923153/cp2020.git">40923153</a> site:<a href="https://40923153.github.io/cp2020">40923153</a></p><h3>1b links</h3>
<p>repo: <a href="https://github.com/40523138/cp2020.git">40523138</a> site:<a href="https://40523138.github.io/cp2020">40523138</a><br/> repo: <a href="https://github.com/40523148/cp2020.git">40523148</a> site:<a href="https://40523148.github.io/cp2020">40523148</a><br/> repo: <a href="https://github.com/40723217/cp2020.git">40723217</a> site:<a href="https://40723217.github.io/cp2020">40723217</a><br/> repo: <a href="https://github.com/40728238/cp2020.git">40728238</a> site:<a href="https://40728238.github.io/cp2020">40728238</a><br/> repo: <a href="https://github.com/40823148/cp2020.git">40823148</a> site:<a href="https://40823148.github.io/cp2020">40823148</a><br/> repo: <a href="https://github.com/40823152/cp2020.git">40823152</a> site:<a href="https://40823152.github.io/cp2020">40823152</a><br/> repo: <a href="https://github.com/40923201/cp2020.git">40923201</a> site:<a href="https://40923201.github.io/cp2020">40923201</a><br/> repo: <a href="https://github.com/40923202/cp2020.git">40923202</a> site:<a href="https://40923202.github.io/cp2020">40923202</a><br/> repo: <a href="https://github.com/40923203/cp2020.git">40923203</a> site:<a href="https://40923203.github.io/cp2020">40923203</a><br/> repo: <a href="https://github.com/40923204/cp2020.git">40923204</a> site:<a href="https://40923204.github.io/cp2020">40923204</a><br/> repo: <a href="https://github.com/40923205/cp2020.git">40923205</a> site:<a href="https://40923205.github.io/cp2020">40923205</a><br/> repo: <a href="https://github.com/40923206-1/cp2020.git">40923206</a> site:<a href="https://40923206-1.github.io/cp2020">40923206</a><br/> repo: <a href="https://github.com/40923207/cp2020.git">40923207</a> site:<a href="https://40923207.github.io/cp2020">40923207</a><br/> repo: <a href="https://github.com/nfu40923208/cp2020.git">40923208</a> site:<a href="https://nfu40923208.github.io/cp2020">40923208</a><br/> repo: <a href="https://github.com/40923209/cp2020.git">40923209</a> site:<a href="https://40923209.github.io/cp2020">40923209</a><br/> repo: <a href="https://github.com/40923210/cp2020.git">40923210</a> site:<a href="https://40923210.github.io/cp2020">40923210</a><br/> repo: <a href="https://github.com/40923211/cp2020.git">40923211</a> site:<a href="https://40923211.github.io/cp2020">40923211</a><br/> repo: <a href="https://github.com/40923212/cp2020.git">40923212</a> site:<a href="https://40923212.github.io/cp2020">40923212</a><br/> repo: <a href="https://github.com/40923213/cp2020.git">40923213</a> site:<a href="https://40923213.github.io/cp2020">40923213</a><br/> repo: <a href="https://github.com/40923214/cp2020.git">40923214</a> site:<a href="https://40923214.github.io/cp2020">40923214</a><br/> repo: <a href="https://github.com/40923216/cp2020.git">40923216</a> site:<a href="https://40923216.github.io/cp2020">40923216</a><br/> repo: <a href="https://github.com/40923217/cp2020.git">40923217</a> site:<a href="https://40923217.github.io/cp2020">40923217</a><br/> repo: <a href="https://github.com/40923218/cp2020.git">40923218</a> site:<a href="https://40923218.github.io/cp2020">40923218</a><br/> repo: <a href="https://github.com/409232194/cp2020.git">40923219</a> site:<a href="https://409232194.github.io/cp2020">40923219</a><br/> repo: <a href="https://github.com/40923220/cp2020.git">40923220</a> site:<a href="https://40923220.github.io/cp2020">40923220</a><br/> repo: <a href="https://github.com/40923221/cp2020.git">40923221</a> site:<a href="https://40923221.github.io/cp2020">40923221</a><br/> repo: <a href="https://github.com/40923223/cp2020.git">40923223</a> site:<a href="https://40923223.github.io/cp2020">40923223</a><br/> repo: <a href="https://github.com/s40923224/cp2020.git">40923224</a> site:<a href="https://s40923224.github.io/cp2020">40923224</a><br/> repo: <a href="https://github.com/40923225/cp2020.git">40923225</a> site:<a href="https://40923225.github.io/cp2020">40923225</a><br/> repo: <a href="https://github.com/40923226/cp2020.git">40923226</a> site:<a href="https://40923226.github.io/cp2020">40923226</a><br/> repo: <a href="https://github.com/40923227/cp2020.git">40923227</a> site:<a href="https://40923227.github.io/cp2020">40923227</a><br/> repo: <a href="https://github.com/40923228/cp2020.git">40923228</a> site:<a href="https://40923228.github.io/cp2020">40923228</a><br/> repo: <a href="https://github.com/40923229/cp2020.git">40923229</a> site:<a href="https://40923229.github.io/cp2020">40923229</a><br/> repo: <a href="https://github.com/40923230/cp2020.git">40923230</a> site:<a href="https://40923230.github.io/cp2020">40923230</a><br/> repo: <a href="https://github.com/40923231/cp2020.git">40923231</a> site:<a href="https://40923231.github.io/cp2020">40923231</a><br/> repo: <a href="https://github.com/40923232/cp2020.git">40923232</a> site:<a href="https://40923232.github.io/cp2020">40923232</a><br/> repo: <a href="https://github.com/40923233/cp2020.git">40923233</a> site:<a href="https://40923233.github.io/cp2020">40923233</a><br/> repo: <a href="https://github.com/40923234/cp2020.git">40923234</a> site:<a href="https://40923234.github.io/cp2020">40923234</a><br/> repo: <a href="https://github.com/40923235/cp2020.git">40923235</a> site:<a href="https://40923235.github.io/cp2020">40923235</a><br/> repo: <a href="https://github.com/40923236/cp2020.git">40923236</a> site:<a href="https://40923236.github.io/cp2020">40923236</a><br/> repo: <a href="https://github.com/40923237/cp2020.git">40923237</a> site:<a href="https://40923237.github.io/cp2020">40923237</a><br/> repo: <a href="https://github.com/40923238/cp2020.git">40923238</a> site:<a href="https://40923238.github.io/cp2020">40923238</a><br/> repo: <a href="https://github.com/40923239/cp2020.git">40923239</a> site:<a href="https://40923239.github.io/cp2020">40923239</a><br/> repo: <a href="https://github.com/40923240/cp2020.git">40923240</a> site:<a href="https://40923240.github.io/cp2020">40923240</a><br/> repo: <a href="https://github.com/40923241/cp2020.git">40923241</a> site:<a href="https://40923241.github.io/cp2020">40923241</a><br/> repo: <a href="https://github.com/40923242/cp2020.git">40923242</a> site:<a href="https://40923242.github.io/cp2020">40923242</a><br/> repo: <a href="https://github.com/40923243/cp2020.git">40923243</a> site:<a href="https://40923243.github.io/cp2020">40923243</a><br/> repo: <a href="https://github.com/40923244/cp2020.git">40923244</a> site:<a href="https://40923244.github.io/cp2020">40923244</a><br/> repo: <a href="https://github.com/40923245/cp2020.git">40923245</a> site:<a href="https://40923245.github.io/cp2020">40923245</a><br/> repo: <a href="https://github.com/40923246/cp2020.git">40923246</a> site:<a href="https://40923246.github.io/cp2020">40923246</a><br/> repo: <a href="https://github.com/40923247/cp2020.git">40923247</a> site:<a href="https://40923247.github.io/cp2020">40923247</a><br/> repo: <a href="https://github.com/40923248/cp2020.git">40923248</a> site:<a href="https://40923248.github.io/cp2020">40923248</a><br/> repo: <a href="https://github.com/40923249/cp2020.git">40923249</a> site:<a href="https://40923249.github.io/cp2020">40923249</a><br/> repo: <a href="https://github.com/40923250/cp2020.git">40923250</a> site:<a href="https://40923250.github.io/cp2020">40923250</a><br/> repo: <a href="https://github.com/40923251/cp2020.git">40923251</a> site:<a href="https://40923251.github.io/cp2020">40923251</a><br/> repo: <a href="https://github.com/40923252/cp2020.git">40923252</a> site:<a href="https://40923252.github.io/cp2020">40923252</a><br/> repo: <a href="https://github.com/40923253/cp2020.git">40923253</a> site:<a href="https://40923253.github.io/cp2020">40923253</a></p><h3>HW1</h3>
<h4>有關作業一:</h4>
<p style="padding-left: 30px;">電腦能做什麼? 在充分了解與電腦硬體及軟體相關英文術語的涵義與功能之後, 就能體會現代人的知識學習已經離不開電腦與網路, 因為它們已經無所不在.</p>
<p style="padding-left: 30px;">電腦與網路結合下的科技社會, 工程師扮演著透過創新設計建立新產品與服務的重要角色, 學會如何編寫程式與電腦溝通, 並透過網路通訊進行協同設計應該是工程師必備的專業技能.</p>
<p style="padding-left: 30px;">各組員進行作業一之前, 必須先檢查是否已經有一個 USB 3.0 規格以上 64 GB 的隨身碟, 是否已經學會如何利用 <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a> 管理自己的網站內容, 各組是否已經學會使用 meet 與 Youtube + OBS 進行每週的分組線上會議?</p>
<p>作業一 (Due. 各班第八週上課之前)：</p>
<p style="padding-left: 30px;">請各組員至 <a href="https://oli.cmu.edu/product-category/computer-science-programming-indep/">https://oli.cmu.edu/product-category/computer-science-programming-indep/</a> 以 @gm 電子郵箱登記帳號後, 分別閱讀 PC Hardware Unit 1-5 與<a href="https://oli.cmu.edu/product-category/computer-science-programming-indep/">https://oli.cmu.edu/product-category/computer-science-programming-indep/</a> 教材內容, 各組員將所分配到的章節內容以英文及中文對照的方式, 配合電腦輔助設計室中的電腦與網路配置或操作心得, 將圖文與參考資料放入個人 cp2020 網頁, 之後再設法整合至各組分組網頁中 (由組長負責建立 cp2020ag1, a 為甲班, b 為乙班, g1 代表第一組).</p>
<p>PC Hardware</p>
<p style="padding-left: 30px;">UNIT 1: Succeeding in PC Hardware <br/>UNIT 2: Hardware Basics <br/> PCH 1: The Basics<br/> PCH 2: Procedures and Safety<br/> PCH 3: Customer Relations<br/>UNIT 3: Hardware Components <br/> PCH 4: Cases, Form Factors, and Power Supplies<br/> PCH 5: Motherboards, Expansion Buses, and Processors<br/> PCH 6: Memory and BIOS<br/> PCH 7: Expansion Cards, Audio, Video, and Storage<br/> PCH 8: Cooling<br/>UNIT 4: Networking and Internet <br/> PCH 9: Networking Overview<br/> PCH 10: Networking Hardware<br/> PCH 11: Networking Media<br/> PCH 12: Ethernet Standards<br/> PCH 13: IPv4 and IPv6 Addresses<br/> PCH 14: TCP and UDP Protocols<br/> PCH 15: Introduction to Wireless Networking<br/> PCH 16: Internet Connectivity<br/>UNIT 5: Notebooks and Laptops <br/> PCH 17: Notebook Features and Components<br/> PCH 18: Laptop and Notebook Component Replacement<br/> PCH 19: Notebook Power and Physical Security</p>
<p>PC Software</p>
<p style="padding-left: 30px;">UNIT 1: Succeeding in PC Software <br/>UNIT 2: Windows Operating Systems <br/> PCS 1: Windows Operating System<br/> PCS 2: Installing Windows<br/> PCS 3: Operating System Comparison<br/> PCS 4: Other Operating Systems<br/>UNIT 3: Software Utilities <br/> PCS 5: The Command Line<br/> PCS 6: Task Manager<br/> PCS 7: Disk Management<br/> PCS 8: Introduction to Control Panel Utilities<br/> PCS 9: Windows 10 Control Panel Utilities<br/>UNIT 4: Networking, Maintenance, and Security <br/> PCS 10: Networking Setup<br/> PCS 11: Preventative Maintenance<br/> PCS 12: Security Settings<br/> PCS 13: Virtualization<br/> PCS 14: Prevention Methods<br/> PCS 15: Threats and Practices<br/> PCS 16: Data Destruction and Disposal<br/> PCS 17: Wireless Networks<br/> PCS 18: Wired Network Security<br/> PCS 19: Malware<br/>UNIT 5: Mobile Systems <br/> PCS 20: Mobile Operating Systems<br/> PCS 21: Mobile Connectivity and Security<br/> PCS 22: Mobile Hardware and Synchronization<br/>UNIT 6: Troubleshooting <br/> PCS 23: Application of Troubleshooting Theory<br/> PCS 24: Troubleshooting Wired Networks<br/> PCS 25: Troubleshooting Wireless Networks<br/> PCS 26: Troubleshooting Operating Systems<br/> PCS 27: Troubleshooting Security Issues<br/>UNIT 7: Capstone <br/> PCS 28: PC Software Capstone</p>
<p></p>
<p style="padding-left: 30px;"></p><h2>W4-W9</h2>
<p>Python 基本語法與功能</p>
<p>參考電子書: <a href="https://drive.google.com/file/d/1tYFRytEEkPuuUTE4O9Q6AURaHcU598BV/view?usp=sharing">Python for everyone.py</a></p>
<p style="padding-left: 30px;"><a href="https://books.trinket.io/pfe/">https://books.trinket.io/pfe/</a> </p>
<p>線上 Python 教材: <a href="https://github.com/mdecourse/course-reader">https://github.com/mdecourse/course-reader</a> </p>
<p>利用 <a href="https://www.debugmode.com/wink/">Wink3</a> 建立電腦操作流程導引影片. 下載 <a href="https://drive.google.com/file/d/1JI4i_gtMiMbALBZhiGVqqe9VM4cHt8U7/view?usp=sharing">Wink3.7z</a></p>
<p>Python for everyone 章節:</p>
<p style="padding-left: 30px;">1 Why should you learn to write programs? 1<br/>1.1 Creativity and motivation . . . . . . . . . . . . . . . . . . . . . . . 2<br/>1.2 Computer hardware architecture . . . . . . . . . . . . . . . . . . . 3<br/>1.3 Understanding programming . . . . . . . . . . . . . . . . . . . . . 4<br/>1.4 Words and sentences . . . . . . . . . . . . . . . . . . . . . . . . . . 5<br/>1.5 Conversing with Python . . . . . . . . . . . . . . . . . . . . . . . . 6<br/>1.6 Terminology: Interpreter and compiler . . . . . . . . . . . . . . . . 8<br/>1.7 Writing a program . . . . . . . . . . . . . . . . . . . . . . . . . . . 10<br/>1.8 What is a program? . . . . . . . . . . . . . . . . . . . . . . . . . . 10<br/>1.9 The building blocks of programs . . . . . . . . . . . . . . . . . . . . 11<br/>1.10 What could possibly go wrong? . . . . . . . . . . . . . . . . . . . . 12<br/>1.11 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14<br/>1.12 The learning journey . . . . . . . . . . . . . . . . . . . . . . . . . . 15<br/>1.13 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15<br/>1.14 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16<br/>2 Variables, expressions, and statements 19<br/>2.1 Values and types . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19<br/>2.2 Variables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20<br/>2.3 Variable names and keywords . . . . . . . . . . . . . . . . . . . . . . 21<br/>2.4 Statements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21<br/>2.5 Operators and operands . . . . . . . . . . . . . . . . . . . . . . . . 22<br/>2.6 Expressions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23<br/>2.7 Order of operations . . . . . . . . . . . . . . . . . . . . . . . . . . 23<br/>2.8 Modulus operator . . . . . . . . . . . . . . . . . . . . . . . . . . . 24<br/>2.9 String operations . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24<br/>v<br/>vi CONTENTS<br/>2.10 Asking the user for input . . . . . . . . . . . . . . . . . . . . . . . 25<br/>2.11 Comments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26<br/>2.12 Choosing mnemonic variable names . . . . . . . . . . . . . . . . . 27<br/>2.13 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28<br/>2.14 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29<br/>2.15 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30<br/>3 Conditional execution 31<br/>3.1 Boolean expressions . . . . . . . . . . . . . . . . . . . . . . . . . . . 31<br/>3.2 Logical operators . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32<br/>3.3 Conditional execution . . . . . . . . . . . . . . . . . . . . . . . . . 32<br/>3.4 Alternative execution . . . . . . . . . . . . . . . . . . . . . . . . . 33<br/>3.5 Chained conditionals . . . . . . . . . . . . . . . . . . . . . . . . . . 34<br/>3.6 Nested conditionals . . . . . . . . . . . . . . . . . . . . . . . . . . 35<br/>3.7 Catching exceptions using try and except . . . . . . . . . . . . . . 36<br/>3.8 Short-circuit evaluation of logical expressions . . . . . . . . . . . . 38<br/>3.9 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39<br/>3.10 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39<br/>3.11 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40<br/>4 Functions 43<br/>4.1 Function calls . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43<br/>4.2 Built-in functions . . . . . . . . . . . . . . . . . . . . . . . . . . . 43<br/>4.3 Type conversion functions . . . . . . . . . . . . . . . . . . . . . . . 44<br/>4.4 Math functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45<br/>4.5 Random numbers . . . . . . . . . . . . . . . . . . . . . . . . . . . 46<br/>4.6 Adding new functions . . . . . . . . . . . . . . . . . . . . . . . . . 47<br/>4.7 Deﬁnitions and uses . . . . . . . . . . . . . . . . . . . . . . . . . . 48<br/>4.8 Flow of execution . . . . . . . . . . . . . . . . . . . . . . . . . . . 49<br/>4.9 Parameters and arguments . . . . . . . . . . . . . . . . . . . . . . 49<br/>4.10 Fruitful functions and void functions . . . . . . . . . . . . . . . . . . 51<br/>4.11 Why functions? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52<br/>4.12 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52<br/>4.13 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53<br/>4.14 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54<br/>CONTENTS vii<br/>5 Iteration 57<br/>5.1 Updating variables . . . . . . . . . . . . . . . . . . . . . . . . . . . 57<br/>5.2 The while statement . . . . . . . . . . . . . . . . . . . . . . . . . 57<br/>5.3 Inﬁnite loops . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58<br/>5.4 Finishing iterations with continue . . . . . . . . . . . . . . . . . . 59<br/>5.5 Deﬁnite loops using for . . . . . . . . . . . . . . . . . . . . . . . . 60<br/>5.6 Loop patterns . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61<br/>5.6.1 Counting and summing loops . . . . . . . . . . . . . . . . . . 61<br/>5.6.2 Maximum and minimum loops . . . . . . . . . . . . . . . . 62<br/>5.7 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64<br/>5.8 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64<br/>5.9 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64<br/>6 Strings 67<br/>6.1 A string is a sequence . . . . . . . . . . . . . . . . . . . . . . . . . 67<br/>6.2 Getting the length of a string using len . . . . . . . . . . . . . . . 68<br/>6.3 Traversal through a string with a loop . . . . . . . . . . . . . . . . 68<br/>6.4 String slices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69<br/>6.5 Strings are immutable . . . . . . . . . . . . . . . . . . . . . . . . . 70<br/>6.6 Looping and counting . . . . . . . . . . . . . . . . . . . . . . . . . 70<br/>6.7 The in operator . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71<br/>6.8 String comparison . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71<br/>6.9 String methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71<br/>6.10 Parsing strings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74<br/>6.11 Format operator . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74<br/>6.12 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75<br/>6.13 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76<br/>6.14 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77<br/>7 Files 79<br/>7.1 Persistence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79<br/>7.2 Opening ﬁles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80<br/>7.3 Text ﬁles and lines . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81<br/>7.4 Reading ﬁles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82<br/>7.5 Searching through a ﬁle . . . . . . . . . . . . . . . . . . . . . . . . 83<br/>viii CONTENTS<br/>7.6 Letting the user choose the ﬁle name . . . . . . . . . . . . . . . . . 85<br/>7.7 Using try, except, and open . . . . . . . . . . . . . . . . . . . . 86<br/>7.8 Writing ﬁles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87<br/>7.9 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88<br/>7.10 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89<br/>7.11 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89<br/>8 Lists 91<br/>8.1 A list is a sequence . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91<br/>8.2 Lists are mutable . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92<br/>8.3 Traversing a list . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92<br/>8.4 List operations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93<br/>8.5 List slices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94<br/>8.6 List methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94<br/>8.7 Deleting elements . . . . . . . . . . . . . . . . . . . . . . . . . . . 95<br/>8.8 Lists and functions . . . . . . . . . . . . . . . . . . . . . . . . . . . 96<br/>8.9 Lists and strings . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97<br/>8.10 Parsing lines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 98<br/>8.11 Objects and values . . . . . . . . . . . . . . . . . . . . . . . . . . . 99<br/>8.12 Aliasing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100<br/>8.13 List arguments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100<br/>8.14 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102<br/>8.15 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105<br/>8.16 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105<br/>9 Dictionaries 107<br/>9.1 Dictionary as a set of counters . . . . . . . . . . . . . . . . . . . . 109<br/>9.2 Dictionaries and ﬁles . . . . . . . . . . . . . . . . . . . . . . . . . . 110<br/>9.3 Looping and dictionaries . . . . . . . . . . . . . . . . . . . . . . . . 111<br/>9.4 Advanced text parsing . . . . . . . . . . . . . . . . . . . . . . . . . 113<br/>9.5 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114<br/>9.6 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115<br/>9.7 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115<br/>CONTENTS ix<br/>10 Tuples 117<br/>10.1 Tuples are immutable . . . . . . . . . . . . . . . . . . . . . . . . . 117<br/>10.2 Comparing tuples . . . . . . . . . . . . . . . . . . . . . . . . . . . 118<br/>10.3 Tuple assignment . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120<br/>10.4 Dictionaries and tuples . . . . . . . . . . . . . . . . . . . . . . . . . 121<br/>10.5 Multiple assignment with dictionaries . . . . . . . . . . . . . . . . 122<br/>10.6 The most common words . . . . . . . . . . . . . . . . . . . . . . . 123<br/>10.7 Using tuples as keys in dictionaries . . . . . . . . . . . . . . . . . . 124<br/>10.8 Sequences: strings, lists, and tuples - Oh My! . . . . . . . . . . . . 124<br/>10.9 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125<br/>10.10 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125<br/>10.11 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 126<br/>11 Regular expressions 127<br/>11.1 Character matching in regular expressions . . . . . . . . . . . . . . 128<br/>11.2 Extracting data using regular expressions . . . . . . . . . . . . . . 129<br/>11.3 Combining searching and extracting . . . . . . . . . . . . . . . . . 132<br/>11.4 Escape character . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136<br/>11.5 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136<br/>11.6 Bonus section for Unix / Linux users . . . . . . . . . . . . . . . . . 137<br/>11.7 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138<br/>11.8 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138<br/>11.9 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139<br/>12 Networked programs 141<br/>12.1 Hypertext Transfer Protocol - HTTP . . . . . . . . . . . . . . . . . 141<br/>12.2 The world’s simplest web browser . . . . . . . . . . . . . . . . . . 142<br/>12.3 Retrieving an image over HTTP . . . . . . . . . . . . . . . . . . . 144<br/>12.4 Retrieving web pages with urllib . . . . . . . . . . . . . . . . . . 146<br/>12.5 Reading binary ﬁles using urllib . . . . . . . . . . . . . . . . . . 147<br/>12.6 Parsing HTML and scraping the web . . . . . . . . . . . . . . . . 148<br/>12.7 Parsing HTML using regular expressions . . . . . . . . . . . . . . 148<br/>12.8 Parsing HTML using BeautifulSoup . . . . . . . . . . . . . . . . . 150<br/>12.9 Bonus section for Unix / Linux users . . . . . . . . . . . . . . . . . 153<br/>12.10 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153<br/>12.11 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 154<br/>x CONTENTS<br/>13 Using Web Services 155<br/>13.1 eXtensible Markup Language - XML . . . . . . . . . . . . . . . . . 155<br/>13.2 Parsing XML . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156<br/>13.3 Looping through nodes . . . . . . . . . . . . . . . . . . . . . . . . 157<br/>13.4 JavaScript Object Notation - JSON . . . . . . . . . . . . . . . . . 158<br/>13.5 Parsing JSON . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 159<br/>13.6 Application Programming Interfaces . . . . . . . . . . . . . . . . . 160<br/>13.7 Security and API usage . . . . . . . . . . . . . . . . . . . . . . . . . 161<br/>13.8 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 162<br/>13.9 Application 1: Google geocoding web service . . . . . . . . . . . . 162<br/>13.10 Application 2: Twitter . . . . . . . . . . . . . . . . . . . . . . . . . 166<br/>14 Object-oriented programming 171<br/>14.1 Managing larger programs . . . . . . . . . . . . . . . . . . . . . . . . 171<br/>14.2 Getting started . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 172<br/>14.3 Using objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 172<br/>14.4 Starting with programs . . . . . . . . . . . . . . . . . . . . . . . . 173<br/>14.5 Subdividing a problem . . . . . . . . . . . . . . . . . . . . . . . . . 175<br/>14.6 Our ﬁrst Python object . . . . . . . . . . . . . . . . . . . . . . . . 175<br/>14.7 Classes as types . . . . . . . . . . . . . . . . . . . . . . . . . . . . 178<br/>14.8 Object lifecycle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 179<br/>14.9 Multiple instances . . . . . . . . . . . . . . . . . . . . . . . . . . . 180<br/>14.10 Inheritance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 181<br/>14.11 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 182<br/>14.12 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 183<br/>15 Using Databases and SQL 185<br/>15.1 What is a database? . . . . . . . . . . . . . . . . . . . . . . . . . . 185<br/>15.2 Database concepts . . . . . . . . . . . . . . . . . . . . . . . . . . . 185<br/>15.3 Database Browser for SQLite . . . . . . . . . . . . . . . . . . . . . 186<br/>15.4 Creating a database table . . . . . . . . . . . . . . . . . . . . . . . 186<br/>15.5 Structured Query Language summary . . . . . . . . . . . . . . . . 189<br/>15.6 Spidering Twitter using a database . . . . . . . . . . . . . . . . . . . 191<br/>15.7 Basic data modeling . . . . . . . . . . . . . . . . . . . . . . . . . . 196<br/>15.8 Programming with multiple tables . . . . . . . . . . . . . . . . . . 197<br/>CONTENTS xi<br/>15.8.1 Constraints in database tables . . . . . . . . . . . . . . . . 200<br/>15.8.2 Retrieve and/or insert a record . . . . . . . . . . . . . . . . . 201<br/>15.8.3 Storing the friend relationship . . . . . . . . . . . . . . . . . 202<br/>15.9 Three kinds of keys . . . . . . . . . . . . . . . . . . . . . . . . . . 203<br/>15.10 Using JOIN to retrieve data . . . . . . . . . . . . . . . . . . . . . . 204<br/>15.11 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 206<br/>15.12 Debugging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 207<br/>15.13 Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 207<br/>16 Visualizing data 209<br/>16.1 Building a Google map from geocoded data . . . . . . . . . . . . . 209<br/>16.2 Visualizing networks and interconnections . . . . . . . . . . . . . . . 211<br/>16.3 Visualizing mail data . . . . . . . . . . . . . . . . . . . . . . . . . 214<br/>A Contributions 221<br/>A.1 Contributor List for Python for Everybody . . . . . . . . . . . . . . 221<br/>A.2 Contributor List for Python for Informatics . . . . . . . . . . . . . . 221<br/>A.3 Preface for “Think Python” . . . . . . . . . . . . . . . . . . . . . . . 221<br/>A.3.1 The strange history of “Think Python” . . . . . . . . . . . . 221<br/>A.3.2 Acknowledgements for “Think Python” . . . . . . . . . . . 223<br/>A.4 Contributor List for “Think Python” . . . . . . . . . . . . . . . . . 223</p>
<p>CS 41: Hap.py Code</p>
<p style="padding-left: 30px;">Table of Contents</p>
<ol>
<li>Python Basics</li>
<li>Data Structures</li>
<li>Object-Oriented Python</li>
<li>Functions</li>
<li>Functional Programming</li>
<li>Python and the Web</li>
<li>Reading Python Documentation</li>
</ol><h3>W6</h3>
<p><img alt="" height="418" src="/images/cpb_w6_gitpull.png" width="800"/></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/QRydepk8TB0" width="560"></iframe></p>
<p>根據 <a href="https://github.com/tinymce/tinymce/issues/3611">https://github.com/tinymce/tinymce/issues/3611</a> </p>
<p>因為目前 cmsimde 所使用的 tinymce 使用 "4.3.13" 版, 必須更新為 4.5 或 4.6 之後, 才能避開以下的錯誤:</p>
<p><img alt="" class="add_border" height="416" src="/images/cpb_w6_cmsimde_bugs.png" width="800"/></p>
<p><a href="https://www.kaggle.com/mdecourse/2020bw6">https://www.kaggle.com/mdecourse/2020bw6</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
    定義用來取各班註冊資料的函式
    各班在 1091 課號
cp
1a 1091/0762
1b 1091/0776
cad
2a 1091/0788
2b 1091/0801
'''

# 透過 urllib.request 模組中的 urlopen() 開啟網路 url 連結資料
import urllib.request  # the lib that handles the url stuff
# 定義一個輸入學期與課號,就能夠輸出各課程修課人員數列的函式

def getRegList(semester, courseno):
    # 因為課號可能以 0 開頭, 因此採字串型別輸入, 為了一致, 輸入變數一律採字串輸入
    target_url = "https://nfulist.herokuapp.com/?semester=" + semester + "&amp;courseno=" + courseno
    regList = []
    for line in urllib.request.urlopen(target_url):
        # 由於 urlopen() 取下的網際資料為 binary 格式, 可以透過 decode() 解碼為 ASCII 資料
        regList.append(line.decode('utf-8').rstrip())
    # 此一函式利用 return 將資料傳回
    return regList
    
'''
    根據學號與 github 帳號建立 dic 資料數列
'''
#import urllib.request  # the lib that handles the url stuff
# 利用 ethercalc 取得使用者 github 帳號, 理論上可以建立網際表單, 讓使用者以從表單輸入帳號資料
target_url = "http://mde.tw/cp2020/downloads/hw2/cpb_github_account.txt"
cp1b = []
for line in urllib.request.urlopen(target_url):
    cp1bTemp = line.decode('utf-8').rstrip()
    #print(line.decode('utf-8'), end = "") #utf-8 or iso8859-1 or whatever the page encoding scheme is
    cp1b.append(cp1bTemp.split('\t'))
#print(cp1b)
# drop the first element of cp1b and convert into dictionary
cp1bAccount = dict(cp1b[1:])
# check into the cp1bAccount dict for "40923208"
print(cp1bAccount["40923208"])

'''
根據各班註冊名單與 github 帳號 dict, 建立正確的學員倉儲與網頁連結
'''

# 特別注意: 單行註解的 # 不可使用中文全形字元
# 直接利用前面已經定義的 getRegList() 函式取得 cp1b 選課學員名單
# 以下處理 cp1a W3 頁面超文件資料
cp1bReg = getRegList("1091", "0776")
print("cp1bReg is:", cp1bReg)
# cp1bGroup 在前面已經定義完成, 代表第三週所完成的分組資料
#print("註冊名單: ", cp1bReg)
#print("分組名單: ", cp1bGroup)
# 以下還需要取得 cp1bAccount
# classTitle = 'cp2020'
# 以下設法根據註冊名單與分組名單建立倉儲與網頁超文件.
# 倉儲: https://github.com/ + account + / + classTitle 
# 網頁: https:// + account + .github.io/ + classTitle
# 必須進行學員是否選課檢查, 否則無法剔除已經退選的學員
# 利用 dropStud 收集已經退選名單
dropStud = []
# 分組二維數列
cp1bGroup = [[40823148, 40923203, 40923208, 40923209, 40923210, 40923223, 40923225, 40923230, 40923238, 40923239, 40923244, 40923249], [40523148, 40923201, 40923202, 40923218, 40923219, 40923228, 40923231, 40923232, 40923240, 40923247, 40923248, 40923250], [40823152, 40923205, 40923212, 40923214, 40923217, 40923226, 40923236, 40923241, 40923242, 40923246, 40923251], [40723217, 40728238, 40923206, 40923216, 40923220, 40923227, 40923233, 40923237, 40923243, 40923252, 40923253], [40523138, 40923204, 40923207, 40923211, 40923213, 40923221, 40923224, 40923229, 40923234, 40923235, 40923245]]
print("cp1bGroup is:", cp1bGroup)
for gpNum in range(len(cp1bGroup)):
    # cp1bGroup[gpNum] is the member list of group number (gpNum + 1) 
    # 從第一組與第二組中間才加入組別分隔符號
    if gpNum != 0:
        print("&lt;br /&gt;"*2)
        print("==============================")
        print("&lt;br /&gt;"*2)
    print("group " + str(gpNum + 1) + ":" + "&lt;br /&gt;"*2)
    # 接下來逐組列出組員, 先判定是否在選課名單中, 再利用學號與 github 帳號拼出所需要的 html
    for i in range(len(cp1bGroup[gpNum])):
        # check if cp1bGroup[gpNum][i] still in cp1aReg
        if str(cp1bGroup[gpNum][i]) in cp1bReg:
        # 因為若學員不在選課名單中, 則以選課名單產生的 dict 資料中無法取得對應資料
        # 因此除了判定學號是否在選課名單中之外, 也可以用 try: except: 進行處理
        #try:
            # 從分組數列中按照順序取出各學員學號
            memberNum = cp1bGroup[gpNum][i]
            # 根據學號至 github 帳號 dict 中查出對應的 github 帳號
            memberAccount = cp1bAccount[str(memberNum)]
            #print(memberAccount)
            # 1a 的課程代號
            courseTitle = "cp2020"
            print("Repository: &lt;a href='https://github.com/" + str(memberAccount) + "/" + courseTitle + "'&gt;" + str(memberNum) + "&lt;/a&gt; | ", end="")
            print("Site: &lt;a href='https://" + str(memberAccount) + ".github.io/" + courseTitle + "'&gt;" + str(memberNum) + "&lt;/a&gt;&lt;br /&gt;")
        else:
        #except:
            #print(cp1aGroup[gpNum][i] + "已經不在修課名單中")
            dropStud.append(cp1bGroup[gpNum][i])
# 列出已經退選名單
for i in range(len(dropStud)):
    print(str(dropStud[i]) + "已經退選")

</pre>
<p></p><h3>W8</h3>
<p>本週有三項重點:</p>
<ol>
<li>如何在 kaggle 寫 Python 程式?</li>
<li>如何將近端 data upload  到 kaggle 取用?</li>
<li>如何在 kaggle 讀取網際伺服器上的資料?</li>
</ol>
<p><a href="https://kaggle.com">https://kaggle.com</a> 採用 Jupyter notebook 建立, 而 Jupyter 源自三種用於 data science 或 data computation 的計算機程式語言, 也就是 <a href="https://julialang.org/">Julia</a>, <a href="https://www.python.org/">Python</a> 與 <a href="https://www.r-project.org/">R.</a></p>
<p style="text-align: left; padding-left: 30px;"><a href="https://jupyter.org/">Jupyter</a> = <a href="https://julialang.org/">Julia</a> + <a href="https://www.python.org/">Python</a> +  <a href="https://www.r-project.org/">R</a></p>
<p style="text-align: left;">請利用 @gm 帳號登入 <a href="https://kaggle.com">https://kaggle.com</a> 後選定 s + 學號作為帳號後, 開始建立自己的 Notebook, 利用 <a href="https://www.kaggle.com/mdecourse/cp2020w8">https://www.kaggle.com/mdecourse/cp2020w8</a> 作為範本, 練習如何將近端數據上傳, 並學習如何從 <a href="http://nfulist.herokuapp.com/">http://nfulist.herokuapp.com/</a> (使用說明在<a href="http://mde.tw/cp2020/content/%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.html">亂數分組</a>頁面)取用資料.</p>
<p>以下與課程相關的網路架構圖是採用 <a href="https://app.diagrams.net/">https://app.diagrams.net/ </a>建立. 主要呈現課程倉儲可以分別同步到 Github, Gitlab 與 Heroku 雲端主機, 其中利用 Github Pages 與 Gitlab Pages 伺服靜態網頁, 之後則可以利用 Heroku 伺服靜態網頁或執行動態網頁內容.</p>
<p><img alt="" height="681" src="/images/kmol_env.png" width="600"/></p>
<p>cp2020w8</p>
<p><a href="https://www.kaggle.com/mdecourse/cp2020w8/">https://www.kaggle.com/mdecourse/cp2020w8/</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">"""
semester=1091

courseno=0762

cp

1a 1091/0762

1b 1091/0776

cad

2a 1091/0788

2b 1091/0801
"""
# 導入 urllib.request: https://docs.python.org/3/library/urllib.request.html
# 透過 urllib.request 模組中的 urlopen() 開啟網路 url 連結資料
import urllib.request  # the lib that handles the url stuff
# 定義一個輸入學期與課號,就能夠輸出各課程修課人員數列的函式

def getRegList(semester, courseno):
    # 因為課號可能以 0 開頭, 因此採字串型別輸入, 為了一致, 輸入變數一律採字串輸入
    target_url = "https://nfulist.herokuapp.com/?semester=" + semester + "&amp;courseno=" + courseno
    regList = []
    for line in urllib.request.urlopen(target_url):
        # 由於 urlopen() 取下的網際資料為 binary 格式, 可以透過 decode() 解碼為 ASCII 資料
        regList.append(line.decode('utf-8').rstrip())
    # 此一函式利用 return 將資料傳回
    return regList
    
print(getRegList("1091", "0776"))


# 1b_from_nfu.txt is one line file
with open("1b_from_nfu.txt") as f:
    # read() will read the whole content of file
    cRead = f.read()
#print(cRead)

with open("1b_from_nfu.txt") as f:
    # readline() only read one line
    cReadline = f.readline()
#print(cReadline)

with open("1b_from_nfu.txt") as f:
    # readlines() will read line by line and put into list
    cReadlines = f.readlines()
#print(cReadlines)

# user split() to cut cRead string into list with " "
cReadSplit = cRead.split(" ")
#print(cReadSplit)

for i in range(len(cReadSplit)):
    print(cReadSplit[i])


</pre>
<p>.gitlab-ci.yml</p>
<p><a href="https://mdecourse.gitlab.io/cp2020">https://mdecourse.gitlab.io/cp2020</a></p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">pages:
  stage: deploy
  script:
  - mkdir .public
  - cp -r * .public
  - mv .public public
  artifacts:
    paths:
    - public
  only:
  - master
variables:
  GIT_SUBMODULE_STRATEGY: recursive</pre>
<p></p><h3>HW2</h3>
<p>有關作業二 (Due W12 各班上課之前):</p>
<p style="padding-left: 30px;">由於部分學員在建立 Github 帳號時, 無法使用學號登記帳號, 因此造成 <a href="http://mde.tw/cp2020/content/W3.html">W3</a> 部分分組組員的倉儲與網站連結產生錯誤, 今已知乙班的原始分組數列如下:</p>
<p style="padding-left: 30px;"><span>一乙:</span></p>
<p style="padding-left: 30px;"><span>[[40823148, 40923203, 40923208, 40923209, 40923210, 40923223, 40923225, 40923230, 40923238, 40923239, 40923244, 40923249], [40523148, 40923201, 40923202, 40923218, 40923219, 40923228, 40923231, 40923232, 40923240, 40923247, 40923248, 40923250], [40823152, 40923205, 40923212, 40923214, 40923217, 40923226, 40923236, 40923241, 40923242, 40923246, 40923251], [40723217, 40728238, 40923206, 40923216, 40923220, 40923227, 40923233, 40923237, 40923243, 40923252, 40923253], [40523138, 40923204, 40923207, 40923211, 40923213, 40923221, 40923224, 40923229, 40923234, 40923235, 40923245]]</span></p>
<p style="padding-left: 30px;">但是一甲的分組數列當時並未能儲存.</p>
<p style="padding-left: 30px;">另外, 從亂數分組頁面可以從<a href="https://github.com/mdecourse/nfulist">教務處伺服器與 Heroku</a> 上的網站結合下取得兩班最終修課學員名單:</p>
<p>四技設一甲計算機程式學員名單:</p>
<p style="padding-left: 30px;"><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762</a></p>
<p>四技設一乙計算機程式學員名單:</p>
<p style="padding-left: 30px;"><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776</a></p>
<p style="padding-left: 30px;">請各組以協同討論但各自將以下題目的解題流程說明與程式放入個人網頁的方式完成作業二.</p>
<p style="padding-left: 30px;">作業二之一:</p>
<p style="padding-left: 60px;"><span style="background-color: #ffff00;">請問該如何取得與上述一乙相同格式的一甲分組數列? 請詳細說明解題步驟後列出一甲的分組數列.</span></p>
<p style="padding-left: 30px;">作業二之二:</p>
<p style="padding-left: 60px;"><span style="background-color: #ffff00;">請問根據上述原始分組資料與最終教務處的選課學員名單, 兩班課程中是否有人加選或者退選? 請說明解題方法與結果.</span></p>
<p style="padding-left: 30px;">作業二之三:</p>
<p style="padding-left: 60px;"><span style="background-color: #ffff00;">從倉儲 <a href="https://github.com/mdecourse/cp2020/tree/master/downloads/hw2" style="background-color: #ffff00;">downloads/hw2</a> 目錄中可以找到兩班各學員實際登記 Github 的帳號資料, 例如: <a href="https://github.com/mdecourse/cp2020/blob/master/downloads/hw2/cpb_github_account.txt" style="background-color: #ffff00;">一乙學號與 Github 帳號對照表</a>, 請問該如何利用程式方法產生正確的 <a href="http://mde.tw/cp2020/content/W3.html" style="background-color: #ffff00;">W3</a> 網頁 html 資料?</span></p>
<p></p>
<h4>參考資料:</h4>
<p style="padding-left: 30px;">變數: <a href="https://books.trinket.io/pfe/02-variables.html">https://books.trinket.io/pfe/02-variables.html</a> </p>
<p style="padding-left: 30px;">條件式: <a href="https://books.trinket.io/pfe/03-conditional.html">https://books.trinket.io/pfe/03-conditional.html</a> </p>
<p style="padding-left: 30px;">重複迴圈: <a href="https://books.trinket.io/pfe/05-iterations.html">https://books.trinket.io/pfe/05-iterations.html</a> </p>
<p style="padding-left: 30px;">數列: <a href="https://books.trinket.io/pfe/08-lists.html">https://books.trinket.io/pfe/08-lists.html</a> </p>
<p style="padding-left: 30px;">開啟檔案: <a href="https://books.trinket.io/pfe/07-files.html">https://books.trinket.io/pfe/07-files.html </a></p>
<p style="padding-left: 30px;">超文件: <a href="https://www.w3schools.com/html/">https://www.w3schools.com/html/</a> </p>
<p style="padding-left: 30px;">bs4: <a href="https://readthedocs.org/projects/beautiful-soup-4/downloads/pdf/latest/">https://readthedocs.org/projects/beautiful-soup-4/downloads/pdf/latest/</a> </p>
<p style="padding-left: 30px;">解題參考: <a href="https://www.kaggle.com/mdecourse/cp2020-hw2">https://www.kaggle.com/mdecourse/cp2020-hw2</a> </p><h2>W10-W14</h2>
<h4><span>分組 Python 專案</span></h4>
<p><span>各學員必須自行設定利用 <a href="http://mde.tw/cp2020/content/SSH.html">SSH</a> 對 Github 倉儲連線</span></p>
<ol>
<li><span>必須從啟動隨身系統 (Fall2020_v2 中內建 Putty) 開始就宣告 Git 指令可透過 Putty session 連線</span></li>
<li><span>必須會利用 Git 套件中的 shell 指令建立 OpenSSH 格式的 key pair</span></li>
<li><span>必須將 OpenSSH 格式的 public key 送到自己的 Github 帳號下</span></li>
<li><span>必須會將 OpenSSH 的 private key 轉為 Putty key 格式</span></li>
<li><span>必須會將倉儲的連線協定從 https 改為 ssh</span></li>
<li><span>必須會設定 Putty 中的 github.com session, 透過 http 設定使用雙協定代理主機與 Putty 格式的 private key 位置</span></li>
</ol>
<p><span>各組組長必須會將分組網站中的 cmsimde 更新為最新版本 (可以直接利用 <a href="https://github.com/mdecourse/cmstemplate">cmstemplat</a>e 建立分組倉儲與網站), 並在電腦輔助設計室中啟動分組倉儲, 讓各組成員可以協同維護分組網站</span></p>
<p><span>各組組員必須將個人倉儲同步至 Github 與 Gitlab, 也可以根據 <a href="http://mde.tw/cp2020/content/Heroku.html">Heroku</a> 的說明將靜態網頁同步至 Heroku.</span></p>
<p><span>各組的分組 Python 專案就是將 <a href="http://mde.tw/cp2020/content/HW1.html">HW1</a>, <a href="http://mde.tw/cp2020/content/HW2.html">HW2</a>, <a href="http://mde.tw/cp2020/content/HW3.html">HW3</a>, <a href="http://mde.tw/cp2020/content/HW4.html">HW4</a> 以組員協同的方式 (各週每一位學員都必須至<a href="https://docs.google.com/forms/d/e/1FAIpQLSdDN22BdIxF5IDiT9vnovehpFBBjmPVylJiLy19XoJxG0GMrA/viewform?usp=sf_link">評分區</a>完成自評與互評), 將個人所分配的內容整理至個人網站, 並且透過開會討論 (每週必須透過 </span><a href="https://www.youtube.com/">Youtube</a> + <a href="https://obsproject.com/">OBS</a><span> 錄製會議記錄影片, 並嵌入各分組網站中) 整合至各組的分組網站 (在組長帳號下分別建立 cp2020ag1 或 cp2020bg1 等倉儲與網站,  各組倉儲依此類推命名).</span></p>
<p><span></span></p><h3>HW3</h3>
<p>作業三 (Due. 各班 第十四週上課之前):</p>
<p>請各組採分工方式, 以英文及中文對照方式完成 <a href="https://www.practicepython.org/">https://www.practicepython.org/</a> 中各題目的練習與資料整理, 請將圖文資料放入各分組組長的分組網頁中 (cp2020ag1 為甲班第一組倉儲名稱, 其餘類推), 並將分組網站連結回報至 <a href="https://gitter.im/mdecourse/cp2020">https://gitter.im/mdecourse/cp2020</a></p>
<ul>
<li>1:<span> </span><a href="https://www.practicepython.org/exercise/2014/01/29/01-character-input.html">Character Input</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>2:<span> </span><a href="https://www.practicepython.org/exercise/2014/02/05/02-odd-or-even.html">Odd Or Even</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>3:<span> </span><a href="https://www.practicepython.org/exercise/2014/02/15/03-list-less-than-ten.html">List Less Than Ten</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>4:<span> </span><a href="https://www.practicepython.org/exercise/2014/02/26/04-divisors.html">Divisors</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>5:<span> </span><a href="https://www.practicepython.org/exercise/2014/03/05/05-list-overlap.html">List Overlap</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>6:<span> </span><a href="https://www.practicepython.org/exercise/2014/03/12/06-string-lists.html">String Lists</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>7:<span> </span><a href="https://www.practicepython.org/exercise/2014/03/19/07-list-comprehensions.html">List Comprehensions</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>8:<span> </span><a href="https://www.practicepython.org/exercise/2014/03/26/08-rock-paper-scissors.html">Rock Paper Scissors</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>9:<span> </span><a href="https://www.practicepython.org/exercise/2014/04/02/09-guessing-game-one.html">Guessing Game One</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>10:<span> </span><a href="https://www.practicepython.org/exercise/2014/04/10/10-list-overlap-comprehensions.html">List Overlap Comprehensions</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>11:<span> </span><a href="https://www.practicepython.org/exercise/2014/04/16/11-check-primality-functions.html">Check Primality Functions</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>12:<span> </span><a href="https://www.practicepython.org/exercise/2014/04/25/12-list-ends.html">List Ends</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>13:<span> </span><a href="https://www.practicepython.org/exercise/2014/04/30/13-fibonacci.html">Fibonacci</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>14:<span> </span><a href="https://www.practicepython.org/exercise/2014/05/15/14-list-remove-duplicates.html">List Remove Duplicates</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>15:<span> </span><a href="https://www.practicepython.org/exercise/2014/05/21/15-reverse-word-order.html">Reverse Word Order</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>16:<span> </span><a href="https://www.practicepython.org/exercise/2014/05/28/16-password-generator.html">Password Generator</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>17:<span> </span><a href="https://www.practicepython.org/exercise/2014/06/06/17-decode-a-web-page.html">Decode A Web Page</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>18:<span> </span><a href="https://www.practicepython.org/exercise/2014/07/05/18-cows-and-bulls.html">Cows And Bulls</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>19:<span> </span><a href="https://www.practicepython.org/exercise/2014/07/14/19-decode-a-web-page-two.html">Decode A Web Page Two</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>20:<span> </span><a href="https://www.practicepython.org/exercise/2014/11/11/20-element-search.html">Element Search</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>21:<span> </span><a href="https://www.practicepython.org/exercise/2014/11/30/21-write-to-a-file.html">Write To A File</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>22:<span> </span><a href="https://www.practicepython.org/exercise/2014/12/06/22-read-from-file.html">Read From File</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>23:<span> </span><a href="https://www.practicepython.org/exercise/2014/12/14/23-file-overlap.html">File Overlap</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>24:<span> </span><a href="https://www.practicepython.org/exercise/2014/12/27/24-draw-a-game-board.html">Draw A Game Board</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>25:<span> </span><a href="https://www.practicepython.org/exercise/2015/11/01/25-guessing-game-two.html">Guessing Game Two</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>26:<span> </span><a href="https://www.practicepython.org/exercise/2015/11/16/26-check-tic-tac-toe.html">Check Tic Tac Toe</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>27:<span> </span><a href="https://www.practicepython.org/exercise/2015/11/26/27-tic-tac-toe-draw.html">Tic Tac Toe Draw</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>28:<span> </span><a href="https://www.practicepython.org/exercise/2016/03/27/28-max-of-three.html">Max Of Three</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>29:<span> </span><a href="https://www.practicepython.org/exercise/2016/08/03/29-tic-tac-toe-game.html">Tic Tac Toe Game</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>30:<span> </span><a href="https://www.practicepython.org/exercise/2016/09/24/30-pick-word.html">Pick Word</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>31:<span> </span><a href="https://www.practicepython.org/exercise/2017/01/02/31-guess-letters.html">Guess Letters</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>32:<span> </span><a href="https://www.practicepython.org/exercise/2017/01/10/32-hangman.html">Hangman</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>33:<span> </span><a href="https://www.practicepython.org/exercise/2017/01/24/33-birthday-dictionaries.html">Birthday Dictionaries</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>34:<span> </span><a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html">Birthday Json</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>35:<span> </span><a href="https://www.practicepython.org/exercise/2017/02/28/35-birthday-months.html">Birthday Months</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>36:<span> </span><a href="https://www.practicepython.org/exercise/2017/04/02/36-birthday-plots.html">Birthday Plots</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
</ul>
<h4>圖書館電子書選讀:</h4>
<p>Artificial Intelligence Basics:</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-5028-0">https://link.springer.com/book/10.1007/978-1-4842-5028-0</a> (2019)</p>
<p>Neural Network and Deep Learning:</p>
<p><a href="https://link.springer.com/book/10.1007/978-3-319-94463-0">https://link.springer.com/book/10.1007/978-3-319-94463-0</a> (2018)</p>
<p>Computer Vision Metrics:</p>
<p><a href="https://link.springer.com/book/10.1007/978-3-319-33762-3">https://link.springer.com/book/10.1007/978-3-319-33762-3</a> (2016)</p>
<p>Genetic Algorithms:</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4471-0577-0">https://link.springer.com/book/10.1007/978-1-4471-0577-0</a> (1999)</p>
<h2>解救菜英文</h2>
<p>曾經錯過沒有關係, 但若因為終身菜英文而錯失美好未來, 著實可惜. 解救菜英文就從現在開始.</p>
<p>先從<a href="https://www.talkenglish.com/vocabulary/top-2000-vocabulary.aspx">最常用的 2000 個英文字彙</a>開始.</p>
<p>國中英語字彙 <a href="/downloads/2000_words.txt">2000 字</a></p>
<p>普通高中 4500 -7000 字</p>
<p>技職與綜合高中 4000 - <a href="/downloads/5000_words.txt">5500 字</a></p>
<h4>自行寫程式兼學英文字彙:</h4>
<p style="padding-left: 30px;">假如能夠配合 <a href="https://github.com/mdecourse/lookupdict">https://github.com/mdecourse/lookupdict</a> 從 Webster 英英字典中整理出 <a href="/downloads/5000_words.txt">5500 字</a> 的英文說明, 並逐字研讀, 應該是解救菜英文最佳手段.</p>
<h4>使用電腦學習英文字彙:</h4>
<p style="padding-left: 30px;">另一項學習英文字彙的方式則是利用電腦或筆電下載安裝 <a href="https://github.com/ankitects/anki">Anki</a>, 然後導入 <a href="https://ankiweb.net/shared/info/1104981491">4000 英文單字</a>學習模組, 就可以開始學習了. Anki 還有其他<a href="https://ankiweb.net/shared/decks/english">學習英文的 Decks</a>.<span style="text-decoration: underline;"></span></p>
<h4>使用手機學習英文字彙:</h4>
<p style="padding-left: 30px;">在手機上安裝<a href="https://apps.apple.com/tw/app/%E6%9F%A5%E6%9F%A5%E5%96%AE%E5%AD%97/id1482901273">查查單字</a> Apps (Android <a href="https://play.google.com/store/apps/details?id=tiny.biscuit.assistant2">查查英文</a>).</p>
<p style="padding-left: 30px;">在手機上安裝 <a href="https://itenyh.github.io/AnkiDict/">Anki英辞</a> Apps, 這是以 <a href="https://github.com/skywind3000/ECDICT">https://github.com/skywind3000/ECDICT</a> 英漢字典內容為基礎的 Anki 學習套件, 使用者可以將所查詢的英文單字解釋內容設為 Anki 字詞, 進一步作為暗記英文字彙的有效工具.</p>
<p>常用的 2000 + 800 個英文字彙</p>
<p>A-<br/>a/an, a few, a little, a lot, a.m., able, about, above, abroad, across, act, action, actor, actress, actually, afraid, after, afternoon, again, age, ago, agree, ahead, air, airplane(plane), airport, all, allow, almost, along, already, also, always, America, American,and, angle, angry, animal, another, answer, ant, any, anyone(anybody), anything, apartment, appear, apple, April, area, arm, around, arrive, art, as, ask, at, attack, August, aunt, autumn(fall), away<br/><br/>B-<br/>baby, back, bad, badminton, bag, bake, bakery, balcony, banana, band, bank, baseball, basket, basketball, bat, bath, bathroom, be(am, is, are, was, were, been), beach, bean, bear, beautiful, because, become, bed, bedroom, bee, beef, before, begin, behind, believe, bell, belong, below, belt, bench, beside, between, bicycle(bike), big, bird, birthday, bite, black, blackboard, blank, blanket, blind, block, blow, blue, boat, body, boil, book, bookstore, bored, boring, born, borrow, boss, both, bottle, bottom, bow, bowl, box, boy, brave, bread, break, breakfast, bridge, bright, bring, brother, brown, brush, bug, build, bun, burn, bus, business, businessman, busy, but, butter, butterfly,button, buy, by<br/><br/>C-<br/>cake, call, camera, camp, can, could, candle, candy, cap, car, card, care, careful, carry, case, castle, cat, catch, celebrate, cellphone, cent, center, centimeter, chair, chalk, chance, change, cheap, cheat, check, cheer, cheese, chicken,  child, China,  Chinese, chocolate, choice, choose,  chopsticks, Christmas, church, circle, city, clap, class, classmate, classroom,clean, clear, clerk, climb, clock, close, clothes, cloud, cloudy, club, coat, coffee, cold,  collect,  color,  comb,  come,  comfortable,  comic,  common,  computer, convenient, cook, cookie, cool, copy, corner, correct, cost, couch, count, country, course, cousin, cover, cow, crazy, cross, cry, cup, cut, cute<br/>    <br/>D-<br/>dance,dangerous,dark,date,daughter,day,dead,deal,dear,death,December,decide,deep,define,delicious,dentist,department store,desk,dictionary,die,different,difficult,dig,dining room,dinner,dirty,dish,do (does, did, done),doctor(Dr.),dog,doll,dollar,door,dot,down,download,dozen,draw,drawer,dream,dress,drink,drive,driver,drop,drum,dry,duck,during<br/>    <br/>E-<br/>each,ear,early,earth,earthquake,east,Easter, easy,eat,egg,eight,eighteen,eighty,either,elementary school,elephant,eleven,else,e-mail,end,engineer,English, enjoy,enough,enter,envelope,eraser,error,eve,even,evening,ever,every,everyone(everybody),everything,example,excellent,except,excited,exciting,excuse,exercise,expect,expensive,experience,explain,eye<br/>    <br/>F-<br/>face,fact,factory,fail,fall,family,famous,fan,far,farm,farmer,fast,fat,father(dad, daddy),favorite,February,feed,feel,festival,fever,few,<br/>55fifteen,fifty,fight,file,fill,finally,find,fine,finger,finish,fire,first,fish,fisherman,five,fix,floor,flower,fly,follow,food,fool,foot,for,foreign,foreigner,forget,fork,forty,four,fourteen,fox,free,fresh,Friday,friend,friendly,fries(French fries),frog,from,front,fruit,fry,full,fun,funny,future<br/>    <br/>G-<br/>game, garden, garbage, gas, gate, get, ghost, giant, gift, girl, give, glad, glass, glasses, glove, glue, go, goat, god, good, good-bye(goodbye, bye), goose, grade, gram, grandfather(grandpa), grandmother(grandma), grape, grass, gray, great, green, ground, group, grow, guava, guess, guitar, guy, gym<br/><br/>H-<br/>habit, hair, half, Halloween, ham, hamburger (burger), hand, handsome, hang, happen, happy, hard, hard-working, hat, hate, have (has, had), he (him, his, himself), head, headache, health, healthy, hear, heart, heat, heavy, height, hello, help, helpful, hen, here, hey, hi, hide, high, hike, hill, history, hit, hobby, hold, holiday, home, homework, honest, honey, hope, horse, hospital, hot, hot dog, hotel, hour, house, housewife, how, however, hundred, hungry, hunt, hurry, hurt, husband<br/><br/>I-<br/>I(me, my, mine, myself), ice, ice cream, idea, if, important, in, inch, insect, inside, interest, interested, interesting, Internet (Net), interview, into, invite, island, it(its, itself), item<br/>    <br/>J-<br/>jacket, January, jeans, job, jog, join, joke, joy, juice, July, jump, June, junior high school, just<br/><br/>K-<br/>keep, key, kick, kid, kill, kilogram, kind, king, kiss, kitchen, kite, knee, knife, knock, know, knowledge<br/><br/>L-<br/>lake, lamp, land, language, large, last, late, later, laugh, lawyer, lazy, lead, leader, learn, least, leave, left, leg, lemon, lend, less, lesson, let, letter, level, library, lie, life, light, like, line, lion, lip, list, listen, little,live, living room, lonely, long, look, lose, loud, love, lovely, low, lucky, lunch<br/><br/>M-<br/>machine, mad, magic, mail, mailman(mail carrier), main, make, man, many, map, March, mark, marker, market, married, mask, math(mathematics), matter, may (might), May,maybe, meal, mean, meat, medicine, medium, meet, meeting, member, menu, metro, middle, mile, milk, million, mind, minute, Miss, miss, mistake, modern, moment, Monday, money, monkey, month, moon, more, morning, mop, most, mother (mom, mommy), motorcycle, mountain, mouse, mouth, move, movie, Mr., Mrs., Ms., much, mud, museum, music, must<br/><br/>N-<br/>nail, name, national, nature, near, neck, need, neighbor, never, new, news, newspaper, next, nice, night, nine, nineteen, ninety, no, nobody, noise, noisy, noodle, noon,north, nose, not, note, notebook, nothing, notice, November, now, number, nurse<br/><br/>O-<br/>o'clock, October, of, off, office, officer, often, oil, OK, old, on, once, one, only, open, or,  orange, order, other, out, outside, over, own<br/><br/>P-<br/>p.m., pack, package, page, paint, pair, pants, papaya, paper, parent, park, part, <br/>56party, pass, past, paste, pay, PE(physical education), peach, pear, pen, pencil, people, perhaps, person, pet, photo, piano, pick, picnic, picture, pie, piece, pig, pin, pink, pipe, pizza, place, plan, planet, plant, plate, play, player, playground, please, pleasure, pocket, point, police, polite, pond, pool, poor, pop, popcorn, popular, pork, possible, post office, postcard, pot, pound, power, probably, practice, pray, prepare, present, pretty, price, prize, problem, program, proud, public, pull, pumpkin, puppy, purple, push, put<br/>    <br/>Q-<br/>quarter, queen, question, quick, quiet, quite, quiz<br/><br/>R-<br/>rabbit, race, radio, rain, rainbow, rainy, raise, rat, reach, read, ready, real, really, reason, red, refrigerator (fridge), relative, remember, repeat, report, reporter, rest, restaurant, restroom, rice, rich, ride, right, ring, rise, river, road, robot, R.O.C./ROC,rock, roll, room, root, rope, rose, round, row, rule, ruler, run<br/><br/>S-<br/>sad, safe, sail, salad, sale, salesman, salt, same, sandwich, Saturday, save, say, scared, school, science, scooter, screen, sea, season, seat, second, secretary, see, seed, seesaw, seldom, sell, send, senior high school, sentence, September, serious, service, set, seven, seventeen, seventy, several, shake, shape, share, sharp, she (her, hers, herself), sheep, shine, ship, shirt, shoe(s), shop, shopkeeper, short, shorts, should, shoulder, shout, show, shower, shy, sick, side, sidewalk, sight, sign, simple, since, sing, singer, sir, sister, sit, six, sixteen, sixty, size, skirt, sky, sleep, slide, slim, slow, small, smart, smell, smile, smoke, snack, snake, snow, snowy, so, soccer, socks, sofa, soldier, some, someone(somebody), something, sometimes, somewhere, son, song, soon, sore, sorry, sound, soup, south, space, speak, special, spell, spend, spider, spoon, sports, spring, square, stairs, stamp, stand, star, start, station, stay, steak, still, stomach, stop, store, story, straight, strange, stranger, strawberry, street, string, strong,student, study, stupid, subject, successful, sugar, summer, sun, Sunday, sunny, supermarket, sure, surf, surprise, surprised, sweater, sweet, swim, swing<br/><br/>T-<br/>table, tail, Taiwan, take, talk, tall, tape, taste, taxi, tea, teach, teacher, team, teenager, telephone(phone), television(TV), tell, temple, ten, tennis, terrible, test, than, thank, that, the, theater, then, there, these, they(them, their, theirs, themselves), thick, thin, thing, think, third, thirsty, thirteen, thirty, this, those, though(although), thousand, three, throat, through, throw, Thursday, ticket, tidy, tie, tiger, time, tip, tired, to, toast, today, toe, together, tomato, tomorrow, tonight, too, tool, tooth, top, topic, total, touch, towel, town, toy, traffic, train, trash, treat, tree, trick, trip, trouble, truck, true, try, T-shirt, Tuesday, turn, turtle, twelve, twenty, twice, two, type, typhoon<br/><br/>U-<br/>ugly, umbrella, uncle, under, understand, unhappy, uniform, until, up, upload, U.S.A./USA, use, useful, usually<br/><br/>V-<br/>vacation, vegetable, very, video, violin, visit, visitor, voice<br/><br/>W-<br/>wait, waiter, waitress, wake, walk, wall, wallet, want, warm, wash, watch, water, watermelon, wave, way, we (us, our, ours, ourselves), weak, wear, weather, Wednesday, week, weekend, welcome, well, west, wet, what, when, where, whether, which, while, white, who, whose, why, wide, wife, will(would), win, wind, window, windy, winter, wise, wish, with, without, woman, wonderful, word, work, workbook, worker, world, worry, write, writer, wrong<br/>    <br/>X-<br/><br/>Y-<br/>yard, year, yellow, yes(yeah), yesterday, yet, you(your, yours, yourself, yourselves), young, yummy<br/><br/>Z-<br/>zebra, zero, zoo<br/><br/>其他常用800字（依字母排列）<br/><br/>A-<br/>absent,  accept,  accident,  active,  activity,  add,  address,  admire,  adult, advertisement, advice, advise, affect, against, aim, air conditioner, airlines, alarm, album, alike, alive, alone, aloud, alphabet, altogether, ambulance, among, amount, ancient,angel,anger, ankle, anywhere, apologize, appreciate, argue, armchair, army, arrange, artist, asleep, assistant, assume, attention, available, avoid<br/><br/>B-<br/>baby sitter, backpack, backward, ball, balloon,barbecue,barber, bark, base, basement, basic, bathe, beard, beat, beauty, beer, beginner, beginning, behave, besides, beyond, bill, biology, bitter, blame, bless, blood, blouse, board, bomb, bone, bookcase, bother, bowling, branch, brick, broad, broadcast, brunch, bucket, buffet, building, bundle, burger, burst<br/><br/>C-<br/>cabbage,  cable,  cafeteria, cage,  calendar,  calm,  campus,  cancel,  cancer, captain, careless, carpet, carrot, cartoon, cash, cause, ceiling, central, century, cereal, certain, channel, character, charge, chart, chase, chemistry, chess,  childhood,  childish,  childlike,  chin,  chubby,  classical,  clever, climate,  closet,  coach,  coast,  cockroach,  coin, cola,  college,  colorful, command, comment,company, compare, complain, complete, concern,confident,confuse,  congratulation,  consider,  considerate,  contact  lens,  continue, contract,  control,  convenience  store,  conversation,  corn,  cotton,  cough, couple, courage, court, cowboy,crab, crayon, cream, create, credit card, crime, crowd, crowded, cruel, culture, cure, curious, current, curtain, curve, custom, customer<br/><br/>D-<br/>daily, damage, danger, dawn, deaf, debate, decision, decorate, decrease, deer, degree, deliver, department, depend, describe, desert, design, desire, dessert, detect, develop, dial, diamond, diary, diet, difference, difficulty, diligent, diplomat,  dinosaur,  direct,  direction,  disappear,  discover,  discuss, discussion, dishonest, distance, distant, divide, dizzy, dodgeball, dolphin, donkey, double, doubt, doughnut, downstairs, downtown, dragon, drama, dresser, drugstore, dryer, dumb, dumpling, duty<br/><br/>E-<br/>eagle, earn, earrings, ease, edge, education, effort, elder, elect, electric, embarrass, emotion, emphasize, employ, empty, enemy, energetic, energy, engine, <br/>58entrance, environment, envy, equal, especially, event, everywhere, evil, exam, excite, exist, exit, express, extra<br/><br/>F-<br/>fair,false, fancy, fantastic, fashionable, faucet, fault, fear, fee, feeling, female, fence, film, final, fit, flag, flashlight, flat tire, flight, flour, flu, flute, focus, fog, foggy, foolish, football, forest, forgive, form, formal, former,  forward,  frank,  freedom,  freezer,  freezing,  friendship,  frighten,frisbee, furniture<br/><br/>G-<br/>gain, garage, gather, general, generous, genius, gentle, gentleman, geography, gesture,  goal,  gold,  golden,  golf,  goodness,  government,  granddaughter, grandson, greedy, greet, guard, guest, guide, gun<br/><br/>H-<br/>hair dresser, haircut, hall, hammer, handkerchief, handle, hanger, hardly, heater, helicopter, hero, highway, hip, hippo, hire, hole, homesick, honesty, hop, horrible, host, housework, hug, human, humble, humid, humor, humorous, hunger, hunter<br/><br/>I-<br/>ignore,  ill,  imagine,  impolite,  importance,  impossible,  improve,  include, income, increase, independent, indicate, influence, information, ink, insist,inspire,   instant,   instrument,   intelligent,   international,   interrupt, introduce, invent, invitation, iron<br/><br/>J-<br/>jam, jazz, jealous, jeep, journalist, judge<br/><br/>K-<br/>kangaroo, ketchup, kilometer, kindergarten, kingdom, kitten,koalaL-lack, lady, lamb, lantern, latest, latter, law, lay, leaf, lettuce, lick, lid, lift, lightning, likely, limit, link, liquid, liter, loaf, local, lock, locker, loser<br/><br/>M-<br/>ma'am, magazine, magician, major, male, mall, manager, mango, manner, marry, marvelous,  mass,  master, mat,  match,  maximum,  meaning,  measure,mechanic, memory, men's room, message, metal, meter, method, microwave, midnight, minor, minus, mirror, mix, model, monster, mosquito, motion, movement, MRT, musician<br/><br/>N-<br/>napkin, narrow, nation, natural, naughty, nearly, necessary, necklace, needle, negative, neither, nephew, nervous, nest, net, nice-looking, niece,nod, none, nor, novel, nut<br/><br/>O-<br/>obey, object, ocean, offer, omit, oneself, onion, operation, opinion, ordinary, oven, overpass, overseas, over-weight, owner, ox<br/><br/>P-<br/>pain, painful, painter, pajamas, pale, pan, panda, pardon, parking lot, parrot, partner, passenger, path, patient, pattern, pause, peace, peaceful, pepper, perfect, period, personal, physics, pigeon, pile, pillow, pineapple, plain, platform, pleasant, pleased, plus, poem, poison, pollute, pollution, pop music, population, position, positive, potato, powder, praise, precious, president, pressure,  priest,  primary, prince, princess,  principal,  principle,  print, printer, private, produce, production, professor, progress, project, promise, pronounce, protect, provide, pump, punish, purpose, purse, puzzle<br/>    <br/>Q-<br/>quit<br/><br/>R-<br/>railroad, railway, raincoat, rare, rather, realize, receive, record, recover, rectangle, recycle, refuse, regret, regular, reject, remind, rent,repair, respect, responsible, result, return, review, revise, rob, role, roller skate (roller blade),roof, rub, rubber, rude, ruin, rush</p>
<h3>concordance</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import urllib.request
from bs4 import BeautifulSoup
import sys, codecs

proxy_host = '[2001:288:6004:17::69]:3128'    # host and port of your proxy

# 將系統輸出語系編碼設為 utf8
sys.stdout = codecs.getwriter("utf8")(sys.stdout.detach())
# 表示要讀入的文章檔名為 hw1.txt
filename = "hw1"

"""
 Project: Concordancer Jr.
 File name: concordance.py
 Description:  Counts up the number of each unique word in a block of plain text.

 Copyright (C) 2010 Steve Osborne, srosborne (at) gmail.com
 http://yakinikuman.wordpress.com/
 *******
 This program is free software; you can redistribute it and/or modify 
 it under the terms of the GNU General Public License as published by 
 the Free Software Foundation; either version 2 of the License, or 
 (at your option) any later version.

 This program is distributed in the hope that it will be useful, but 
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License 
 for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.

 *******
 Version history:
 1.0   Oct 27 2010
 2.0   Nov 11, 2010 - put into a class.  Can now be called with any block of text.
 3.0   KMOLab 2020/12/25

"""

class Concordancer:
    def __init__(self):
        #from http://www.duboislc.org/EducationWatch/First100Words.html
        #some common words a little fishy... "water"? "oil"??  But no "am"???
        self.common = ['the','of','and','a','to','in','is','you','that','it',
            'he','was','for','on','are','as','with','his','they','i',
            'at','be','this','have','from','or','one','had','by','word',
            'but','not','what','all','were','we','when','your','can','said',
            'there','use','an','each','which','she','do','how','their','if',
            'will','up','other','about','out','many','then','them','these','so',
            'some','her','would','make','like','him','into','time','has','look',
            'two','more','write','go','see','number','no','way','could','people',
            'my','than','first','water','been','call','who','oil','its','now',
            'find','long','down','day','did','get','come','made','may','part']

        self.wordIndex = dict() #will be a count of each word in the input text
        self.total = 0 #total words
        self.unique = 0 #unique words

    def getCommon(self):
        return self.common

    def updateCommon(self,newCommon):
        #newCommon is a list of words to be used on future calls to topWordsNotCommon
        self.common = newCommon

    def extendCommon(self,newCommon):
        #newCommon is a list of words to be added to self.common
        self.common.extend(newCommon)

    def populateIndex(self,data):
        #data is a block of text
        #splits up data and adds each word to the index
        #repeated calls to populateIndex will NOT clear the index - will just keep adding up words in new block of text
        for word in data.split():#splits at and removes whitespace
            self.addword(word)
        self.calculateUniqueWords()
        self.calculateTotalWords()

    def addword(self,word):
        word = word.translate("0123456789.!?,;:*\)\(\[\]\\\n/'\"")#remove punctuation, numbers, and newlines

        if len(word) &gt; 5 and word.isalpha():
            word = word.lower()#convert to lower case
            #special case of dashes "--": separate into two words
            if "--" in word:
                words = word.replace('--',' ')
                for w in words.split():
                    self.addword(w)
            elif word in self.wordIndex:
                self.wordIndex[word] = self.wordIndex[word] + 1
            else:
                self.wordIndex[word] = 1

    def getSortedIndex(self):
        #note - sorted returns a list of tuples, not a dictionary
        s1 = sorted(list(self.wordIndex.items()),key=lambda item:item[0]) #secondary key: sort alphabetically
        s2 = sorted(s1,key=lambda item:item[1], reverse=True) #primary key: sort by count
        return s2

    def calculateUniqueWords(self):
        self.unique = len(self.wordIndex)

    def calculateTotalWords(self):
        total = 0
        for word in list(self.wordIndex.keys()):
            total = total + self.wordIndex[word]
        self.total = total

    def topWords(self,n,fExcludeCommon=1):
        #run only after "populateIndex" for meaningful output
        #returns list of top min(n,unique) words in the index
        #fExcludeCommon: if 1 [default], excludes any words in self.common.  Set to 0 to include all words.
        #returns list of (word,count) pairs for the top n words.  'count' is the count of that word.
        s2 = self.getSortedIndex()
        lwords = []
        i = 0
        while len(lwords) &lt; n and i &lt; self.unique:
            key = s2[i][0]
            value = s2[i][1]
            item = (key,value)
            if fExcludeCommon:
                if key not in self.common:
                    lwords.append(item)
            else:
                lwords.append(item)
            i = i + 1
        return lwords

# 以上為統計文章中單字出現次數的類別

def chk_dict(單字):
    url = 'https://cdict.net/q/'
    
    req = urllib.request.Request(url)
    req.set_proxy(proxy_host, 'http')

    response = urllib.request.urlopen(url+單字)
    text = response.read().decode("utf-8")
    return text

def parse_doc(網頁超文件):
    all_text = ""
    wordList = 網頁超文件.split("&lt;span class=source&gt;")
    for i in wordList[1:]:
        soup = BeautifulSoup(i)
        text = ''.join(soup.findAll(text=True))
        print(text)
        all_text += text
    return all_text + "\n"
    
'''
def parse_doc(網頁超文件):
    all_text = ""
    soup = BeautifulSoup(網頁超文件, "lxml")
    try:
        page = soup.find('span',{'class', 'source'}).getText()
        all_text += page
    except:
        pass
    print(all_text)
    return all_text + "\n"
'''
# 用來統計單字次序的全域變數
word_count = 0

def 查單字(單字):
    global word_count
    html_doc = chk_dict(單字)
    our_text = parse_doc(html_doc)
    if our_text == "\n":
        word_def = "查不到與 "+單字+" 有關的資料\n"
    else:
        word_count += 1
        word_def = str(word_count)+". "+單字+":\n"
        word_def += our_text
    word_def += "_"*50+"\n"
    return word_def

# 檔案是要將結果存檔用的 handle
檔案 = open("words_"+filename+".txt", "w", encoding="UTF-8")

# 以下為統計文章單字用的程式呼叫
concord = Concordancer()
file = filename+'.txt'
f = open(file,'rt',encoding="utf-8")
data = f.read()#the whole file as one big string
concord.populateIndex(data)

n = concord.unique
print("Top %s words:" % n)
top = concord.topWords(n)

# 隨後的 key 就是單字
order = 0
all_text = ""
for item in top:
    order += 1
    key = item[0]
    value = item[1]
    #print(order,"%s:%s" % (key,value))
    print(order,key,value)
    all_text += 查單字(key)

檔案.write(all_text)
print("done")</pre>
<p></p><h2>W15-W18</h2>
<p><span>分組總結報告</span></p>
<h3>scissor-rock-paper</h3>
<h4><a href="https://www.practicepython.org/exercise/2014/03/26/08-rock-paper-scissors.html">Exercise 8</a></h4>
<p>Make a two-player Rock-Paper-Scissors game. (Hint: Ask for player plays (using input), compare them, print out a message of congratulations to the winner, and ask if the players want to start a new game)<br/><br/>Remember the rules:<br/><br/>    Rock beats scissors<br/>    Scissors beats paper<br/>    Paper beats rock</p>
<p>針對此一練習, 衍生下列思考:</p>
<ol>
<li>能不能改為與電腦對玩?</li>
<li>能不能轉為網際程式, 讓操作者與電腦猜拳對玩? (可以在近端執行, 也可以部署到 Heroku)</li>
<li>能不能轉為網際程式, 讓兩名操作找猜拳對玩? (可以在近端執行, 也可以部署到 Heroku)</li>
</ol>
<p>利用 flask scissor rock paper game 搜尋, 可以找到 <a href="https://github.com/prof-rossetti/rock-paper-scissors-flask">https://github.com/prof-rossetti/rock-paper-scissors-flask</a>, 套用 <a href="https://github.com/s2t2/game-utils-py">https://github.com/s2t2/game-utils-py</a> 模組, 先將程式 clone 下來看看. 並將初步結果放入 <a href="https://github.com/mdecourse/scissor-rock-paper">https://github.com/mdecourse/scissor-rock-paper</a> 倉儲.</p>
<p>接下來要在 <a href="http://mde.tw/cp2020/content/Heroku.html" rel="nofollow">http://mde.tw/cp2020/content/Heroku.html</a> 與 <a href="https://github.com/mdecourse/nfulist">https://github.com/mdecourse/nfulist</a> 資料的協助下, 將這個遊戲部署到 Heroku.</p>
<p>目前一個 Heroku 帳號只能免費建立 5 個應用程式.</p>
<p>目前 Heroku 帳號綁定如下:</p>
<p>cp2020 -- mdecourse At Gmail<br/> cad2020 -- heroku1 At Mde dot TW (含 cad2021 ~ cad2024)<br/> cp2021 ~ cp2025 -- heroku2 At Mde dot TW<br/> cad2025, mdecp, mdecad, mdewcm, mdecd -- heroku3 At Mde dot TW</p>
<p>因此將 scissor-rock-paper 網際程式部署到 Heroku, 並以 heroku4 AT Mde dot TW 綁定, 成為 <a href="https://scissor-rock-paper.herokuapp.com/" rel="nofollow">https://scissor-rock-paper.herokuapp.com/</a></p>
<p>之後除了可以再延伸為線上兩人猜拳遊戲外, 也可以將網際遊戲中的文字回應改為圖形回應, 並且加入音效或其他動畫增加可玩性, 並且再納入<a href="https://elements.heroku.com/addons/heroku-postgresql" rel="nofollow">線上資料庫</a>, 儲存遊戲紀錄.</p>
<p>此一案例的學習要點:</p>
<ol>
<li><a href="https://github.com/mdecourse/scissor-rock-paper/tree/main/game_utils">https://github.com/mdecourse/scissor-rock-paper/tree/main/game_utils</a> 模組是如何建立的?</li>
<li>如何將一個 Flask 網際程式部署到 Heroku?</li>
<li>如何在 Heroku 中將 Flask 程式結果存入 PostgreSQL 資料庫中?</li>
<li>這樣的網際程式是否能夠應用到機械設計流程中?</li>
</ol>
<h4>利用網際程式並部署到 Heroku:</h4>
<p>版本一: <a href="https://scissor-rock-paper.herokuapp.com/">https://scissor-rock-paper.herokuapp.com/</a> (<a href="https://github.com/mdecourse/cp2020/discussions/10#discussioncomment-228476">discussion</a>)</p>
<p>版本一只是將 <a href="https://github.com/prof-rossetti/rock-paper-scissors-flask">https://github.com/prof-rossetti/rock-paper-scissors-flask</a> 稍微修改為初學者較容易理解的程式架構, 但是其中仍包含 Python 模組的建立與導入引用, 且程式主要判斷邏輯使用 <a href="https://github.com/s2t2/game-utils-py">https://github.com/s2t2/game-utils-py</a> 模組的內容.</p>
<p>版本二:</p>
<p>首先看一下最基本的 Flask 網際程式架構:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello, World!'

app.run(host='127.0.0.1', port=5000)</pre>
<p>接下來讓電腦可以 randomly 產生 scissor, rock or paper</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask
import random

app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello, World!'

# convert 0, 1, 2 into "scissor, rock or paper"
def srp(number):
    data = ["scissor", "rock", "paper"]
    return data[number]
    
@app.route('/computer')
def computer():
    # must retrun sting
    # random number 1, 2, 3
    return srp((random.randint(0,2)))
    
''' now the problem becomes how to get
user's input through form or url variables
'''

app.run(host='127.0.0.1', port=5000)</pre>
<p>接下來必須了解網際程式如何取得使用者的 inputs:</p>
<p style="padding-left: 30px;"><a href="https://flask.palletsprojects.com/en/1.1.x/quickstart/#variable-rules">https://flask.palletsprojects.com/en/1.1.x/quickstart/#variable-rules</a></p>
<p style="padding-left: 30px;"><a href="https://www.askpython.com/python-modules/flask/flask-forms">https://www.askpython.com/python-modules/flask/flask-forms</a></p>
<p style="padding-left: 30px;"><a href="https://stackoverflow.com/questions/24892035/how-can-i-get-the-named-parameters-from-a-url-using-flask">https://stackoverflow.com/questions/24892035/how-can-i-get-the-named-parameters-from-a-url-using-flask</a></p>
<p style="padding-left: 30px;"><a href="https://stackoverflow.com/questions/47363492/flask-url-with-variable-input">https://stackoverflow.com/questions/47363492/flask-url-with-variable-input</a></p>
<p>而且還必須了解網際程式如何透過 session 在使用者點擊過程中儲存變數資料:</p>
<p style="padding-left: 30px;"><a href="https://pythonbasics.org/flask-sessions/">https://pythonbasics.org/flask-sessions/</a></p>
<p>加入 flask session 與 request 之後, 可以記錄電腦亂數產生的剪刀石頭或布, 並透過  URL 取得使用者輸入:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask, session, request
# in order to save computer generated data, import session
# in order to get user URL input, import request
import random
import os


app = Flask(__name__)
# to get session working need to set secret_key for app
app.secret_key = os.urandom(32)

@app.route('/')
def hello_world():
    return 'Hello, World!'
 
# convert 0, 1, 2 into "scissor, rock or paper"
def srp(number):
    data = ["scissor", "rock", "paper"]
    return data[number]
     
@app.route('/computer')
def computer():
    # must retrun sting
    # random number 1, 2, 3
    #computer generated data: cgd
    user = request.args.get('user')
    cgd = srp((random.randint(0,2)))
    session["computer"] = cgd
    return "computer: " + str(cgd) + " and user: " + str(user)

@app.route('/compare')
def compare():
    if session.get('computer') != None:
        # get cgd from session
        return session.get('computer')
    else:
        return "no computer session"
        
 
app.run(host='127.0.0.1', port=5000)</pre>
<p>上列 Flask 網際程式只要再納入 computer 與 user 出拳內容的輸贏比較, 就可以得出結果, 讓使用者與電腦對玩.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
default user input is 'scissor'
http://localhost:5000
http://localhost:5000/?user=paper
'''
from flask import Flask, session, request
# in order to save computer generated data, import session
# in order to get user URL input, import request
import random
import os
 
 
app = Flask(__name__)
# to get session working need to set secret_key for app
app.secret_key = os.urandom(32)

def compare(computer, user):
    if computer == user:
        return("It's a tie!")
    elif computer == 'rock':
        if user == 'scissor':
            return("Computer wins!")
        else:
            # user = 'paper'
            return("Human wins!")
    elif computer == 'scissor':
        if user == 'paper':
            return("Computer win!")
        else:
            #user = 'rock'
            return("Human wins!")
    elif computer == 'paper':
        if user == 'rock':
            return("Computer wins!")
        else:
            #user ='scissor'
            return("Human win!")
    else:
        return("Invalid input! You have not entered rock, paper or scissor, try again.")
    
@app.route('/index')
def index():
    return 'Hello, World!'
  
# convert 0, 1, 2 into "scissor, rock or paper"
def srp(number):
    data = ["scissor", "rock", "paper"]
    return data[number]
      
@app.route('/')
def computer():
    # must retrun sting
    # random number 1, 2, 3
    #computer generated data: cgd
    user = request.args.get('user')
    # dedault user input is 'scissor'
    if user == None:
        user = 'scissor'
    cgd = srp((random.randint(0,2)))
    session["computer"] = cgd
    # compare message
    cp = compare(cgd, user)
    result = "default user input is 'scissor', add ?user=rock or ?user=paper to change user input &lt;br /&gt;&lt;br /&gt;"
    result += "computer: " + str(cgd) + " and user: " + str(user) + "&lt;br /&gt;&lt;br /&gt;"
    result += cp
    return result
 
@app.route('/check')
def check():
    if session.get('computer') != None:
        # get cgd from session
        return session.get('computer')
    else:
        return "no computer session"
         
  
app.run(host='127.0.0.1', port=5000)</pre>
<p>為了將上述網際程式部署到 Heroku, 必須將 port 改為 8080, 而且加上 <a href="https://github.com/mdecourse/scissor-rock-paper2/blob/main/Procfile">Procfile</a>, <a href="https://github.com/mdecourse/scissor-rock-paper2/blob/main/runtime.txt">runtime.txt</a> 與 <a href="https://github.com/mdecourse/scissor-rock-paper2/blob/main/requirements.txt">requirements.txt</a> 成為 <a href="https://github.com/mdecourse/scissor-rock-paper2">https://github.com/mdecourse/scissor-rock-paper2</a></p>
<p>部署到 Heroku 後成為: <a href="https://scissor-rock-paper2.herokuapp.com/?user=rock">https://scissor-rock-paper2.herokuapp.com/?user=rock</a></p>
<p>或者以 default user = 'scissor' 執行: <a href="https://scissor-rock-paper2.herokuapp.com/">https://scissor-rock-paper2.herokuapp.com/</a></p>
<p></p>
<p></p><h3>Flask-Flutter</h3>
<p>利用 Flutter 當作前端, Flask 當作後端, 可以簡化機械設計工程師在收集與產品開發相關過程中許多工作.</p>
<p>問題在於, 要建立一套合用的 Windows Flutter 可攜程式開發工具並不簡單, 而且只能用於開發 Android 專用的手機程式, 若要利用 Flutter 開發 iphone 上的 App, 則可以透過 <a href="https://medium.com/flutter-community/deploying-flutter-ios-apps-with-fastlane-and-github-actions-2e87465e056e">https://medium.com/flutter-community/deploying-flutter-ios-apps-with-fastlane-and-github-actions-2e87465e056e</a></p>
<p>其他參考資料:</p>
<p style="padding-left: 30px;"><a href="https://medium.com/@johnkinyanjuiwanjiru/starting-my-journey-with-python-flutter-part-1-6cbf18c2353d">https://medium.com/@johnkinyanjuiwanjiru/starting-my-journey-with-python-flutter-part-1-6cbf18c2353d</a></p>
<p style="padding-left: 30px;"><a href="https://medium.com/@johnkinyanjuiwanjiru/python-flutter-part-2-4689f15d2072">https://medium.com/@johnkinyanjuiwanjiru/python-flutter-part-2-4689f15d2072</a></p>
<p style="padding-left: 30px;"><a href="https://medium.com/@pyzimos/flutter-chatbot-with-python-flask-backend-heroku-deployment-706baafbb8f1">https://medium.com/@pyzimos/flutter-chatbot-with-python-flask-backend-heroku-deployment-706baafbb8f1</a></p>
<p style="padding-left: 30px;"><a href="https://heartbeat.fritz.ai/digit-recognizer-with-flutter-and-tensorflow-lite-33f5145b5f32">https://heartbeat.fritz.ai/digit-recognizer-with-flutter-and-tensorflow-lite-33f5145b5f32</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/Deploy-ML-model">https://github.com/mdecourse/Deploy-ML-model</a></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/9HaIGMyAyug" width="560"></iframe></p><h3>HW4</h3>
<p>我們是否能夠透過 <a href="https://flask.palletsprojects.com/en/1.1.x/">Flask</a>, 將 <a href="http://mde.tw/cp2020/content/HW3.html">HW3</a> 所寫的程式轉為網際架構, 並且部署在 <a href="https://ubuntu.com/">Ubuntu</a> 20.04 與 <a href="https://www.heroku.com/">Heroku</a>?</p>
<h4>參考:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/nfulist">https://github.com/mdecourse/nfulist</a></p>
<p style="padding-left: 30px;">四技設一甲計算機程式學員名單:</p>
<p style="padding-left: 60px;"><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762</a></p>
<p style="padding-left: 30px;">四技設一乙計算機程式學員名單:</p>
<p style="padding-left: 60px;"><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/lab/blog/use-github-and-gitlab-pages.html">同步資料到 gitlab</a></p>
<p style="padding-left: 30px;">用 <a href="https://www.authorea.com/">Authorea</a> 寫分組報告</p>
<p><a href="https://raw.githubusercontent.com/mdecourse/nfulist/master/wsgi.py">https://raw.githubusercontent.com/mdecourse/nfulist/master/wsgi.py</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask, request 
from flask_cors import CORS
  
import requests
import bs4
#import ssl
  
'''
https://nfulist.herokuapp.com/?semester=1082&amp;courseno=0767
cd
2a 1082/0767
2b 1082/0780
  
2a 1072/0777
2b 1072/0790
2a 1062/0788
2a 1062/0802
  
wcm
1082/0744
  
1072/0754
1062/0765
  
wcmj
1082/2418
'''
  
app = Flask(__name__)
CORS(app)
  
@app.route('/studlist')
@app.route('/')
def studlist():
    semester = request.args.get('semester')
    courseno = request.args.get('courseno')
    if semester == None:
        semester = '1082'
    if courseno == None:
        courseno = '0744'
    
    headers = {'X-Requested-With': 'XMLHttpRequest'}

    url = 'https://qry.nfu.edu.tw/studlist_ajax.php'
    post_var = {'pselyr': semester, 'pseqno': courseno}
  
    result = requests.post(url, data = post_var, headers = headers)
    soup = bs4.BeautifulSoup(result.content, 'lxml')
    table = soup.find('table', {'class': 'tbcls'})
    data = []
    rows = table.find_all('tr')
    for row in rows:
        cols = row.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values
    output = ""
    for i in data[2:]:
        #print(i[0])
        output +=i[0] + "\n"
    return output
    #return  str(pselyr) + " + " +str(pseqno)
  
# 即使在近端仍希望以 https 模式下執行
#context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
#context.load_cert_chain('localhost.crt', 'localhost.key')
  
if __name__ == '__main__':
    app.run(host='127.0.0.1', port=8080, debug=True)</pre>
<h3>TeX</h3>
<p>寫 LaTeX 轉為 PDF 之後, 再透過 <a href="https://github.com/mdecourse/pdf2htmlEX">https://github.com/mdecourse/pdf2htmlEX</a> 轉為 html.</p><h1>Python</h1>
<p>Principles of Computation with Python:</p>
<p style="padding-left: 30px;"><a href="https://oli.cmu.edu/courses/principles-of-computation-with-python-open-free/">https://oli.cmu.edu/courses/principles-of-computation-with-python-open-free/</a></p>
<p><img alt="" class="add_border" height="891" src="/images/intro_programming_with_python.png" width="600"/></p>
<p>請利用學校所配發的 @gm 電子郵件帳號登入 <a href="https://kaggle.com">https://kaggle.com</a>, 並且連結至 <a href="https://www.kaggle.com/learn/python">https://www.kaggle.com/learn/python</a> 就可以開始 在 <a href="https://www.kaggle.com/notebooks">https://www.kaggle.com/notebooks</a> 網際環境中學習 Python 程式語言.</p>
<p>例如:</p>
<p style="padding-left: 30px;"><a href="https://www.kaggle.com/kevinelong/introduction-to-computer-programming-review/execution">https://www.kaggle.com/kevinelong/introduction-to-computer-programming-review/execution</a></p>
<p style="padding-left: 30px;"><a href="https://www.kaggle.com/mdecourse/cp2020">https://www.kaggle.com/mdecourse/cp2020</a></p>
<p style="padding-left: 30px;"><a href="https://www.kaggle.com/abinesh100/easy-download-images-in-25-lines-py3">https://www.kaggle.com/abinesh100/easy-download-images-in-25-lines-py3</a></p>
<p>除了 <a href="https://kaggle.com">https://kaggle.com</a> 與 <a href="https://colab.research.google.com">https://colab.research.google.com</a> 執行並學習 Python 外, 本課程將要求學員在 <a href="https://pages.github.com/">Github Pages</a> 與 <a href="https://docs.gitlab.com/ee/user/project/pages/">Gitlab Pages</a> 中建立個人靜態網頁, 並將網際動態 Python 系統部署在 <a href="https://www.heroku.com/">Heroku,</a> 分組協同報告則利用 <a href="https://www.authorea.com/">Authorea</a> 編輯發布.</p>
<p>其他學習 Python 的方式:</p>
<ol>
<li>直接在操作系統中安裝 Python 解譯器與編輯器</li>
<li>利用可攜程式系統中的 Python 解譯器與編輯器</li>
<li>直接在網際環境中搭建 Brython 程式環境</li>
<li>直接在網際環境中搭建 Jupyter Notebook 程式環境</li>
</ol>
<p>不同程式環境中的組態設定與功能差異</p>
<p>其他參考教材:</p>
<p style="padding-left: 30px;"><a href="https://www.py4e.com/">https://www.py4e.com/</a></p>
<p style="padding-left: 30px;"><a href="https://automatetheboringstuff.com/">https://automatetheboringstuff.com/</a></p><h2>工作流程</h2>
<p>建立 CP 2020 課程網頁</p>
<ol>
<li style="padding-left: 30px;">以 mdecourse 帳號登入 github.com</li>
<li style="padding-left: 30px;">建立 cp2020 空倉儲, 選擇由系統建立 README.md (延伸題目: 假如不新 README.md, 則又該如何操作?）</li>
<li style="padding-left: 30px;">在近端啟動隨身程式系統 (或者自行在操作系統安裝所需套件)</li>
<li style="padding-left: 30px;">將遠端的 cp2020 倉儲 git clone 到近端 (延伸題目: git clone 是甚麼?)</li>
<li style="padding-left: 30px;">利用 git submodule add 導入 cmsimde 當作目錄</li>
<li style="padding-left: 30px;">從近端 cmsimde 目錄中取出 up_dir 中的內容至 cp2020 倉儲根目錄</li>
<li style="padding-left: 30px;">在近端可以進入 cmsimde 目錄, 以 python wsgi.py 啟動動態網頁 (延伸題目: 何謂動態網頁? 有何功能?)</li>
<li style="padding-left: 30px;">在近端編輯動態網頁內容後, 轉為靜態網頁 (如何轉?)</li>
<li style="padding-left: 30px;">完成靜態網頁轉換之後, 利用近端 git 指令將新版本新增, 提交並推送到遠端</li>
</ol>
<p>在近端編寫第一個 Python 程式, 每修改一次都利用 git 進行提交, 修改並提交 4 次後, 可以在任何版本下回復到先前的任一版本內容.</p>
<p style="padding-left: 30px;"><a href="/downloads/cphw1.7z">cphw1.7z</a></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">i = 1

print(i)</pre>
<p>進入 y:\tmp\cphw1 從 git init 開始</p>
<p>每一次改版, i  增量 1</p>
<p>git add .</p>
<p>git commit -m "i=1"</p>
<p>git push</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Y:\tmp\cphw1&gt;git log
commit cb568bc032bb4e4364c347b5b6225c7849450c5f (HEAD -&gt; master)
Author: mdecourse &lt;mdecourse@gmail.com&gt;
Date:   Wed Aug 26 15:18:39 2020 +0800

    i=4

commit d9ef5402c330aac9791a9cd20403ad583854ceb6
Author: mdecourse &lt;mdecourse@gmail.com&gt;
Date:   Wed Aug 26 15:18:19 2020 +0800

    i=3

commit 4b40d3a60e7e37b7847d9fb70c3a0380ab20f9fe
Author: mdecourse &lt;mdecourse@gmail.com&gt;
Date:   Wed Aug 26 15:17:56 2020 +0800

    i=2

commit 1852efb2003bd52c4baa27cc7f0c38b8faf55d14
Author: mdecourse &lt;mdecourse@gmail.com&gt;
Date:   Wed Aug 26 15:17:27 2020 +0800

    i=1</pre>
<p style="padding-left: 30px;">在近端使用電腦儲存檔案, 最理想的情況是要利用 git 或 Fossil SCM 等分散式版次管理套件, 將各版本的內容進行提交並註記改版緣由之後, 再從近端推送到遠端.</p>
<p style="padding-left: 30px;">使用分散式版次管理的目的</p>
<p style="padding-left: 60px;">可以註記每次改版的提交者, 並能利用 git checkout 到先前的各版本</p>
<p style="padding-left: 60px;">資料存一份在遠端, 避免因為近端電腦損毀而丟失資料.</p>
<h3>cmsimde 問題</h3>
<p>以下的問題發生在子模組版次無法擷取, 導致倉儲無法通過 Github Pages 轉檔. 以 git clone --recurse-submodules 取下倉儲檔案時無子模組 cmsimde.</p>
<p><img alt="" height="320" src="/images/40923203_cmsimde_error.png" width="800"/></p>
<p>這時必須要利用 git cat-file 查出 tree object 的板次號, 以確認目前倉儲希望擷取的 cmsimde 版次序號.</p>
<p><img alt="" height="402" src="/images/40923203_git_cat-file.png" width="800"/></p>
<p>從下列畫面可以查出 cmsimde 欲擷取的版次並非 cmsimde 子模組的任一版次</p>
<p><img alt="" height="402" src="/images/40923203_find_cmsimde_version.png" width="800"/></p>
<p>一旦利用 git checkout 取下最新的 cmsimde 版次後, 就可以新增提交並推送到 Github 測試.</p>
<p><img alt="" height="470" src="/images/40923203_checkout_new_cmsimde_version.png" width="800"/></p><h2>亂數分組</h2>
<p>在 <a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776&amp;column=True">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776&amp;column=True</a> 新增一個 column 變數, 若 column=True, 則將 \n 換為 &lt;/br&gt;, 則以 column 格式列出資料.</p>
<p>nfulist: <a href="https://github.com/mdecourse/nfulist">https://github.com/mdecourse/nfulist</a></p>
<p>在 Heroku 以 scrum2 At mde 登記.</p>
<p>亂數分組:</p>
<p>semester=1091</p>
<p>courseno=0762</p>
<p>cp</p>
<p>1a 1091/0762</p>
<p>1b 1091/0776</p>
<p>cad</p>
<p>2a 1091/0788</p>
<p>2b 1091/0801</p>
<p>學員名單 URL: <input id="studListUrl" size="60" type="text" value="https://nfulist.herokuapp.com?semester=1091&amp;courseno=0788"/><br/> 課程代號: <input id="courseName" size="15" type="text" value="cp2020"/><br/> <input id="submit" type="submit" value="開始分組"/><br/> <textarea cols="80" id="output" rows="10"></textarea></p>
<script src="/downloads/dart/random_grouping/random_grouping.js"></script>
<p>四技設一甲計算機程式學員名單:</p>
<p style="padding-left: 30px;"><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762</a></p>
<p>四技設一乙計算機程式學員名單:</p>
<p style="padding-left: 30px;"><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776</a></p>
<p>部署至 <a href="https://www.heroku.com/">Heroku</a> 的原始碼: <a href="https://github.com/mdecourse/nfulist">https://github.com/mdecourse/nfulist</a></p>
<p><a href="http://mde.tw/lab/content/%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.html">參考資料</a></p>
<p>get_student_list.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import 'dart:html';
  
  InputElement studListUrl = querySelector("#studListUrl");
  String studUrl;
  InputElement courseName = querySelector("#courseName");
  String cName;
  // 將 Label 改為 Textarea, 避免產生過程結果嵌入所在頁面
  TextAreaElement output = querySelector("#output");
  
main() {
  querySelector("#submit").onClick.listen((e) =&gt; grouping());
}
  
grouping() {
  output.innerHtml = "";
  
  if (studListUrl.value != "") {
    studUrl = studListUrl.value;
  } else {
    studUrl = 'https://nfulist.herokuapp.com';
  }
  
  if (courseName.value != "") {
	cName = courseName.value;
  } else {
	cName = "cp2020";
  }
  
  // 組序由 1 開始
  int gth = 1;
  // 迴圈序號變數
  int i;
  int j;
  int total;
  int inc;
  // 每組學員暫存數列
  var gpList = [];
  // 全班分組數列
  var group = [];
  // 各組人數數列
  var numList = [];
  
  HttpRequest.getString(studUrl).then((String resp) {
    // 利用 trim() 去除字串最後的跳行符號, 之後再利用 split() 根據 \n 轉為數列
    var studList = resp.trim().split("\n");
    // 數列利用 shuffle() 方法以隨機方法弄亂順序
    studList.shuffle();
    total = studList.length;
    output.text += "全班總計" + total.toString() + " 人\n";
    numList = getNumList(studList.length);
    inc = 0;
    for (i in numList){
      // 列印區隔符號
      output.text += '=' * 20 + "\n";
      output.text += "group $gth 有 " + i.toString() + " 人: \n";
      gpList = [];
      for (j = 0; j &lt; i; j++){
        output.text += studList[j+inc] + "\n";
        // 在各分組數列中加入將對應的學員學號
        gpList.add(studList[j+inc]);
      }
      gth = gth + 1;
      inc = inc + j;
        //output.text += studList[j] + "\n";
        // 逐步將各組暫存的分組數列加入全班分組數列中
      gpList.sort();
      group.add(gpList);
    }
    // 列出全班分組數列
    output.text += group.toString() + "\n";
    // 列出已經排序後的分組名單
    output.text += '=' * 25 + "\n";
    output.text += '以下為排序後的各組成員名單: \n';
    gth = 1;
    /*
    404231
    s4052
    4062
    s4072
    4082
    5072
    5083
    */
    // 先列出純文字以 \n 跳行組員資料
    for (i=0; i &lt; group.length; i++){
      // 列印區隔符號
      output.text += '=' * 20 + "\n";
      output.text += "group $gth \n";
      gpList = [];
      for (j=0; j &lt; group[i].length; j++){
        output.text += group[i][j] + "\n";
      }
      gth = gth + 1;
    }
     
    gth = 1;
    // 最後列出超文件以 &lt;br\&gt; 跳行組員資料, 包含倉儲與網站
    for (i=0; i &lt; group.length; i++){
      // 列印區隔符號
      output.text += '\n' + '=' * 30 + "&lt;br \&gt;";
      output.text += "group $gth &lt;br \&gt;";
      gpList = [];
      for (j=0; j &lt; group[i].length; j++){
          if (group[i][j].startsWith('4052') || group[i][j].startsWith('4072')) {
              output.text += "Repository: &lt;a href='https://github.com/s" + 
                                      group[i][j] + "/" + cName + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;" + " | Site: &lt;a href='https://s" + group[i][j] + 
                                      ".github.io/" + cName + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;&lt;br \&gt;";
          }
          else {
              output.text += "Repository: &lt;a href='https://github.com/" + 
                                      group[i][j] + "/" + cName +"'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;" + " | Site: &lt;a href='https://" + group[i][j] + 
                                      ".github.io/" + cName + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;&lt;br \&gt;";
          }
      }
      gth = gth + 1;
    }
  });
}
  
List getNumList(int total){
  // total student number
  // int total = 65;
  // initial each group expect to be "eachGrp" number of people
  int eachGrp = 10;
  // may divide into "grpNum" number of group
  int grpNum = total ~/ eachGrp;
  // vacant list
  var splits = [];
  // find remainder when total number divid into "grpNum" number of group
  int remainder = total % grpNum;
  // number of people in one group by calculation
  int calGrp = total ~/ grpNum;
  
  for (int i = 0; i &lt; grpNum; i++) {
    splits.add(calGrp);
  }
  //print(splits);
  
  for (int i = 0; i &lt; remainder; i++) {
    splits[i] += 1;
  }
  //print(splits);
  return splits;
 }</pre>
<p>index.html</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;h4&gt;亂數分組:&lt;/h4&gt;
學員名單 URL: &lt;input type="text" id="studListUrl" size="60" value="https://nfulist.herokuapp.com"&gt;&lt;br /&gt;
課程代號: &lt;input type="text" id="courseName" size="15" value="cp2020"&gt;&lt;br /&gt;
&lt;input type="submit" value="開始分組" id="submit"&gt;&lt;br /&gt;
&lt;textarea id="output" cols="80" rows="10"&gt;&lt;/textarea&gt;</pre>
<p>style.css</p>
<pre class="brush:css;auto-links:false;toolbar:false" contenteditable="false">body {
  color: white;
  font-size: 20px;
}
 
input, select, textarea {
font-size: 100%;
}</pre>
<p>even_grouping.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random
import requests
  
# getNumList 主要在每組最低人數下, 將不足 10 人的分組
# 平均分配至各組
def getNumList(total, eachGrp=10):
    # total is the number of students
    # each group at least 10 students
    #eachGrp = 10;
    # may divide into "grpNum" number of group
    grpNum = total // eachGrp;
    # check grpNum
    #print(grpNum)
    # vacan list
    splits = []
    # find remainder when total number divid into "grpNum" number of group
    remainder = total % grpNum
    # number of people in one group by calculation
    calGrp = total // grpNum
      
    for i in range(grpNum):
        splits.append(calGrp)
          
    # check first splits
    #print(splits)
    
    for i in range(remainder):
        splits[i] += 1
      
    # check final splits
    #print(splits);
    return splits;
  
# 儲存學生名單資料的 url
target_url = "http://mde.tw/cp2020/downloads/get_student_list/2020spring_cd_2a_list.txt"
# 利用 requests 讀取 url 中的資料
f = requests.get(target_url)
# get student list from target_url
# 利用 splitlines() 將資料放入數列 studList
studList = f.text.splitlines()
# 每組預計分組的最低人數
num_in_one_group = 10
# 每組學員暫存數列
gpList = []
# 全班分組數列
group = []
# 各組人數數列
numList = []
# get numList
numList = getNumList(len(studList), num_in_one_group)
# check numList
# 列出已經補齊的各組人數數列
print("預計各組人數數列:" + str(numList))
  
output = ""
gth = 1
inc = 0
  
# 弄亂 studList
random.shuffle(studList)
output += "以下為尚未排序前的各組學員學號: \n"
for i in numList:
    # 列印區隔符號
    output += '=' * 20 + "\n";
    output += "group " + str(gth) + " 有 " + str(i) + " 人: \n"
    # 每組學員暫存數列, 在此 reset
    gpList = []
    for j in range(i):
        output += studList[j+inc] + "\n"
        # 在各分組數列中加入將對應的學員學號
        gpList.append(studList[j+inc])
        
    gth = gth + 1
    inc = inc + j
    # 將各組學員數列依照學號排序
    gpList.sort()
    group.append(gpList)
  
# 列出尚未排序前的分組結果
print(output)
# 列出已經完成排序的分組數列
print("已經排序後的分組數列:" + str(group))
  
output = ""
# 列出已經排序後的分組名單
output += '=' * 25 + "\n"
output += '以下為排序後的各組成員名單:\n'
gth = 1
  
# 先列出純文字以 \n 跳行組員資料
for i in range(len(group)):
    # 列印區隔符號
    output += '=' * 20 + "\n"
    output += "group" + str(gth) + "\n"
    gpList = []
      
    for j in range(len(group[i])):
        output += str(group[i][j]) + "\n"
        
    gth = gth + 1
      
print(output)</pre>
<h4>使用 Brython</h4>
<p><a href="http://mde.tw/lab/content/Python.html">http://mde.tw/lab/content/Python.html</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 利用 Brython 內建的 open 開啟 url 後, 以 read() 將資料取出
output = open('http://mde.tw/cp2020/downloads/get_student_list/2020spring_cd_2a_list.txt').read()
# 利用 print  將 output 資料列出
print(output)</pre>
<p></p><h2>KMOLBrowser</h2>
<p>利用 <a href="https://www.qt.io/qt-for-python">pyside2</a> 編寫的網際瀏覽器:</p>
<p>KMOLBrowser 原始碼來自 <a href="https://github.com/ralsina/devicenzo">https://github.com/ralsina/devicenzo</a>, 為了用於 KMOLab 中 cmsimde self-signed certificate 近端或遠端編輯, 特別使用 ignoreCertificateError(), 讓網頁可以直接導入. 執行時可攜系統需要 pip install pyside2</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#!/usr/bin/env python3
"""
source from: https://github.com/ralsina/devicenzo
"""

import json
import os
import sys

from PySide2 import QtCore, QtGui, QtNetwork, QtWebEngineWidgets, QtWidgets

settings = QtCore.QSettings("ralsina", "devicenzo")


def set_ssl_protocol():
    default_config = QtNetwork.QSslConfiguration.defaultConfiguration()
    default_config.setProtocol(QtNetwork.QSsl.TlsV1_2)
    QtNetwork.QSslConfiguration.setDefaultConfiguration(default_config)


class WebEnginePage(QtWebEngineWidgets.QWebEnginePage):
    def certificateError(self, certificateError):
        """according to https://doc.qt.io/qtforpython/PySide2/QtWebEngineWidgets/QWebEngineCertificateError.html#PySide2.QtWebEngineWidgets.PySide2.QtWebEngineWidgets.QWebEngineCertificateError.ignoreCertificateError
        #PySide2.QtWebEngineWidgets.QWebEngineCertificateError.ignoreCertificateError()
        # here we allow self-signed certificate to load the web site directly
        """
        certificateError.ignoreCertificateError()
        return super(WebEnginePage, self).certificateError(certificateError)
        
        # the following is for printing error message and types
        print(certificateError.errorDescription(), certificateError.url(), certificateError.isOverridable())
        error = certificateError.error()
        if error == QtWebEngineWidgets.QWebEngineCertificateError.SslPinnedKeyNotInCertificateChain:
            print("SslPinnedKeyNotInCertificateChain")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateCommonNameInvalid:
            print("CertificateCommonNameInvalid")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateDateInvalid:
            print("CertificateDateInvalid")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateAuthorityInvalid:
            print("CertificateAuthorityInvalid")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateContainsErrors:
            print("CertificateContainsErrors")
        if error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateNoRevocationMechanism:
            print("CertificateNoRevocationMechanism")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateUnableToCheckRevocation:
            print("CertificateUnableToCheckRevocation")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateRevoked:
            print("CertificateRevoked")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateInvalid:
            print("CertificateAuthorityInvalid")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateWeakSignatureAlgorithm:
            print("CertificateWeakSignatureAlgorithm")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateNonUniqueName:
            print("CertificateNonUniqueName")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateWeakKey:
            print("CertificateWeakKey")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateNameConstraintViolation:
            print("CertificateNameConstraintViolation")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateValidityTooLong:
            print("CertificateValidityTooLong")
        elif error == QtWebEngineWidgets.QWebEngineCertificateError.CertificateTransparencyRequired:
            print("CertificateTransparencyRequired")

        return super(WebEnginePage, self).certificateError(certificateError)
        

class MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super(MainWindow, self).__init__()
        self.tabs = QtWidgets.QTabWidget(
            self, tabsClosable=True, movable=True, elideMode=QtCore.Qt.ElideRight
        )
        self.tabs.tabCloseRequested.connect(
            lambda idx: self.tabs.widget(idx).deleteLater()
        )
        self.tabs.currentChanged.connect(self.currentTabChanged)
        self.close_current_tab = QtWidgets.QAction(shortcut=QtGui.QKeySequence.Close)
        self.close_current_tab.triggered.connect(
            lambda: self.tabs.currentWidget().deleteLater()
        )
        self.addAction(self.close_current_tab)
        self.setCentralWidget(self.tabs)
        self.bars = {}
        self.star_action = QtWidgets.QAction(
            QtGui.QIcon.fromTheme("user-bookmarks"),
            "Bookmark",
            self,
            checkable=True,
            triggered=self.bookmarkPage,
            shortcut="Ctrl+d",
        )
        self.tabs.setCornerWidget(
            QtWidgets.QToolButton(
                self,
                text="New Tab",
                icon=QtGui.QIcon.fromTheme("document-new"),
                clicked=lambda: self.addTab().url.setFocus(),
                shortcut=QtGui.QKeySequence.AddTab,
            )
        )
        self.full_screen_action = QtWidgets.QAction(
            "Full Screen", self, checkable=True, shortcut=QtGui.QKeySequence.FullScreen
        )
        self.full_screen_action.toggled.connect(
            lambda v: self.showFullScreen() if v else self.showNormal()
        )
        self.addAction(self.full_screen_action)
        self.bookmarks = self.get("bookmarks", {})
        # Bookmarks seem broken
        self.bookmarkPage()  # Load the bookmarks menu
        self.history = self.get("history", []) + list(self.bookmarks.keys())
        self.completer = QtWidgets.QCompleter(self.history)

        # Downloads bar at the bottom of the window
        self.downloads = QtWidgets.QToolBar("Downloads")
        self.addToolBar(QtCore.Qt.BottomToolBarArea, self.downloads)

        # Proxy support
        proxy_url = QtCore.QUrl(os.environ.get("http_proxy", ""))
        QtNetwork.QNetworkProxy.setApplicationProxy(
            QtNetwork.QNetworkProxy(
                QtNetwork.QNetworkProxy.HttpProxy
                if proxy_url.scheme().startswith("http")
                else QtNetwork.QNetworkProxy.Socks5Proxy,
                proxy_url.host(),
                proxy_url.port(),
                proxy_url.userName(),
                proxy_url.password(),
            )
        ) if "http_proxy" in os.environ else None

        [self.addTab(QtCore.QUrl(u)) for u in self.get("tabs", [])]

    def finished(self):
        url = self.sender().url().toString()
        bar, reply, fname, cancel = self.bars[url]
        redirURL = reply.attribute(
            QtNetwork.QNetworkRequest.RedirectionTargetAttribute
        ).toString()
        del self.bars[url]
        bar.deleteLater()
        cancel.deleteLater()
        if redirURL and redirURL != url:
            return self.fetch(redirURL, fname)

        with open(fname, "wb") as f:
            f.write(str(reply.readAll()))

    def progress(self, received, total):
        self.bars[self.sender().url().toString()][0].setValue(100.0 * received / total)

    def closeEvent(self, ev):
        self.put("history", self.history)
        self.put(
            "tabs", [self.tabs.widget(i).url.text() for i in range(self.tabs.count())]
        )
        return QtWidgets.QMainWindow.closeEvent(self, ev)

    def put(self, key, value):
        "Persist an object somewhere under a given key"
        settings.setValue(key, json.dumps(value))
        settings.sync()

    def get(self, key, default=None):
        "Get the object stored under 'key' in persistent storage, or the default value"
        v = settings.value(key)
        return json.loads(v) if v else default

    def addTab(self, url=QtCore.QUrl("")):
        self.tabs.setCurrentIndex(self.tabs.addTab(Tab(url, self), ""))
        return self.tabs.currentWidget()

    def currentTabChanged(self, idx):
        if self.tabs.widget(idx) is None:
            return self.close()

        self.setWindowTitle(self.tabs.widget(idx).web_view.title() or "De Vicenzo")

    def bookmarkPage(self, v=None):
        if v and v is not None:
            self.bookmarks[
                self.tabs.currentWidget().url.text()
            ] = self.tabs.currentWidget().web_view.title()
        elif v is not None:
            del (self.bookmarks[self.tabs.currentWidget().url.text()])
        self.star_action.setMenu(QtWidgets.QMenu())
        [
            self.star_action.menu().addAction(
                QtWidgets.QAction(
                    title,
                    self,
                    triggered=lambda u=QtCore.QUrl(url): self.tabs.currentWidget().load(
                        u
                    ),
                )
            )
            for url, title in self.bookmarks.items()
        ]
        self.put("bookmarks", self.bookmarks)

    def addToHistory(self, url):
        self.history.append(url)
        self.completer.setModel(
            QtCore.QStringListModel(
                list(set(list(self.bookmarks.keys()) + self.history))
            )
        )


class Tab(QtWidgets.QWidget):
    def __init__(self, url, container):
        super(Tab, self).__init__()
        self.container = container
        self.web_view = QtWebEngineWidgets.QWebEngineView()
        self.progress_bar = QtWidgets.QProgressBar(
            self.container.statusBar(), maximumWidth=120, visible=False
        )
        self.web_view.loadProgress.connect(
            lambda v: (self.progress_bar.show(), self.progress_bar.setValue(v))
            if self.amCurrent()
            else None
        )
        self.web_view.loadFinished.connect(self.progress_bar.hide)
        self.web_view.loadStarted.connect(
            lambda: self.progress_bar.show() if self.amCurrent() else None
        )
        self.web_view.titleChanged.connect(
            lambda t: container.tabs.setTabText(container.tabs.indexOf(self), t)
            or (container.setWindowTitle(t) if self.amCurrent() else None)
        )
        self.web_view.iconChanged.connect(
            lambda: container.tabs.setTabIcon(
                container.tabs.indexOf(self), self.web_view.icon()
            )
        )
        self.tb = QtWidgets.QToolBar("Main Toolbar", self)

        layout = QtWidgets.QVBoxLayout()
        layout.setContentsMargins(0, 0, 0, 0)
        layout.addWidget(self.tb, stretch=0)
        layout.addWidget(self.web_view, stretch=1000)
        layout.activate()
        self.setLayout(layout)
        for a, sc in [
            [QtWebEngineWidgets.QWebEnginePage.Back, QtGui.QKeySequence.Back],
            [QtWebEngineWidgets.QWebEnginePage.Forward, QtGui.QKeySequence.Forward],
            [QtWebEngineWidgets.QWebEnginePage.Reload, QtGui.QKeySequence.Refresh],
        ]:
            self.tb.addAction(self.web_view.pageAction(a))
            self.web_view.pageAction(a).setShortcut(sc)

        def save_page(*a, view=self.web_view):
            destination = QtWidgets.QFileDialog.getSaveFileName(self, "Save Page")
            print(repr(destination))
            if destination:
                view.page().save(destination[0])

        self.web_view.pageAction(
            QtWebEngineWidgets.QWebEnginePage.SavePage
        ).triggered.connect(save_page)

        self.url = QtWidgets.QLineEdit()
        self.url.returnPressed.connect(
            lambda: self.web_view.load(QtCore.QUrl.fromUserInput(self.url.text()))
        )
        self.url.setCompleter(container.completer)
        self.tb.addWidget(self.url)
        self.tb.addAction(container.star_action)

        self.web_view.urlChanged.connect(lambda u: self.url.setText(u.toString()))
        self.web_view.urlChanged.connect(lambda u: container.addToHistory(u.toString()))
        self.web_view.urlChanged.connect(
            lambda u: container.star_action.setChecked(
                u.toString() in container.bookmarks
            )
            if self.amCurrent()
            else None
        )

        self.web_view.page().linkHovered.connect(
            lambda l: container.statusBar().showMessage(l, 3000)
        )

        self.search = QtWidgets.QLineEdit(
            self.web_view, visible=False, maximumWidth=200
        )
        self.search.returnPressed.connect(
            lambda: self.web_view.findText(self.search.text())
        )
        self.search.textChanged.connect(
            lambda: self.web_view.findText(self.search.text())
        )
        self.showSearch = QtWidgets.QShortcut(QtGui.QKeySequence.Find, self)
        self.showSearch.activated.connect(
            lambda: self.search.show() or self.search.setFocus()
        )
        self.hideSearch = QtWidgets.QShortcut(
            "Esc", self, activated=lambda: (self.search.hide(), self.setFocus())
        )

        self.zoomIn = QtWidgets.QShortcut(QtGui.QKeySequence.ZoomIn, self)
        self.zoomIn.activated.connect(
            lambda: self.web_view.setZoomFactor(self.web_view.zoomFactor() + 0.2)
        )
        self.zoomOut = QtWidgets.QShortcut(QtGui.QKeySequence.ZoomOut, self)
        self.zoomOut.activated.connect(
            lambda: self.web_view.setZoomFactor(self.web_view.zoomFactor() - 0.2)
        )
        self.zoomOne = QtWidgets.QShortcut(
            "Ctrl+0", self, activated=lambda: self.web_view.setZoomFactor(1)
        )
        self.urlFocus = QtWidgets.QShortcut("Ctrl+l", self, activated=self.url.setFocus)

        page = WebEnginePage(self)
        self.web_view.setPage(page)
        page.load(QtCore.QUrl(url))
        


    def amCurrent(self):
        return self.container.tabs.currentWidget() == self

    def createWindow(self, windowType):
        return self.container.addTab()


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    wb = MainWindow()
    for url in sys.argv[1:]:
        wb.addTab(QtCore.QUrl.fromUserInput(url))
    if wb.tabs.count() == 0:
        wb.addTab(QtCore.QUrl("http://mde.tw"))
    wb.show()
    sys.exit(app.exec_())
</pre>
<p></p><h2>Kaggle</h2>
<p>請注意, 登入 Kaggle 時請使用學校配發的 @gm 帳號, 當程式在 Kaggle 執行時, 若需使用 GPU 或 Internet 資源時, 必須使用手機號碼進行驗證, 而每一個手機號碼只能驗證一個 Kaggle 帳號.</p>
<p><a href="https://www.kaggle.com/mdecourse/cp2020">https://www.kaggle.com/mdecourse/cp2020 </a></p>
<p><a href="https://www.kaggle.com/mdecourse/ml2020">https://www.kaggle.com/mdecourse/ml2020</a> </p>
<p><a href="https://di2.io/2019/03/is-kaggle-suitable-to-teach-programming-with-python/">https://di2.io/2019/03/is-kaggle-suitable-to-teach-programming-with-python/</a></p>
<p><a href="https://fayz.in/stories/s/1417/0/?ckt_id=ZGL1ZGVk&amp;title=Importance_of_github_kaggle">https://fayz.in/stories/s/1417/0/?ckt_id=ZGL1ZGVk&amp;title=Importance_of_github_kaggle</a></p>
<p><a href="https://www.programmersought.com/article/92261138300/">https://www.programmersought.com/article/92261138300/</a></p>
<p><a href="https://towardsdatascience.com/kaggle-for-beginners-getting-started-75decb43c0c0">https://towardsdatascience.com/kaggle-for-beginners-getting-started-75decb43c0c0</a></p>
<h4>Reference</h4>
<p style="padding-left: 30px;"><a href="https://awesomeopensource.com/project/apachecn/Interview">https://awesomeopensource.com/project/apachecn/Interview</a></p>
<p style="padding-left: 30px;"><a href="https://awesomeopensource.com/project/girls-in-ai/Girls-In-AI">https://awesomeopensource.com/project/girls-in-ai/Girls-In-AI</a></p>
<p style="padding-left: 30px;"><a href="https://awesomeopensource.com/project/Mikoto10032/DeepLearning">https://awesomeopensource.com/project/Mikoto10032/DeepLearning</a></p>
<p style="padding-left: 30px;"><a href="https://awesomeopensource.com/project/ypwhs/dogs_vs_cats">https://awesomeopensource.com/project/ypwhs/dogs_vs_cats</a></p><h3>cmsimde</h3>
<p>在 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 專案中, Flask 網際程式被用來建立動態內容管理系統, 並結合 bs4 與 lxml 模組功能, 將動態網頁轉為靜態網頁, 使用者可以將靜態網頁部署在 Github Pages, Gitlab Pages 或 Heroku. 而靜態網頁可以再結合 Leo Editor 大綱管理程式, 用於整合 pelian 網誌與 reveal.js 網際簡報系統.</p>
<p>CMSiMDE 是一套網際內容管理, 這裡所謂的網際指的是 Web-based, 也就是可以透過瀏覽器進行內容的管理.</p>
<p>CMSiMDE 的內容管理是透過 Python 程式結合 Flask 網際框架編寫而成, 從 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 可以見到其目錄結構:</p>
<p><span style="background-color: #ffff00;">static</span> 目錄主要放置網頁呈現內容所需的 Javascirpt</p>
<p><span style="background-color: #ffff00;">up_dir</span> 所放置的資料是使用者可以更動的內容</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">blog</span> 存放由 Pelican 網誌系統轉出的網誌檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">config</span> </p>
<p style="padding-left: 60px;"><span style="background-color: #ffff00;">config</span></p>
<p style="padding-left: 60px;">content.htm</p>
<p style="padding-left: 60px;">content_backup.htm</p>
<p style="padding-left: 60px;">pelican.leo</p>
<p style="padding-left: 60px;">reveal.leo</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">content</span> 存放由 generate_pages 按鈕所轉出的靜態網頁內容</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">downloads</span> 存放上傳檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">images</span> 存放上傳影像檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">markdown</span> 存放原始網誌 Markdown 檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">plugin</span> 存放 Pelican plugin 檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">reveal</span> 存放 reveal.js 網際簡報檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">templates</span> 存放 Flask templates 檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">theme</span> 存放 Pelican theme 檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">.gitignore</span> 宣告倉儲 ignore 檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">LICENSE</span> 倉儲使用授權</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">http-server.py</span> 用於靜態網頁檢視用的伺服程式</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">index.html</span> 靜態網頁的根目錄超文件檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">init.py</span> 用於設定 Flask 一般執行或 uwsgi 執行, 可用於修改靜態網頁 title</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">local_publishconf.py</span> 區網 Pelican 設定檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">pelicanconf.py</span> Pelican 設定檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">publishconf.py</span> 廣域網路的 Pelican 設定檔案</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">user.leo</span> 使用者開發 Leo Editor 所使用的專案檔</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;">user.py</span> 預計採用 Blueprint 架構開發的測試檔案</p>
<p>.gitignore</p>
<p>LICENSE</p>
<p>README.md</p>
<p>cmsimde.leo</p>
<p><span style="background-color: #ffff00;">flaskapp.py</span> 為 CMSiMDE 主程式</p>
<p>localhost.crt</p>
<p>localhost.key</p>
<p>nocache.py</p>
<p>wsgi.py</p>
<p></p><h3>pdf-project</h3>
<p><a href="https://github.com/mdecourse/cd2020pj1">https://github.com/mdecourse/cd2020pj1</a> </p>
<p>功能包括:</p>
<p>透過 authomatic 模組讓使用者以 oauth2 模式登入</p>
<ol>
<li>接受 pdf 檔案上傳至 Google Drive</li>
<li>可讓使用者直接在線上合併 pdfs 檔案或分割鎖上傳的 pdf 檔案</li>
</ol>
<h3>nfu-project</h3>
<p><a href="https://github.com/mdecourse/nfulist">https://github.com/mdecourse/nfulist</a></p>
<p>與 <a href="https://nfulist.herokuapp.com">https://nfulist.herokuapp.com</a> 網站資料同步</p>
<p><a href="https://nfulist.herokuapp.com/?semester=1082&amp;courseno=0767">https://nfulist.herokuapp.com/?semester=1082&amp;courseno=0767</a></p>
<p>heroku login</p>
<p>add _netrc to home</p>
<p>git add .</p>
<p>git commit -m "message"</p>
<p>git push heroku master</p>
<p>git remote add github <a href="https://github.com/mdecourse/nfulist.git">https://github.com/mdecourse/nfulist.git</a></p>
<p>git push github master</p>
<p>cp</p>
<p>1a 1091/0762</p>
<p>1b 1091/0776</p>
<p>cad</p>
<p>2a 1091/0788</p>
<p>2b 1091/0801</p>
<p>cd<br/>2a 1082/0767<br/>2b 1082/0780<br/> <br/>2a 1072/0777<br/>2b 1072/0790<br/>2a 1062/0788<br/>2a 1062/0802<br/> <br/>wcm<br/>1082/0744<br/> <br/>1072/0754<br/>1062/0765<br/> <br/>wcmj<br/>1082/2418</p>
<p></p>
<h4>Brython</h4>
<p><a href="https://github.com/BrythonServer/brython-server">https://github.com/BrythonServer/brython-server</a></p>
<p><a href="https://mdecp2018.github.io/finalproject-bgx">https://mdecp2018.github.io/finalproject-bgx</a></p>
<h2>Heroku</h2>
<h4>Heroku 與計算機程式</h4>
<p><a href="https://www.heroku.com/">https://www.heroku.com/</a> 是提供雲端應用程式服務的網站, 在計算機程式課程中, 可以透過 Heroku 內建伺服 PHP 的功能, 將 CMSiMDE 系統的靜態網站送到 Heroku 進行伺服, 也可以設法利用 Heroku 執行 CMSiMDE 的動態網站, 只是根據 Heroku 系統的規定, 每 24 小時雲端主機重啟之後, 非以 Git 提交推送的資料將會被 reset.</p>
<p>因此在未設定 persistent 資料儲存方案的 Heroku 應用, 只適合配置用於直接查詢會轉介其他系統資料的網際 Python 應用.</p>
<h4>Heroku 應用</h4>
<p>以下將列出在計算機程式課程中的三種 Heroku 應用:</p>
<ol>
<li>將 CMSiMDE 的靜態網頁送到 Heroku 伺服</li>
<li>利用 Heroku 配置 Webster 與 Wordnet 字典查詢服務 (透過 SQLite 資料庫)</li>
<li>利用 Heroku 上的 Flask 網際 ajax 程式, 從學校教務伺服器中取出課程相關資料</li>
</ol>
<h4>Heroku 示範倉儲與主機</h4>
<p><a href="https://github.com/mdecourse/scrum1-cmsimde">https://github.com/mdecourse/scrum1-cmsimde</a></p>
<p style="padding-left: 30px;"><a href="https://scrum1-cmsimde.herokuapp.com">https://scrum1-cmsimde.herokuapp.com</a> </p>
<p><a href="https://github.com/mdecourse/lookupdict">https://github.com/mdecourse/lookupdict</a></p>
<p style="padding-left: 30px;"><a href="https://lookupdict.herokuapp.com">https://lookupdict.herokuapp.com</a> </p>
<p><a href="https://github.com/mdecourse/nfulist">https://github.com/mdecourse/nfulist</a></p>
<p style="padding-left: 30px;"><a href="https://nfulist.herokuapp.com">https://nfulist.herokuapp.com</a> </p>
<p><a href="https://github.com/mdecourse/scrum1-2020cp1">https://github.com/mdecourse/scrum1-2020cp1</a></p>
<p style="padding-left: 30px;"><a href="http://scrum1-2020cp1.herokuapp.com/">http://scrum1-2020cp1.herokuapp.com/</a></p>
<h4>Heroku 操作</h4>
<p>登入 @gm <a href="https://drive.google.com/file/d/1itKaIPSdIRZQ-qiLkUpxEPOLzSpP3eNY/view?usp=sharing">下載 Heroku cli 可攜.7z</a>, 解開壓縮檔案後, 在 start.bat 中將 Heroku bin 設定指令搜尋路徑, 重新啟動後, 以 heroku version 確定指令可以正常執行後, heroku login 成功後, 登入帳號密碼會存入 home/_netrc 中. 之後便可直接透過 heroku cli 指令直接對遠端主機下命令.</p>
<p>在 IPv6 環境下工作:</p>
<p>start.bat 內容:</p>
<p>為了讓 Heorku Cli 可以直接執行, 需要設定 Heroku 命令搜尋路徑.</p>
<p>為了讓 Heroku Cli 指令可以使用 IPv4/IPv6 雙支援代理主機對外連線, 必須設定 HTTPS_PROXY 變數.</p>
<p>為了讓命令列中的 heroku login 可以順利帶出系統所設定的內定瀏覽器, 命令搜尋路徑在 Windows 10 中必須加入系統的 %path%.</p>
<p>目前一個 Heroku 帳號只能免費建立 5 個應用程式.</p>
<p>目前 Heroku 帳號綁定如下:</p>
<p>cp2020 -- mdecourse At Gmail</p>
<p>cad2020 -- heroku1 At Mde dot TW (含 cad2021 ~ cad2024)</p>
<p>cp2021 ~ cp2025 -- heroku2 At Mde dot TW</p>
<p>cad2025, mdecp, mdecad, mdewcm, mdecd -- heroku3 At Mde dot TW</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"

%Disk%:

set HomePath=%Disk%:\home
set HomeDrive=%Disk%:\home
set Home=%Disk%:\home
set USERPROFILE=%Disk%:\home

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%Disk%:\Python38\DLLs;%Disk%:\Python38\Lib;%Disk%:\Python38\Lib\site-packages;
set PYTHONHOME=%Disk%:\Python38

REM for ssh
set GIT_SSH=%Disk%:\putty\plink.exe

REM 設定跟 Python 有關的命令搜尋路徑
set path_python=%Disk%:\Python38;%Disk%:\Python38\Scripts;
REM for Heroku 
set HTTPS_PROXY=https://[2001:288:6004:17::69]:3128
set path_heroku=%Disk%:\Heroku\bin;

REM for portable git
set path_git=%Disk%:\Portablegit\bin;

path=%Disk%:;%path_python%;%path_git%;%path_heroku%;%path%;
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %Disk%:\wScite\SciTE.exe
start /MIN %Disk%:\wScite\SciTE.exe

Exit</pre>
<p>以下指令, 以 Heroku Cli 進行操作:</p>
<p>表示要利用 heroku.exe 在 cp2020 倉儲中建立名稱為 heroku 的 remote site.</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Y:\tmp\cp2020&gt;heroku login
heroku: Press any key to open up the browser to login or q to exit:
Opening browser to https:

Y:\tmp\cp2020&gt;heroku git:remote -a  cp2020
set git remote heroku to https://git.heroku.com/cp2020.git</pre>
<p>在 Heroku 伺服 CMSiMDE 靜態網頁:</p>
<p>需要在倉儲根目錄加入 index.php 與 composer.json</p>
<p>index.php</p>
<pre class="brush:php;auto-links:false;toolbar:false" contenteditable="false">&lt;?php
header( 'Location: index.html' ) ;
?&gt;</pre>
<p>composer.json</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">{}</pre>
<p>在 cp2020 倉儲設定 Github, Gitlab 與 Heroku 資料同步之後,</p>
<p><a href="http://mde.tw/cp2020">http://mde.tw/cp2020</a> (Github Pages)</p>
<p><a href="http://mdecourse.gitlab.io/cp2020">http://mdecourse.gitlab.io/cp2020</a> (Gitlab Pages)</p>
<p><a href="http://cp2020.herokuapp.com">http://cp2020.herokuapp.com</a> (Heroku Apache 與 PHP 伺服)</p>
<p>將可利用雲端主機同步備份並分享三個 CMSiMDE 靜態網站的內容.</p><h2>Machine Learning</h2>
<p><a href="https://www.kaggle.com/learn/deep-learning">https://www.kaggle.com/learn/deep-learning</a></p>
<p><a href="https://github.com/IKMLab/course_material">https://github.com/IKMLab/course_material</a> </p>
<p><a href="https://mropengate.blogspot.com/2019/03/ai-ai.html">https://mropengate.blogspot.com/2019/03/ai-ai.html</a> </p>
<h1>Projects</h1>
<h4>MCAD</h4>
<h4>雲端電腦輔助機械設計工具的比較</h4>
<p><a href="https://total3dprinting.org/onshape-vs-fusion-360/">https://total3dprinting.org/onshape-vs-fusion-360/</a> 是電腦輔助設計實習與協同產品設計實習課程中的議題之一, 比較 onshape 與 fusion 360 的功能與特性.</p>
<h4>利用 Python 建立雲端程式工具</h4>
<p>結合 Brython, Javascript Gist 與近端程式系統, 利用 Flask 為主體, 建立一個能夠部署在 Heroku 的 Python 網際程式編寫與執行系統.</p>
<p style="padding-left: 30px;">參考: <a href="http://mde.tw/lab/content/Python.html">http://mde.tw/lab/content/Python.html</a></p>
<p style="padding-left: 60px;">原先的系統是直接將導引給 Brython 執行的 Python 程式, 直接寫在網頁中, 然後透過 Javascript 與 html 按鈕逐一帶出已經編寫存入網頁的程式, 然後修改執行.</p>
<p style="padding-left: 60px;">假如, 能夠使用 <a href="http://mde.tw/lab/content/Javascript.html">http://mde.tw/lab/content/Javascript.html</a> 與 <a href="http://mde.tw/lab/content/Dart.html">http://mde.tw/lab/content/Dart.html</a> 中的方法, 將 Python 程式存於 Gist 或 Github Pages 網站, 然後透過 ajax 的方式帶至網際瀏覽器中執行, 並能利用 Javascript 按鈕將在網頁編寫執行的 Python 程式存至近端, 放入特定倉儲中進行版次管理.</p>
<h4>網際 Markdown 網誌系統</h4>
<p style="padding-left: 30px;">利用 Flask 與 GMail oauth2 登入後, 使用者在瀏覽器中編輯 Markdown 格式之 Pelican 網誌文章, 存為唯一檔案名.md 後上傳至 GDrive 特定目錄, 可再透過 Google Blogger API 將 Markdown 轉為 html 後登錄至 Google Blogger.</p>
<p style="padding-left: 30px;">最終將 Flask 程式部署在 Heroku, 僅提供特定使用者利用 Gmail 帳號登入後編寫文章, 並分別對 Blogger 發表文章, 以及將 Markdown 文章上傳至 GDrive 備用.</p>
<p style="padding-left: 30px;">使用工具: Flask, Google GMail oauth2, GDrive API, Google Blogger API</p>
<p><a href="https://github.com/tomzaragoza/Flask-LiteCMS">https://github.com/tomzaragoza/Flask-LiteCMS</a></p>
<h4>OpenStreetMap 應用</h4>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/OpenStreetMap">https://en.wikipedia.org/wiki/OpenStreetMap</a> </p>
<p style="padding-left: 30px;"><a href="https://www.openstreetmap.org/">https://www.openstreetmap.org/</a> </p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;"><a href="https://osmbuildings.org/" style="background-color: #ffff00;">https://osmbuildings.org/</a> </span></p>
<p style="padding-left: 30px;"><span style="background-color: #ffff00;"><a href="https://github.com/osmlab/labuildings">https://github.com/osmlab/labuildings</a></span></p>
<p style="padding-left: 30px;"><a href="https://osmbuildings.org/?lat=23.70168&amp;lon=120.43146&amp;zoom=17.8&amp;tilt=45&amp;rotation=338">綜一館</a> (<a href="https://osmbuildings.org/?lat=25.01737&amp;lon=121.53695&amp;zoom=17.0&amp;tilt=45&amp;rotation=25">ntu</a>, <a href="https://osmbuildings.org/?lat=42.36009&amp;lon=-71.09179&amp;zoom=17.8&amp;tilt=42&amp;rotation=6">mit</a>, <a href="https://osmbuildings.org/?lat=52.52180&amp;lon=13.40887&amp;zoom=16.8&amp;tilt=45&amp;rotation=-13">berlin</a>)</p>
<p style="padding-left: 30px;"><a href="https://github.com/dabreegster/abstreet">https://github.com/dabreegster/abstreet</a> </p>
<p style="padding-left: 30px;"><a href="https://ardupilot.org/dev/docs/sitl-with-webots.html">https://ardupilot.org/dev/docs/sitl-with-webots.html</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/osm-python-tools">https://github.com/mdecourse/osm-python-tools</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/iandees/planet-notes-dump">https://github.com/iandees/planet-notes-dump</a> </p>
<p style="padding-left: 30px;"><a href="https://planet.openstreetmap.org/">https://planet.openstreetmap.org/</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/openstreetmap/iD">https://github.com/openstreetmap/iD</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/osmlab/awesome-openstreetmap">https://github.com/osmlab/awesome-openstreetmap</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/Project-OSRM/osrm-backend">https://github.com/Project-OSRM/osrm-backend</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/hotosm/osm-export-tool-python">https://github.com/hotosm/osm-export-tool-python</a> </p>
<p style="padding-left: 30px;"><a href="https://wiki.openstreetmap.org/wiki/San_Francisco_Building_Height_Import">https://wiki.openstreetmap.org/wiki/San_Francisco_Building_Height_Import</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/osmlab/labuildings">https://github.com/osmlab/labuildings</a> </p>
<p style="padding-left: 30px;"><a href="https://extract.bbbike.org/">https://extract.bbbike.org/</a> </p>
<p style="padding-left: 30px;"><a href="https://wiki.openstreetmap.org/wiki/San_Francisco_Building_Height_Import">https://wiki.openstreetmap.org/wiki/San_Francisco_Building_Height_Import</a> </p>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/Lidar">https://en.wikipedia.org/wiki/Lidar</a> </p>
<p style="padding-left: 30px;"><a href="https://techcrunch.com/2019/08/02/digitizing-construction-sites-with-scaled-robotics/">https://techcrunch.com/2019/08/02/digitizing-construction-sites-with-scaled-robotics/</a> </p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/FAMJpijwQnQ" width="560"></iframe></p>
<h4>圖形介面程式開發</h4>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-5857-6">Beginning PyQt</a> 終於出書, 之前 <a href="https://riverbankcomputing.com/software/pyqt/download5">PyQt5</a> 曾被用來開發平面機構分析與合成套件 - <a href="https://github.com/KmolYuan/Pyslvs-UI">Pyslvs-UI</a>, 接下來 <a href="https://riverbankcomputing.com/software/pyqt/download5">PyQt5</a> 或 <a href="https://www.qt.io/qt-for-python">Qt for Python</a> 還能用來開發甚麼機械設計相關工具套件?</p>
<h4>Discourse 論壇與 <a href="https://pypi.org/project/pydiscourse/">Pydiscourse</a></h4>
<p style="padding-left: 30px;"><a href="https://forum.eng.nfu.edu.tw/">https://forum.eng.nfu.edu.tw/</a> 以 Ruby 編寫, 若能透過 <a href="https://github.com/tindie/pydiscourse">Pydiscourse</a> 與 <a href="https://docs.discourse.org/">https://docs.discourse.org/</a> 中的 Discourse API 結合, 將可延伸 <a href="http://lab.mde.tw/blog/sync-pelican-and-blogger-content.html">http://lab.mde.tw/blog/sync-pelican-and-blogger-content.html</a> 中的 Markdown 文章, 在<a href="https://github.com/leo-editor/leo-editor">Leo Editor</a> 的編輯下, 將內容同步至 <a href="https://github.com/getpelican/pelican">Pelican</a> 與 <a href="https://www.blogger.com/">Blogger</a> 網誌.</p>